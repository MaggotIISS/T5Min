<?xml version="1.0" encoding="UTF-8"?>
<!-- <?xml-stylesheet type="text/xsl" href="C:\\T5\_JS\Catalogs.xsl"?> --><!DOCTYPE C:\\T5\_JS\Catalogs SYSTEM "file:///C://T5/_JS/DTD.dtd">
<!-- Use C:\\T5\_JS\Catalogs.xsl -->
<C:\\T5\_JS\Catalogs xmlns:C:\\T5\_JS\Catalogs="file:///C://T5/_JS/ns.txt">
---- -------------------- --------- ---------------------------------------- ------ ------- ------ ----- -- - --- -- ---- --------------
"package panels;"
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"import dbviewer.ConsoleWindow;"
  <Catalog>
    <col0>import dbviewer.ConsoleWindow;</col0>
  </Catalog>
 
"import dbviewer.DBPublic;"
  <Catalog>
    <col0>import dbviewer.DBPublic;</col0>
  </Catalog>
 
"import dbviewer.T5JumpCalc;"
  <Catalog>
    <col0>import dbviewer.T5JumpCalc;</col0>
  </Catalog>
 
"import dbviewer.globals.GlobalMethods;"
  <Catalog>
    <col0>import dbviewer.globals.GlobalMethods;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalMethods.getLinesFromTable;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalMethods.getLinesFromTable;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalMethods.getStringFromTable;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalMethods.getStringFromTable;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalMethods.getTableTitles;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalMethods.getTableTitles;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalMethods.rollUPP;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalMethods.rollUPP;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalVariables.CRLF;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalVariables.CRLF;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalVariables.FS;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalVariables.FS;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalVariables.T5;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalVariables.T5;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalVariables._JS;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalVariables._JS;</col0>
  </Catalog>
 
"import static dbviewer.globals.GlobalVariables._SEC;"
  <Catalog>
    <col0>import static dbviewer.globals.GlobalVariables._SEC;</col0>
  </Catalog>
 
"import dbviewer.globals.ObjectAnalyzer;"
  <Catalog>
    <col0>import dbviewer.globals.ObjectAnalyzer;</col0>
  </Catalog>
 
"import fx.RenameFX;"
  <Catalog>
    <col0>import fx.RenameFX;</col0>
  </Catalog>
 
"import fx.multitext.MultiText;"
  <Catalog>
    <col0>import fx.multitext.MultiText;</col0>
  </Catalog>
 
"import java.awt.AWTException;"
  <Catalog>
    <col0>import java.awt.AWTException;</col0>
  </Catalog>
 
"import java.awt.Color;"
  <Catalog>
    <col0>import java.awt.Color;</col0>
  </Catalog>
 
"import java.awt.Component;"
  <Catalog>
    <col0>import java.awt.Component;</col0>
  </Catalog>
 
"import java.awt.Graphics;"
  <Catalog>
    <col0>import java.awt.Graphics;</col0>
  </Catalog>
 
"import java.awt.Graphics2D;"
  <Catalog>
    <col0>import java.awt.Graphics2D;</col0>
  </Catalog>
 
"import java.awt.Point;"
  <Catalog>
    <col0>import java.awt.Point;</col0>
  </Catalog>
 
"import java.awt.Polygon;"
  <Catalog>
    <col0>import java.awt.Polygon;</col0>
  </Catalog>
 
"import java.awt.Rectangle;"
  <Catalog>
    <col0>import java.awt.Rectangle;</col0>
  </Catalog>
 
"import java.awt.Robot;"
  <Catalog>
    <col0>import java.awt.Robot;</col0>
  </Catalog>
 
"import java.awt.Toolkit;"
  <Catalog>
    <col0>import java.awt.Toolkit;</col0>
  </Catalog>
 
"import java.awt.datatransfer.Clipboard;"
  <Catalog>
    <col0>import java.awt.datatransfer.Clipboard;</col0>
  </Catalog>
 
"import java.awt.datatransfer.StringSelection;"
  <Catalog>
    <col0>import java.awt.datatransfer.StringSelection;</col0>
  </Catalog>
 
"import java.awt.event.ActionEvent;"
  <Catalog>
    <col0>import java.awt.event.ActionEvent;</col0>
  </Catalog>
 
"import java.awt.event.MouseAdapter;"
  <Catalog>
    <col0>import java.awt.event.MouseAdapter;</col0>
  </Catalog>
 
"import java.awt.event.MouseEvent;"
  <Catalog>
    <col0>import java.awt.event.MouseEvent;</col0>
  </Catalog>
 
"import java.awt.image.BufferedImage;"
  <Catalog>
    <col0>import java.awt.image.BufferedImage;</col0>
  </Catalog>
 
"import static java.awt.image.BufferedImage.TYPE_INT_ARGB;"
  <Catalog>
    <col0>import static java.awt.image.BufferedImage.TYPE_INT_ARGB;</col0>
  </Catalog>
 
"import static java.awt.image.BufferedImage.TYPE_INT_RGB;"
  <Catalog>
    <col0>import static java.awt.image.BufferedImage.TYPE_INT_RGB;</col0>
  </Catalog>
 
"import java.io.BufferedReader;"
  <Catalog>
    <col0>import java.io.BufferedReader;</col0>
  </Catalog>
 
"import java.io.File;"
  <Catalog>
    <col0>import java.io.File;</col0>
  </Catalog>
 
"import java.io.IOException;"
  <Catalog>
    <col0>import java.io.IOException;</col0>
  </Catalog>
 
"import java.io.InputStreamReader;"
  <Catalog>
    <col0>import java.io.InputStreamReader;</col0>
  </Catalog>
 
"import java.net.MalformedURLException;"
  <Catalog>
    <col0>import java.net.MalformedURLException;</col0>
  </Catalog>
 
"import java.net.URL;"
  <Catalog>
    <col0>import java.net.URL;</col0>
  </Catalog>
 
"import java.net.URLConnection;"
  <Catalog>
    <col0>import java.net.URLConnection;</col0>
  </Catalog>
 
"import java.text.NumberFormat;"
  <Catalog>
    <col0>import java.text.NumberFormat;</col0>
  </Catalog>
 
"import java.time.LocalTime;"
  <Catalog>
    <col0>import java.time.LocalTime;</col0>
  </Catalog>
 
"import java.util.ArrayList;"
  <Catalog>
    <col0>import java.util.ArrayList;</col0>
  </Catalog>
 
"import java.util.Arrays;"
  <Catalog>
    <col0>import java.util.Arrays;</col0>
  </Catalog>
 
"import java.util.Properties;"
  <Catalog>
    <col0>import java.util.Properties;</col0>
  </Catalog>
 
"import java.util.TreeMap;"
  <Catalog>
    <col0>import java.util.TreeMap;</col0>
  </Catalog>
 
"import java.util.logging.Level;"
  <Catalog>
    <col0>import java.util.logging.Level;</col0>
  </Catalog>
 
"import java.util.logging.Logger;"
  <Catalog>
    <col0>import java.util.logging.Logger;</col0>
  </Catalog>
 
"import javafx.application.Platform;"
  <Catalog>
    <col0>import javafx.application.Platform;</col0>
  </Catalog>
 
"import javafx.embed.swing.JFXPanel;"
  <Catalog>
    <col0>import javafx.embed.swing.JFXPanel;</col0>
  </Catalog>
 
"import javafx.scene.Scene;"
  <Catalog>
    <col0>import javafx.scene.Scene;</col0>
  </Catalog>
 
"import javafx.scene.control.Button;"
  <Catalog>
    <col0>import javafx.scene.control.Button;</col0>
  </Catalog>
 
"import javafx.scene.layout.FlowPane;"
  <Catalog>
    <col0>import javafx.scene.layout.FlowPane;</col0>
  </Catalog>
 
"import javafx.stage.Stage;"
  <Catalog>
    <col0>import javafx.stage.Stage;</col0>
  </Catalog>
 
"import javax.imageio.ImageIO;"
  <Catalog>
    <col0>import javax.imageio.ImageIO;</col0>
  </Catalog>
 
"import javax.swing.ComboBoxModel;"
  <Catalog>
    <col0>import javax.swing.ComboBoxModel;</col0>
  </Catalog>
 
"import javax.swing.DefaultComboBoxModel;"
  <Catalog>
    <col0>import javax.swing.DefaultComboBoxModel;</col0>
  </Catalog>
 
"import javax.swing.DefaultListModel;"
  <Catalog>
    <col0>import javax.swing.DefaultListModel;</col0>
  </Catalog>
 
"import javax.swing.JComboBox;"
  <Catalog>
    <col0>import javax.swing.JComboBox;</col0>
  </Catalog>
 
"import javax.swing.JFileChooser;"
  <Catalog>
    <col0>import javax.swing.JFileChooser;</col0>
  </Catalog>
 
"import javax.swing.JFrame;"
  <Catalog>
    <col0>import javax.swing.JFrame;</col0>
  </Catalog>
 
"import javax.swing.JLabel;"
  <Catalog>
    <col0>import javax.swing.JLabel;</col0>
  </Catalog>
 
"import javax.swing.JOptionPane;"
  <Catalog>
    <col0>import javax.swing.JOptionPane;</col0>
  </Catalog>
 
"import javax.swing.JPanel;"
  <Catalog>
    <col0>import javax.swing.JPanel;</col0>
  </Catalog>
 
"import javax.swing.JScrollPane;"
  <Catalog>
    <col0>import javax.swing.JScrollPane;</col0>
  </Catalog>
 
"import javax.swing.JTextArea;"
  <Catalog>
    <col0>import javax.swing.JTextArea;</col0>
  </Catalog>
 
"import javax.swing.JTextField;"
  <Catalog>
    <col0>import javax.swing.JTextField;</col0>
  </Catalog>
 
"import javax.swing.ListModel;"
  <Catalog>
    <col0>import javax.swing.ListModel;</col0>
  </Catalog>
 
"import javax.swing.SwingUtilities;"
  <Catalog>
    <col0>import javax.swing.SwingUtilities;</col0>
  </Catalog>
 
"import javax.swing.event.ChangeEvent;"
  <Catalog>
    <col0>import javax.swing.event.ChangeEvent;</col0>
  </Catalog>
 
"import javax.swing.filechooser.FileFilter;"
  <Catalog>
    <col0>import javax.swing.filechooser.FileFilter;</col0>
  </Catalog>
 
"import static linkpictext.Panel4LPT.splitText;"
  <Catalog>
    <col0>import static linkpictext.Panel4LPT.splitText;</col0>
  </Catalog>
 
"import static panels.Panel4T5CounterMaker.ta4Read;"
  <Catalog>
    <col0>import static panels.Panel4T5CounterMaker.ta4Read;</col0>
  </Catalog>
 
"import static panels.Panel4T5Scripting.showFullNames;"
  <Catalog>
    <col0>import static panels.Panel4T5Scripting.showFullNames;</col0>
  </Catalog>
 
"import static panels.Panel4T5Scripting.writeXML;"
  <Catalog>
    <col0>import static panels.Panel4T5Scripting.writeXML;</col0>
  </Catalog>
 
"import starters.MyChart;"
  <Catalog>
    <col0>import starters.MyChart;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"/**"
  <Catalog>
    <col0>/**</col0>
  </Catalog>
 
" @author maggot"
  <Catalog>
    <col0> @author maggot</col0>
  </Catalog>
 
" */"
  <Catalog>
    <col0> */</col0>
  </Catalog>
 
"public class Panel4T5Locator extends Panel4 {"
  <Catalog>
    <col0>public class Panel4T5Locator extends Panel4 {</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   This method is called from within the constructor to initialize the form."
  <Catalog>
    <col0>   This method is called from within the constructor to initialize the form.</col0>
  </Catalog>
 
"   WARNING: Do NOT modify this code. The content of this method is always"
  <Catalog>
    <col0>   WARNING: Do NOT modify this code. The content of this method is always</col0>
  </Catalog>
 
"   regenerated by the Form Editor."
  <Catalog>
    <col0>   regenerated by the Form Editor.</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  @SuppressWarnings("unchecked")"
  <Catalog>
    <col0>  @SuppressWarnings(unchecked)</col0>
  </Catalog>
 
"  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents"
  <Catalog>
    <col0>  // <editor-fold defaultstate=collapsed desc=Generated Code>//GEN-BEGIN:initComponents</col0>
  </Catalog>
 
"  private void initComponents() {"
  <Catalog>
    <col0>  private void initComponents() {</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel1 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel1 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel2 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel2 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jta4Sec = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Sec = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Line = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Line = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Sys = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Sys = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Info = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Info = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Near = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Near = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Orb = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Orb = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Dest = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Dest = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Str = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Str = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4HTML = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4HTML = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4Sectors = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Sectors = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jta4UWP = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4UWP = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    panel4T5World = new javax.swing.JPanel();"
  <Catalog>
    <col0>    panel4T5World = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    jta4Bases = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Bases = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    panel4WorldPic = new javax.swing.JPanel();"
  <Catalog>
    <col0>    panel4WorldPic = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    jta4Sub = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4Sub = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jcb4Sec = new javax.swing.JComboBox();"
  <Catalog>
    <col0>    jcb4Sec = new javax.swing.JComboBox();</col0>
  </Catalog>
 
"    jcb4Sub = new javax.swing.JComboBox<String>();"
  <Catalog>
    <col0>    jcb4Sub = new javax.swing.JComboBox<String>();</col0>
  </Catalog>
 
"    jcb4Sys = new javax.swing.JComboBox<String>();"
  <Catalog>
    <col0>    jcb4Sys = new javax.swing.JComboBox<String>();</col0>
  </Catalog>
 
"    jcb4Star = new javax.swing.JComboBox();"
  <Catalog>
    <col0>    jcb4Star = new javax.swing.JComboBox();</col0>
  </Catalog>
 
"    panel4Sec = new panels.Panel4Grid3x3();"
  <Catalog>
    <col0>    panel4Sec = new panels.Panel4Grid3x3();</col0>
  </Catalog>
 
"    panel4Sub = new panels.Panel4Grid6x6();"
  <Catalog>
    <col0>    panel4Sub = new panels.Panel4Grid6x6();</col0>
  </Catalog>
 
"    panel4Sys = new panels.Panel4T5BitSub();"
  <Catalog>
    <col0>    panel4Sys = new panels.Panel4T5BitSub();</col0>
  </Catalog>
 
"    js4Dist = new javax.swing.JSlider();"
  <Catalog>
    <col0>    js4Dist = new javax.swing.JSlider();</col0>
  </Catalog>
 
"    panel4Jump = new javax.swing.JPanel();"
  <Catalog>
    <col0>    panel4Jump = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    jLabel3 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel3 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jComboBox19 = new javax.swing.JComboBox();"
  <Catalog>
    <col0>    jComboBox19 = new javax.swing.JComboBox();</col0>
  </Catalog>
 
"    jCheckBox2 = new javax.swing.JCheckBox();"
  <Catalog>
    <col0>    jCheckBox2 = new javax.swing.JCheckBox();</col0>
  </Catalog>
 
"    jCheckBox1 = new javax.swing.JCheckBox();"
  <Catalog>
    <col0>    jCheckBox1 = new javax.swing.JCheckBox();</col0>
  </Catalog>
 
"    panel4Strength = new javax.swing.JPanel();"
  <Catalog>
    <col0>    panel4Strength = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    SDBs = new javax.swing.JLabel();"
  <Catalog>
    <col0>    SDBs = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    defbats = new javax.swing.JLabel();"
  <Catalog>
    <col0>    defbats = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    Troops = new javax.swing.JLabel();"
  <Catalog>
    <col0>    Troops = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    troopunits = new javax.swing.JLabel();"
  <Catalog>
    <col0>    troopunits = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    squadrons = new javax.swing.JLabel();"
  <Catalog>
    <col0>    squadrons = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    sdbs1 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    sdbs1 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    Rons = new javax.swing.JLabel();"
  <Catalog>
    <col0>    Rons = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    CF = new javax.swing.JLabel();"
  <Catalog>
    <col0>    CF = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jsp4Jump = new javax.swing.JScrollPane();"
  <Catalog>
    <col0>    jsp4Jump = new javax.swing.JScrollPane();</col0>
  </Catalog>
 
"    jl4Jump = new javax.swing.JList();"
  <Catalog>
    <col0>    jl4Jump = new javax.swing.JList();</col0>
  </Catalog>
 
"    jsp4All = new javax.swing.JScrollPane();"
  <Catalog>
    <col0>    jsp4All = new javax.swing.JScrollPane();</col0>
  </Catalog>
 
"    jta4All = new javax.swing.JTextArea();"
  <Catalog>
    <col0>    jta4All = new javax.swing.JTextArea();</col0>
  </Catalog>
 
"    jcb4All = new javax.swing.JComboBox<>();"
  <Catalog>
    <col0>    jcb4All = new javax.swing.JComboBox<>();</col0>
  </Catalog>
 
"    jtf4UWP = new javax.swing.JTextField();"
  <Catalog>
    <col0>    jtf4UWP = new javax.swing.JTextField();</col0>
  </Catalog>
 
"    jcb4Lang = new javax.swing.JComboBox<String>();"
  <Catalog>
    <col0>    jcb4Lang = new javax.swing.JComboBox<String>();</col0>
  </Catalog>
 
"    jtf4Word = new javax.swing.JTextField();"
  <Catalog>
    <col0>    jtf4Word = new javax.swing.JTextField();</col0>
  </Catalog>
 
"    jcb4Options = new javax.swing.JComboBox<String>();"
  <Catalog>
    <col0>    jcb4Options = new javax.swing.JComboBox<String>();</col0>
  </Catalog>
 
"    panel4Pic = new javax.swing.JPanel();"
  <Catalog>
    <col0>    panel4Pic = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    jPanel1 = new javax.swing.JPanel();"
  <Catalog>
    <col0>    jPanel1 = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    sC = new javax.swing.JLabel();"
  <Catalog>
    <col0>    sC = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    sB = new javax.swing.JLabel();"
  <Catalog>
    <col0>    sB = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    sS = new javax.swing.JLabel();"
  <Catalog>
    <col0>    sS = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    panel4T5PBG = new javax.swing.JPanel();"
  <Catalog>
    <col0>    panel4T5PBG = new javax.swing.JPanel();</col0>
  </Catalog>
 
"    jLabel5 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel5 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel6 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel6 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel7 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel7 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel8 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel8 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel9 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel9 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel10 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel10 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel11 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel11 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jLabel12 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel12 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    jScrollPane1 = new javax.swing.JScrollPane();"
  <Catalog>
    <col0>    jScrollPane1 = new javax.swing.JScrollPane();</col0>
  </Catalog>
 
"    jsp4Maps = new javax.swing.JScrollPane();"
  <Catalog>
    <col0>    jsp4Maps = new javax.swing.JScrollPane();</col0>
  </Catalog>
 
"    panel4Maps = new panels.Panel4T5BitSub();"
  <Catalog>
    <col0>    panel4Maps = new panels.Panel4T5BitSub();</col0>
  </Catalog>
 
"    jtf4Find = new javax.swing.JTextField();"
  <Catalog>
    <col0>    jtf4Find = new javax.swing.JTextField();</col0>
  </Catalog>
 
"    jComboBox1 = new javax.swing.JComboBox<String>();"
  <Catalog>
    <col0>    jComboBox1 = new javax.swing.JComboBox<String>();</col0>
  </Catalog>
 
"    jButton1 = new javax.swing.JButton();"
  <Catalog>
    <col0>    jButton1 = new javax.swing.JButton();</col0>
  </Catalog>
 
"    jcb4Career = new javax.swing.JComboBox();"
  <Catalog>
    <col0>    jcb4Career = new javax.swing.JComboBox();</col0>
  </Catalog>
 
"    js4Terms = new javax.swing.JSpinner();"
  <Catalog>
    <col0>    js4Terms = new javax.swing.JSpinner();</col0>
  </Catalog>
 
"    jtf4UPP = new javax.swing.JTextField();"
  <Catalog>
    <col0>    jtf4UPP = new javax.swing.JTextField();</col0>
  </Catalog>
 
"    jButton2 = new javax.swing.JButton();"
  <Catalog>
    <col0>    jButton2 = new javax.swing.JButton();</col0>
  </Catalog>
 
"    jLabel4 = new javax.swing.JLabel();"
  <Catalog>
    <col0>    jLabel4 = new javax.swing.JLabel();</col0>
  </Catalog>
 
"    Sex = new javax.swing.JCheckBox();"
  <Catalog>
    <col0>    Sex = new javax.swing.JCheckBox();</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel1.setText("X");"
  <Catalog>
    <col0>    jLabel1.setText(X);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel2.setText("Y");"
  <Catalog>
    <col0>    jLabel2.setText(Y);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Sec.setColumns(15);"
  <Catalog>
    <col0>    jta4Sec.setColumns(15);</col0>
  </Catalog>
 
"    jta4Sec.setRows(5);"
  <Catalog>
    <col0>    jta4Sec.setRows(5);</col0>
  </Catalog>
 
"    jta4Sec.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jta4Sec.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jta4SecMouseClicked(evt);"
  <Catalog>
    <col0>        jta4SecMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Line.setColumns(15);"
  <Catalog>
    <col0>    jta4Line.setColumns(15);</col0>
  </Catalog>
 
"    jta4Line.setRows(5);"
  <Catalog>
    <col0>    jta4Line.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Sys.setColumns(15);"
  <Catalog>
    <col0>    jta4Sys.setColumns(15);</col0>
  </Catalog>
 
"    jta4Sys.setRows(5);"
  <Catalog>
    <col0>    jta4Sys.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Info.setColumns(15);"
  <Catalog>
    <col0>    jta4Info.setColumns(15);</col0>
  </Catalog>
 
"    jta4Info.setRows(5);"
  <Catalog>
    <col0>    jta4Info.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Near.setColumns(20);"
  <Catalog>
    <col0>    jta4Near.setColumns(20);</col0>
  </Catalog>
 
"    jta4Near.setRows(5);"
  <Catalog>
    <col0>    jta4Near.setRows(5);</col0>
  </Catalog>
 
"    jta4Near.setTabSize(5);"
  <Catalog>
    <col0>    jta4Near.setTabSize(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Orb.setColumns(20);"
  <Catalog>
    <col0>    jta4Orb.setColumns(20);</col0>
  </Catalog>
 
"    jta4Orb.setRows(5);"
  <Catalog>
    <col0>    jta4Orb.setRows(5);</col0>
  </Catalog>
 
"    jta4Orb.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jta4Orb.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jta4OrbMouseClicked(evt);"
  <Catalog>
    <col0>        jta4OrbMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Dest.setColumns(20);"
  <Catalog>
    <col0>    jta4Dest.setColumns(20);</col0>
  </Catalog>
 
"    jta4Dest.setRows(5);"
  <Catalog>
    <col0>    jta4Dest.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Str.setColumns(20);"
  <Catalog>
    <col0>    jta4Str.setColumns(20);</col0>
  </Catalog>
 
"    jta4Str.setRows(5);"
  <Catalog>
    <col0>    jta4Str.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4HTML.setColumns(20);"
  <Catalog>
    <col0>    jta4HTML.setColumns(20);</col0>
  </Catalog>
 
"    jta4HTML.setRows(5);"
  <Catalog>
    <col0>    jta4HTML.setRows(5);</col0>
  </Catalog>
 
"    jta4HTML.setText("<!DOCTYPE html>\n<html>\n  <head>\n    <title>TITLE</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n  </head>\n  <body>\n\n<br>\natlas<br>\ncandy<br>\nposter<br>\nprint<br>\n<br>\n<a href=\"http://www.travellermap.com/?x=-98&y=73&scale=100&options=0&style=atlas\">\nhttp://www.travellermap.com/?x=-98&y=73&scale=100&options=0&style=atlas<br>\n<br>\n<br>\n\n<iframe\nsrc=\"http://travellermap.com/iframe.htm?sector=SEC&hex=HEX\"\nstyle=\"width: WID; height: HGT; border: BORDER;\">\n</iframe>\n\n<br>\n<img src=\"http://www.travellermap.com/?x=-98&y=73&scale=80&options=0&style=atlas\">\n<br>\n\n<img src=\"http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=atlas\">\n<br>\n\n<img src=\"http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=candy\">\n<br>\n\n<img src=\"http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=poster\">\n<br>\n\n<a href=\"<img src=\"http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=print\">\n<img src=\"http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=STYLE\">\n<br>\n\n<a href=\"http://www.travellermap.com/world?sector=SEC&hex=HEX\">\nhttp://www.travellermap.com/world?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/api/poster?sector=SPIN&scale=SCALE&options=OPTIONS&style=STYLE\">\nhttp://travellermap.com/api/poster?sector=SPIN&scale=SCALE&options=OPTIONS&style=STYLE\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/image\">\nhttp://travellermap.com/data/SEC/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/A/image\">\nhttp://travellermap.com/data/SEC/A/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/B/image\">\nhttp://travellermap.com/data/SEC/B/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C/image\">\nhttp://travellermap.com/data/SEC/C/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/D/image\">\nhttp://travellermap.com/data/SEC/D/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/E/image\">\nhttp://travellermap.com/data/SEC/E/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/F/image\">\nhttp://travellermap.com/data/SEC/F/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/G/image\">\nhttp://travellermap.com/data/SEC/G/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/H/image\">\nhttp://travellermap.com/data/SEC/H/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/I/image\">\nhttp://travellermap.com/data/SEC/I/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/J/image\">\nhttp://travellermap.com/data/SEC/J/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/K/image\">\nhttp://travellermap.com/data/SEC/K/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/L/image\">\nhttp://travellermap.com/data/SEC/L/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/M/image\">\nhttp://travellermap.com/data/SEC/M/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/N/image\">\nhttp://travellermap.com/data/SEC/N/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/O/image\">\nhttp://travellermap.com/data/SEC/O/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/P/image\">\nhttp://travellermap.com/data/SEC/P/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/image\">\nhttp://travellermap.com/data/SEC/image\n<br>\n\n<a href=\"http://travellermap.com/api/coordinates?sx=SX&sy=SY\">\nhttp://travellermap.com/api/coordinates?sx=SX&sy=SY\n<br>\n\n<a href=\"http://travellermap.com/api/coordinates?sx=SX&sy=SY&hx=HX&hy=HY\">\nhttp://travellermap.com/api/coordinates?sx=SX&sy=SY&hx=HX&hy=HY\n<br>\n\n<a href=\"http://travellermap.com/api/coordinates?sector=SEC&hex=HEX\">\nhttp://travellermap.com/api/coordinates?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/api/coordinates?sector=SEC\">\nhttp://travellermap.com/api/coordinates?sector=SEC\n<br>\n\n<a href=\"http://travellermap.com/api/credits?sector=SEC&scale=SCALE&options=OPTIONS &style=STYLE\">\nhttp://travellermap.com/api/credits?sector=SEC&scale=SCALE&options=OPTIONS &style=STYLE\n<br>\n\n<a href=\"http://travellermap.com/api/credits?sector=SEC&hex=HEX\">\nhttp://travellermap.com/api/credits?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/api/credits?sx=SX&sy=SY\">\nhttp://travellermap.com/api/credits?sx=SX&sy=SY\n<br>\n\n<a href=\"http://travellermap.com/api/credits?sx=SX&sy=SY&hx=HX&hy=HY\">\nhttp://travellermap.com/api/credits?sx=SX&sy=SY&hx=HX&hy=HY\n<br>\n\n<a href=\"http://travellermap.com/api/credits?x=X&y=Y\">\nhttp://travellermap.com/api/credits?x=X&y=Y\n<br>\n\n<a href=\"http://www.travellermap.com/api/credits?x=-110&y=-70\">\nhttp://www.travellermap.com/api/credits?x=-110&y=-70\n<br>\n\n<a href=\"http://travellermap.com/api/sec?sector=SEC\">\nhttp://travellermap.com/api/sec?sector=SEC\n<br>\n\n<a href=\"http://travellermap.com/api/sec?sector=SEC&hex=HEX\">\nhttp://travellermap.com/api/sec?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/api/sec?sx=SX&sy=SY\">\nhttp://travellermap.com/api/sec?sx=SX&sy=SY\n<br>\n\n<a href=\"http://travellermap.com/api/metadata?sector=SEC\">\nhttp://travellermap.com/api/metadata?sector=SEC\n<br>\n\n<a href=\"http://travellermap.com/api/metadata?sx=SX&sy=SY\">\nhttp://travellermap.com/api/metadata?sx=SX&sy=SY\n<br>\n\n<a href=\"http://www.travellermap.com/api/metadata?sector=SEC\">\nhttp://www.travellermap.com/api/metadata?sector=SEC\n<br>\n\n<a href=\"http://www.travellermap.com/api/msec?sector=SEC\">\nhttp://www.travellermap.com/api/msec?sector=SEC\n<br>\n\n<a href=\"http://www.travellermap.com/api/universe?era=ERA\">\nhttp://www.travellermap.com/api/universe?era=ERA\n<br>\n\n<a href=\"http://www.travellermap.com/api/tile?x=-24.5&y=Y8&scale=SCALE&options=OPTIONS &style=STYLE\">\nhttp://www.travellermap.com/api/tile?x=-24.5&y=Y8&scale=SCALE&options=OPTIONS &style=STYLE\n<br>\n\n<a href=\"http://travellermap.com/api/poster?sector=SEC\">\nhttp://travellermap.com/api/poster?sector=SEC\n<br>\n\n<a href=\"http://travellermap.com/api/poster?sector=SEC\">\nhttp://travellermap.com/api/poster?sector=SEC\n<br>\n\n<a href=\"http://travellermap.com/api/jumpmap?x=X&y=Y\">\nhttp://travellermap.com/api/jumpmap?x=X&y=Y\n<br>\n\n<a href=\"http://travellermap.com/api/jumpmap?sx=SX&-1=sy&hx=HX&hy=HY\">\nhttp://travellermap.com/api/jumpmap?sx=SX&-1=sy&hx=HX&hy=HY\n<br>\n\n<a href=\"http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX\">\nhttp://travellermap.com/api/jumpmap?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/api/msec?sector=SEC\">\nhttp://travellermap.com/api/msec?sector=SEC\n<br>\n\n<a href=\"http://travellermap.com/api/msec?sx=SX&sy=SY\">\nhttp://travellermap.com/api/msec?sx=SX&sy=SY\n<br>\n\n<a href=\"http://travellermap.com/api/jumpworlds?x=X&y=Y\">\nhttp://travellermap.com/api/jumpworlds?x=X&y=Y\n<br>\n\n<a href=\"http://travellermap.com/api/jumpworlds?sx=SX&sy=SY&hx=HX&hy=HY\">\nhttp://travellermap.com/api/jumpworlds?sx=SX&sy=SY&hx=HX&hy=HY\n<br>\n\n<a href=\"http://travellermap.com/api/jumpworlds?sector=SEC\n&hex=HEX\">http://travellermap.com/api/jumpworlds?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/api/search?q=NAME\">\nhttp://travellermap.com/api/search?q=NAME\n<br>\n\n<a href=\"http://travellermap.com/api/universe\">\nhttp://travellermap.com/api/universe\n<br>\n\n<a href=\"http://www.travellermap.com/api/coordinates?sector=SEC&hex=HEX\">\nhttp://www.travellermap.com/api/coordinates?sector=SEC&hex=HEX\n<br>\n\n<a href=\"http://travellermap.com/data\">\nhttp://travellermap.com/data\n<br>\n\n<a href=\"http://travellermap.com/data/SEC\">\nhttp://travellermap.com/data/SEC\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/tab\">\nhttp://travellermap.com/data/SEC/tab\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/sec\">\nhttp://travellermap.com/data/SEC/sec\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/metadata\">\nhttp://travellermap.com/data/SEC/metadata\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/msec\">\nhttp://travellermap.com/data/SEC/msec\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/image\">\nhttp://travellermap.com/data/SEC/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/coordinates\">\nhttp://travellermap.com/data/SEC/coordinates\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/credits\">\nhttp://travellermap.com/data/SEC/credits\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/A\">\nhttp://travellermap.com/data/SEC/A\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/B\">\nhttp://travellermap.com/data/SEC/B\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C\">\nhttp://travellermap.com/data/SEC/C\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/D\">\nhttp://travellermap.com/data/SEC/D\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/E\">\nhttp://travellermap.com/data/SEC/E\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/F\">\nhttp://travellermap.com/data/SEC/F\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/G\">\nhttp://travellermap.com/data/SEC/G\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/H\">\nhttp://travellermap.com/data/SEC/H\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/I\">\nhttp://travellermap.com/data/SEC/I\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/J\">\nhttp://travellermap.com/data/SEC/J\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/K\">\nhttp://travellermap.com/data/SEC/K\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/L\">\nhttp://travellermap.com/data/SEC/L\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/M\">\nhttp://travellermap.com/data/SEC/M\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/N\">\nhttp://travellermap.com/data/SEC/N\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/O\">\nhttp://travellermap.com/data/SEC/O\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/P\">\nhttp://travellermap.com/data/SEC/P\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C/tab\">\nhttp://travellermap.com/data/SEC/C/tab\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C/sec\">\nhttp://travellermap.com/data/SEC/C/sec\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C/image\">\nhttp://travellermap.com/data/SEC/C/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/coordinates\">\nhttp://travellermap.com/data/SEC/HEX/coordinates\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/credits\">\nhttp://travellermap.com/data/SEC/HEX/credits\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/jump/9\">\nhttp://travellermap.com/data/SEC/HEX/jump/9\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/jump/9/image\">\nhttp://travellermap.com/data/SEC/HEX/jump/9/image\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/coordinates\">\nhttp://travellermap.com/data/SEC/coordinates\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/coordinates\">\nhttp://travellermap.com/data/SEC/HEX/coordinates\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/credits\">\nhttp://travellermap.com/data/SEC/credits\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/credits\">\nhttp://travellermap.com/data/SEC/HEX/credits\n<br>\n\n<a href=\"http://travellermap.com/data/SEC\">\nhttp://travellermap.com/data/SEC\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/sec\">\nhttp://travellermap.com/data/SEC/sec\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/tab\">\nhttp://travellermap.com/data/SEC/tab\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C\">\nhttp://travellermap.com/data/SEC/C\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C/sec\">\nhttp://travellermap.com/data/SEC/C/sec\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/C/tab\">\nhttp://travellermap.com/data/SEC/C/tab\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/metadata\">\nhttp://travellermap.com/data/SEC/metadata\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/msec\">\nhttp://travellermap.com/data/SEC/msec\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/jump/9\">\nhttp://travellermap.com/data/SEC/HEX/jump/9\n<br>\n\n<a href=\"http://travellermap.com/data/SEC/HEX/jump/9/image\">\nhttp://travellermap.com/data/SEC/HEX/jump/9/image\n<br>\n\n<a href=\"http://travellermap.com/data\">\nhttp://travellermap.com/data\n</a href>\n<br>\n<br>\n<br>\n<br>\n");"
  <Catalog>
    <col0>    jta4HTML.setText(<!DOCTYPE html>\n<html>\n  <head>\n    <title>TITLE</title>\n    <meta charset=\UTF-8\>\n    <meta name=\viewport\ content=\width=device-width\>\n  </head>\n  <body>\n\n<br>\natlas<br>\ncandy<br>\nposter<br>\nprint<br>\n<br>\n<a href=\http://www.travellermap.com/?x=-98&y=73&scale=100&options=0&style=atlas\>\nhttp://www.travellermap.com/?x=-98&y=73&scale=100&options=0&style=atlas<br>\n<br>\n<br>\n\n<iframe\nsrc=\http://travellermap.com/iframe.htm?sector=SEC&hex=HEX\\nstyle=\width: WID; height: HGT; border: BORDER;\>\n</iframe>\n\n<br>\n<img src=\http://www.travellermap.com/?x=-98&y=73&scale=80&options=0&style=atlas\>\n<br>\n\n<img src=\http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=atlas\>\n<br>\n\n<img src=\http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=candy\>\n<br>\n\n<img src=\http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=poster\>\n<br>\n\n<a href=\<img src=\http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=print\>\n<img src=\http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX&jump=JUMP&scale=SCALE&options=OPTIONS&style=STYLE\>\n<br>\n\n<a href=\http://www.travellermap.com/world?sector=SEC&hex=HEX\>\nhttp://www.travellermap.com/world?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/api/poster?sector=SPIN&scale=SCALE&options=OPTIONS&style=STYLE\>\nhttp://travellermap.com/api/poster?sector=SPIN&scale=SCALE&options=OPTIONS&style=STYLE\n<br>\n\n<a href=\http://travellermap.com/data/SEC/image\>\nhttp://travellermap.com/data/SEC/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/A/image\>\nhttp://travellermap.com/data/SEC/A/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/B/image\>\nhttp://travellermap.com/data/SEC/B/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C/image\>\nhttp://travellermap.com/data/SEC/C/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/D/image\>\nhttp://travellermap.com/data/SEC/D/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/E/image\>\nhttp://travellermap.com/data/SEC/E/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/F/image\>\nhttp://travellermap.com/data/SEC/F/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/G/image\>\nhttp://travellermap.com/data/SEC/G/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/H/image\>\nhttp://travellermap.com/data/SEC/H/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/I/image\>\nhttp://travellermap.com/data/SEC/I/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/J/image\>\nhttp://travellermap.com/data/SEC/J/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/K/image\>\nhttp://travellermap.com/data/SEC/K/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/L/image\>\nhttp://travellermap.com/data/SEC/L/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/M/image\>\nhttp://travellermap.com/data/SEC/M/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/N/image\>\nhttp://travellermap.com/data/SEC/N/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/O/image\>\nhttp://travellermap.com/data/SEC/O/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/P/image\>\nhttp://travellermap.com/data/SEC/P/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/image\>\nhttp://travellermap.com/data/SEC/image\n<br>\n\n<a href=\http://travellermap.com/api/coordinates?sx=SX&sy=SY\>\nhttp://travellermap.com/api/coordinates?sx=SX&sy=SY\n<br>\n\n<a href=\http://travellermap.com/api/coordinates?sx=SX&sy=SY&hx=HX&hy=HY\>\nhttp://travellermap.com/api/coordinates?sx=SX&sy=SY&hx=HX&hy=HY\n<br>\n\n<a href=\http://travellermap.com/api/coordinates?sector=SEC&hex=HEX\>\nhttp://travellermap.com/api/coordinates?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/api/coordinates?sector=SEC\>\nhttp://travellermap.com/api/coordinates?sector=SEC\n<br>\n\n<a href=\http://travellermap.com/api/credits?sector=SEC&scale=SCALE&options=OPTIONS &style=STYLE\>\nhttp://travellermap.com/api/credits?sector=SEC&scale=SCALE&options=OPTIONS &style=STYLE\n<br>\n\n<a href=\http://travellermap.com/api/credits?sector=SEC&hex=HEX\>\nhttp://travellermap.com/api/credits?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/api/credits?sx=SX&sy=SY\>\nhttp://travellermap.com/api/credits?sx=SX&sy=SY\n<br>\n\n<a href=\http://travellermap.com/api/credits?sx=SX&sy=SY&hx=HX&hy=HY\>\nhttp://travellermap.com/api/credits?sx=SX&sy=SY&hx=HX&hy=HY\n<br>\n\n<a href=\http://travellermap.com/api/credits?x=X&y=Y\>\nhttp://travellermap.com/api/credits?x=X&y=Y\n<br>\n\n<a href=\http://www.travellermap.com/api/credits?x=-110&y=-70\>\nhttp://www.travellermap.com/api/credits?x=-110&y=-70\n<br>\n\n<a href=\http://travellermap.com/api/sec?sector=SEC\>\nhttp://travellermap.com/api/sec?sector=SEC\n<br>\n\n<a href=\http://travellermap.com/api/sec?sector=SEC&hex=HEX\>\nhttp://travellermap.com/api/sec?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/api/sec?sx=SX&sy=SY\>\nhttp://travellermap.com/api/sec?sx=SX&sy=SY\n<br>\n\n<a href=\http://travellermap.com/api/metadata?sector=SEC\>\nhttp://travellermap.com/api/metadata?sector=SEC\n<br>\n\n<a href=\http://travellermap.com/api/metadata?sx=SX&sy=SY\>\nhttp://travellermap.com/api/metadata?sx=SX&sy=SY\n<br>\n\n<a href=\http://www.travellermap.com/api/metadata?sector=SEC\>\nhttp://www.travellermap.com/api/metadata?sector=SEC\n<br>\n\n<a href=\http://www.travellermap.com/api/msec?sector=SEC\>\nhttp://www.travellermap.com/api/msec?sector=SEC\n<br>\n\n<a href=\http://www.travellermap.com/api/universe?era=ERA\>\nhttp://www.travellermap.com/api/universe?era=ERA\n<br>\n\n<a href=\http://www.travellermap.com/api/tile?x=-24.5&y=Y8&scale=SCALE&options=OPTIONS &style=STYLE\>\nhttp://www.travellermap.com/api/tile?x=-24.5&y=Y8&scale=SCALE&options=OPTIONS &style=STYLE\n<br>\n\n<a href=\http://travellermap.com/api/poster?sector=SEC\>\nhttp://travellermap.com/api/poster?sector=SEC\n<br>\n\n<a href=\http://travellermap.com/api/poster?sector=SEC\>\nhttp://travellermap.com/api/poster?sector=SEC\n<br>\n\n<a href=\http://travellermap.com/api/jumpmap?x=X&y=Y\>\nhttp://travellermap.com/api/jumpmap?x=X&y=Y\n<br>\n\n<a href=\http://travellermap.com/api/jumpmap?sx=SX&-1=sy&hx=HX&hy=HY\>\nhttp://travellermap.com/api/jumpmap?sx=SX&-1=sy&hx=HX&hy=HY\n<br>\n\n<a href=\http://travellermap.com/api/jumpmap?sector=SEC&hex=HEX\>\nhttp://travellermap.com/api/jumpmap?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/api/msec?sector=SEC\>\nhttp://travellermap.com/api/msec?sector=SEC\n<br>\n\n<a href=\http://travellermap.com/api/msec?sx=SX&sy=SY\>\nhttp://travellermap.com/api/msec?sx=SX&sy=SY\n<br>\n\n<a href=\http://travellermap.com/api/jumpworlds?x=X&y=Y\>\nhttp://travellermap.com/api/jumpworlds?x=X&y=Y\n<br>\n\n<a href=\http://travellermap.com/api/jumpworlds?sx=SX&sy=SY&hx=HX&hy=HY\>\nhttp://travellermap.com/api/jumpworlds?sx=SX&sy=SY&hx=HX&hy=HY\n<br>\n\n<a href=\http://travellermap.com/api/jumpworlds?sector=SEC\n&hex=HEX\>http://travellermap.com/api/jumpworlds?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/api/search?q=NAME\>\nhttp://travellermap.com/api/search?q=NAME\n<br>\n\n<a href=\http://travellermap.com/api/universe\>\nhttp://travellermap.com/api/universe\n<br>\n\n<a href=\http://www.travellermap.com/api/coordinates?sector=SEC&hex=HEX\>\nhttp://www.travellermap.com/api/coordinates?sector=SEC&hex=HEX\n<br>\n\n<a href=\http://travellermap.com/data\>\nhttp://travellermap.com/data\n<br>\n\n<a href=\http://travellermap.com/data/SEC\>\nhttp://travellermap.com/data/SEC\n<br>\n\n<a href=\http://travellermap.com/data/SEC/tab\>\nhttp://travellermap.com/data/SEC/tab\n<br>\n\n<a href=\http://travellermap.com/data/SEC/sec\>\nhttp://travellermap.com/data/SEC/sec\n<br>\n\n<a href=\http://travellermap.com/data/SEC/metadata\>\nhttp://travellermap.com/data/SEC/metadata\n<br>\n\n<a href=\http://travellermap.com/data/SEC/msec\>\nhttp://travellermap.com/data/SEC/msec\n<br>\n\n<a href=\http://travellermap.com/data/SEC/image\>\nhttp://travellermap.com/data/SEC/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/coordinates\>\nhttp://travellermap.com/data/SEC/coordinates\n<br>\n\n<a href=\http://travellermap.com/data/SEC/credits\>\nhttp://travellermap.com/data/SEC/credits\n<br>\n\n<a href=\http://travellermap.com/data/SEC/A\>\nhttp://travellermap.com/data/SEC/A\n<br>\n\n<a href=\http://travellermap.com/data/SEC/B\>\nhttp://travellermap.com/data/SEC/B\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C\>\nhttp://travellermap.com/data/SEC/C\n<br>\n\n<a href=\http://travellermap.com/data/SEC/D\>\nhttp://travellermap.com/data/SEC/D\n<br>\n\n<a href=\http://travellermap.com/data/SEC/E\>\nhttp://travellermap.com/data/SEC/E\n<br>\n\n<a href=\http://travellermap.com/data/SEC/F\>\nhttp://travellermap.com/data/SEC/F\n<br>\n\n<a href=\http://travellermap.com/data/SEC/G\>\nhttp://travellermap.com/data/SEC/G\n<br>\n\n<a href=\http://travellermap.com/data/SEC/H\>\nhttp://travellermap.com/data/SEC/H\n<br>\n\n<a href=\http://travellermap.com/data/SEC/I\>\nhttp://travellermap.com/data/SEC/I\n<br>\n\n<a href=\http://travellermap.com/data/SEC/J\>\nhttp://travellermap.com/data/SEC/J\n<br>\n\n<a href=\http://travellermap.com/data/SEC/K\>\nhttp://travellermap.com/data/SEC/K\n<br>\n\n<a href=\http://travellermap.com/data/SEC/L\>\nhttp://travellermap.com/data/SEC/L\n<br>\n\n<a href=\http://travellermap.com/data/SEC/M\>\nhttp://travellermap.com/data/SEC/M\n<br>\n\n<a href=\http://travellermap.com/data/SEC/N\>\nhttp://travellermap.com/data/SEC/N\n<br>\n\n<a href=\http://travellermap.com/data/SEC/O\>\nhttp://travellermap.com/data/SEC/O\n<br>\n\n<a href=\http://travellermap.com/data/SEC/P\>\nhttp://travellermap.com/data/SEC/P\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C/tab\>\nhttp://travellermap.com/data/SEC/C/tab\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C/sec\>\nhttp://travellermap.com/data/SEC/C/sec\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C/image\>\nhttp://travellermap.com/data/SEC/C/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/coordinates\>\nhttp://travellermap.com/data/SEC/HEX/coordinates\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/credits\>\nhttp://travellermap.com/data/SEC/HEX/credits\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/jump/9\>\nhttp://travellermap.com/data/SEC/HEX/jump/9\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/jump/9/image\>\nhttp://travellermap.com/data/SEC/HEX/jump/9/image\n<br>\n\n<a href=\http://travellermap.com/data/SEC/coordinates\>\nhttp://travellermap.com/data/SEC/coordinates\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/coordinates\>\nhttp://travellermap.com/data/SEC/HEX/coordinates\n<br>\n\n<a href=\http://travellermap.com/data/SEC/credits\>\nhttp://travellermap.com/data/SEC/credits\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/credits\>\nhttp://travellermap.com/data/SEC/HEX/credits\n<br>\n\n<a href=\http://travellermap.com/data/SEC\>\nhttp://travellermap.com/data/SEC\n<br>\n\n<a href=\http://travellermap.com/data/SEC/sec\>\nhttp://travellermap.com/data/SEC/sec\n<br>\n\n<a href=\http://travellermap.com/data/SEC/tab\>\nhttp://travellermap.com/data/SEC/tab\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C\>\nhttp://travellermap.com/data/SEC/C\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C/sec\>\nhttp://travellermap.com/data/SEC/C/sec\n<br>\n\n<a href=\http://travellermap.com/data/SEC/C/tab\>\nhttp://travellermap.com/data/SEC/C/tab\n<br>\n\n<a href=\http://travellermap.com/data/SEC/metadata\>\nhttp://travellermap.com/data/SEC/metadata\n<br>\n\n<a href=\http://travellermap.com/data/SEC/msec\>\nhttp://travellermap.com/data/SEC/msec\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/jump/9\>\nhttp://travellermap.com/data/SEC/HEX/jump/9\n<br>\n\n<a href=\http://travellermap.com/data/SEC/HEX/jump/9/image\>\nhttp://travellermap.com/data/SEC/HEX/jump/9/image\n<br>\n\n<a href=\http://travellermap.com/data\>\nhttp://travellermap.com/data\n</a href>\n<br>\n<br>\n<br>\n<br>\n);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Sectors.setColumns(20);"
  <Catalog>
    <col0>    jta4Sectors.setColumns(20);</col0>
  </Catalog>
 
"    jta4Sectors.setRows(5);"
  <Catalog>
    <col0>    jta4Sectors.setRows(5);</col0>
  </Catalog>
 
"    jta4Sectors.setText("A'yosea\nAblaz\nAbresh\nAed\nAfawahisa\nAfdranz\nAftailr\nAhkiweahi'\nAktifao\nAldebaran\nAlpha Crucis\nAmderstun\nAmdukan\nAngfutsag\nAnshnzhins\nAntares\nAntsrish\nAphlent\nAplie\nAstron\nAtaurre\nAvereguar\nAviel\nAzaz\nAzhpliabl\nBanners\nBar'kakr\nBiaqrpraze\nBlaskon\nBleblqansh\nBliaazh\nBliardlie\nBliatsiebl\nBrelia\nBrianch\nBrieplanz\nCanopus\nCentrax\nChetliashal\nChiajavlazh\nChiep Zhez\nChit Botshti\nChtatiate\nChtetaravl\nChtierabl\nChtijashal\nCore\nCorridor\nCrucis Margin\nDagudashaag\nDaibei\nDalchie Jdatl\nDark Nebula\nDarret\nDatsatl\nDelphi\nDeneb\nDfotseth\nDhuerorrg\nDiaspora\nDifralfler\nDlavvreplents\nDliaprqriez\nDliea\nDliebriatia\nDoklzots\nDrachabre\nDrakken\nDriaflfiazlats\nDriasera\nDriebliepl\nDrierii\nDriklfetvipr\nEahyaw\nEaliyasiyw\nEble\nEblia\nEe\nEekrookrigz\nEiaplial\nEie\nEkrbriansh\nElyetleisiyea\nEmpty Quarter\nEnchakl\nEose'o\nEsai'yo\nEtakhasoa\nEtlnchofr\nEvred\nExtolian\nExtremus\nEzhebl\nFa Dzaets\nFahreahluis\nFaoheiroi'iyhao\nFar Frontiers\nFavkranish\nFebiaiadl\nFeflolents\nFiaftashe\nFinggvakhou\nFlablenti\nFlaflzhevrients\nFolgore\nForeven\nFornast\nFrajbriekrensh\nFraklbizh\nFretvlobrpriet\nFrizhkladlncha\nFtaoiyekyu\nFtyer\nFulani\nGashikan\nGateway\nGenfert\nGh!hken\nGhoekhnael\nGlimmerdrift Reaches\nGn'hk'r\nGnaa Iimb'kr\nGrikr!ng\nGur\nGushemege\nGvurrdon\nGzaefueg\nGzektixk\nGzirr!k'l\nHadji\nHanstone\nHarbinger\nHarea\nHeakhafaw\nHfiywitir\nHinterworlds\nHkakhaeaw\nHlakhoi\nHolowon\nIa\nIanse\nIanshaplzdier\nIate\nIchnzhipr\nIdekl\nIebtladl\nIekrqre\nIenjaz\nIenza\nIeviash\nIjar\nIjidl\nIlelish\nIngukrax\nInshzish\nIphigenaia\nIrlaftalea\nIrugangog\nItsfiebl\nItvikiastaf\nIwahfuah\nJdeblinsiqr\nJdencheplia\nJdibrirvianj\nJdodiafldla\nJiechnzhitsonj\nK'trekreer\nKaa G!'kul\nKarleaya\nKatoonah\nKazhekliepr\nKefiykhta\nKepridlnchots\nKernzhez'a\nKfazz Ghik\nKhaeaw\nKharrthon\nKhoellighz\nKhuaryakh\nKiafldliezhjol\nKidunal\nKilong\nKlajipl\nKliadli\nKnaeleng\nKolire\nKoog\nKozhdanzhinz\nKring Noor\nKsinanirz\nKteex!\nKtiin'gzat\nLancask\nLangere\nLegend\nLeonidae\nLey Sector\nLishun\nListanaya\nLoplia\nLorspane\nLotsar\nLuretiir!girr\nMagyar\nMalorn\nMassilia\nMavuzog\nMbil!!gh\nMendan\nMeshan\nMighabohk\nMikhail\nMuarne\nMugheen't\nN!!krumbiix\nNadir\nNchadla\nNchefrij\nNevlieri\nNeworld\nNezhatliebr\nNgathksirz\nNiabrefvronz\nNialkridla\nNiechnchialbli\nNili\nNooq\nNseianzh\nNshofref\nNtetszif\nNuughe\nNzhajdibr\nNzhenzie\nNzhernzhi\nNzhiaapl\nNzievi\nOeghz Vaerrghr\nOhieraoi\nOiah\nOld Expanses\nPeklprozqratl\nPhlange\nPhlask\nPivchavia\nPlablshashchesh\nPliabriebl\nPliajenzh\nPliantiblbra\nPloblvla\nPlontarbli\nPofdriblnchitl\nPorlock\nPraklfrintsniadl\nPranzaklbraz\nPrashtsintsanch\nPreiel\nPrinjobliedl\nProanz\nProvence\nQlivinchezh\nQrecha\nQrefrnzhariefl\nRaakaan\nRavrazhe\nReaver's Deep\nReft Sector\nRfigh\nRiadrazh\nRiafrtafrpriafr\nRicenden\nRiekllezha\nRiftspan Reaches\nRimReach\nRuupiin\nRzakki\nSavria\nSetjefrshiatl\nShenzhtsenzh\nSheqraflal\nShiadldriadash\nShiazhanche\nShiblbropli\nSiantsaia\nSidiadl\nSieriatsklinzh\nSolomani Rim\nSpangele\nSpica\nSpinward Marches\nSporelex\nStaihaia'yo\nStar's End\nStiaklentsiefl\nStiatlchepr\nStienzarikl\nStinj Tianz\nStorr\nStotsshiflezh\nTahahroal\nTar'G'kell'p\nTatlnjaie\nTavrbovliepl\nTeahloarifu\nTenshlatsvo\nTensk\nThe Beyond\nTheron\nTheta Borealis\nTienspevnekr\nTlabraplzhied\nTlapltsia'o\nTledrbreplebr\nTlensbladrzhianzh\nTlialiedla\nTliblnzheflets\nTlinchjiee\nTlyasea\nTouchstone\nTracerie\nTreece\nTrenchans\nTrojan Reach\nTsadra\nTsadra Davr\nTsafrnchia\nTsebntsiatldlants\nTselidl\nTuglikki\nUistilrao\nUkaarriit!!b\nUn'k!!k'ng\nUsoirarloiau\nUstral Quadrant\nUuk\nUytal\nVanguard Reaches\nVedrabr\nVeg Fergakh\nVerge\nViajlefliez\nViashchieshiadl\nVietrienzhits\nVikrvidrvria\nVland\nVlofrkla\nVoblezitl\nVravrzha\nWaroatahe\nWindhorn\nWrence\nWrenton\nX'kug\nXaagr\nXeeleer\nYahehwe\nYejiariebr\nYiklerzdanzh\nYikvrior\nZabrziklezh\nZao Kfeng Ig Grilokh\nZarushagar\nZdafeflzadr\nZdechrebrvle\nZdiedeiant\nZdielbeppria\nZdienzfiaia\nZdietablie\nZe'shavrav\nZentse\nZenzhej\nZhechinje\nZhejnzhiikl\nZhenzhbrivtlo\nZhetsefr\nZhevreklnchi\nZhiaqrqiats\nZhiatienjiaz\nZhiejqrinzho\nZhiensh\nZhodane\nZiafrplians\nZietsebl\nZietssha\nZii\nZortakh\n");"
  <Catalog>
    <col0>    jta4Sectors.setText(A'yosea\nAblaz\nAbresh\nAed\nAfawahisa\nAfdranz\nAftailr\nAhkiweahi'\nAktifao\nAldebaran\nAlpha Crucis\nAmderstun\nAmdukan\nAngfutsag\nAnshnzhins\nAntares\nAntsrish\nAphlent\nAplie\nAstron\nAtaurre\nAvereguar\nAviel\nAzaz\nAzhpliabl\nBanners\nBar'kakr\nBiaqrpraze\nBlaskon\nBleblqansh\nBliaazh\nBliardlie\nBliatsiebl\nBrelia\nBrianch\nBrieplanz\nCanopus\nCentrax\nChetliashal\nChiajavlazh\nChiep Zhez\nChit Botshti\nChtatiate\nChtetaravl\nChtierabl\nChtijashal\nCore\nCorridor\nCrucis Margin\nDagudashaag\nDaibei\nDalchie Jdatl\nDark Nebula\nDarret\nDatsatl\nDelphi\nDeneb\nDfotseth\nDhuerorrg\nDiaspora\nDifralfler\nDlavvreplents\nDliaprqriez\nDliea\nDliebriatia\nDoklzots\nDrachabre\nDrakken\nDriaflfiazlats\nDriasera\nDriebliepl\nDrierii\nDriklfetvipr\nEahyaw\nEaliyasiyw\nEble\nEblia\nEe\nEekrookrigz\nEiaplial\nEie\nEkrbriansh\nElyetleisiyea\nEmpty Quarter\nEnchakl\nEose'o\nEsai'yo\nEtakhasoa\nEtlnchofr\nEvred\nExtolian\nExtremus\nEzhebl\nFa Dzaets\nFahreahluis\nFaoheiroi'iyhao\nFar Frontiers\nFavkranish\nFebiaiadl\nFeflolents\nFiaftashe\nFinggvakhou\nFlablenti\nFlaflzhevrients\nFolgore\nForeven\nFornast\nFrajbriekrensh\nFraklbizh\nFretvlobrpriet\nFrizhkladlncha\nFtaoiyekyu\nFtyer\nFulani\nGashikan\nGateway\nGenfert\nGh!hken\nGhoekhnael\nGlimmerdrift Reaches\nGn'hk'r\nGnaa Iimb'kr\nGrikr!ng\nGur\nGushemege\nGvurrdon\nGzaefueg\nGzektixk\nGzirr!k'l\nHadji\nHanstone\nHarbinger\nHarea\nHeakhafaw\nHfiywitir\nHinterworlds\nHkakhaeaw\nHlakhoi\nHolowon\nIa\nIanse\nIanshaplzdier\nIate\nIchnzhipr\nIdekl\nIebtladl\nIekrqre\nIenjaz\nIenza\nIeviash\nIjar\nIjidl\nIlelish\nIngukrax\nInshzish\nIphigenaia\nIrlaftalea\nIrugangog\nItsfiebl\nItvikiastaf\nIwahfuah\nJdeblinsiqr\nJdencheplia\nJdibrirvianj\nJdodiafldla\nJiechnzhitsonj\nK'trekreer\nKaa G!'kul\nKarleaya\nKatoonah\nKazhekliepr\nKefiykhta\nKepridlnchots\nKernzhez'a\nKfazz Ghik\nKhaeaw\nKharrthon\nKhoellighz\nKhuaryakh\nKiafldliezhjol\nKidunal\nKilong\nKlajipl\nKliadli\nKnaeleng\nKolire\nKoog\nKozhdanzhinz\nKring Noor\nKsinanirz\nKteex!\nKtiin'gzat\nLancask\nLangere\nLegend\nLeonidae\nLey Sector\nLishun\nListanaya\nLoplia\nLorspane\nLotsar\nLuretiir!girr\nMagyar\nMalorn\nMassilia\nMavuzog\nMbil!!gh\nMendan\nMeshan\nMighabohk\nMikhail\nMuarne\nMugheen't\nN!!krumbiix\nNadir\nNchadla\nNchefrij\nNevlieri\nNeworld\nNezhatliebr\nNgathksirz\nNiabrefvronz\nNialkridla\nNiechnchialbli\nNili\nNooq\nNseianzh\nNshofref\nNtetszif\nNuughe\nNzhajdibr\nNzhenzie\nNzhernzhi\nNzhiaapl\nNzievi\nOeghz Vaerrghr\nOhieraoi\nOiah\nOld Expanses\nPeklprozqratl\nPhlange\nPhlask\nPivchavia\nPlablshashchesh\nPliabriebl\nPliajenzh\nPliantiblbra\nPloblvla\nPlontarbli\nPofdriblnchitl\nPorlock\nPraklfrintsniadl\nPranzaklbraz\nPrashtsintsanch\nPreiel\nPrinjobliedl\nProanz\nProvence\nQlivinchezh\nQrecha\nQrefrnzhariefl\nRaakaan\nRavrazhe\nReaver's Deep\nReft Sector\nRfigh\nRiadrazh\nRiafrtafrpriafr\nRicenden\nRiekllezha\nRiftspan Reaches\nRimReach\nRuupiin\nRzakki\nSavria\nSetjefrshiatl\nShenzhtsenzh\nSheqraflal\nShiadldriadash\nShiazhanche\nShiblbropli\nSiantsaia\nSidiadl\nSieriatsklinzh\nSolomani Rim\nSpangele\nSpica\nSpinward Marches\nSporelex\nStaihaia'yo\nStar's End\nStiaklentsiefl\nStiatlchepr\nStienzarikl\nStinj Tianz\nStorr\nStotsshiflezh\nTahahroal\nTar'G'kell'p\nTatlnjaie\nTavrbovliepl\nTeahloarifu\nTenshlatsvo\nTensk\nThe Beyond\nTheron\nTheta Borealis\nTienspevnekr\nTlabraplzhied\nTlapltsia'o\nTledrbreplebr\nTlensbladrzhianzh\nTlialiedla\nTliblnzheflets\nTlinchjiee\nTlyasea\nTouchstone\nTracerie\nTreece\nTrenchans\nTrojan Reach\nTsadra\nTsadra Davr\nTsafrnchia\nTsebntsiatldlants\nTselidl\nTuglikki\nUistilrao\nUkaarriit!!b\nUn'k!!k'ng\nUsoirarloiau\nUstral Quadrant\nUuk\nUytal\nVanguard Reaches\nVedrabr\nVeg Fergakh\nVerge\nViajlefliez\nViashchieshiadl\nVietrienzhits\nVikrvidrvria\nVland\nVlofrkla\nVoblezitl\nVravrzha\nWaroatahe\nWindhorn\nWrence\nWrenton\nX'kug\nXaagr\nXeeleer\nYahehwe\nYejiariebr\nYiklerzdanzh\nYikvrior\nZabrziklezh\nZao Kfeng Ig Grilokh\nZarushagar\nZdafeflzadr\nZdechrebrvle\nZdiedeiant\nZdielbeppria\nZdienzfiaia\nZdietablie\nZe'shavrav\nZentse\nZenzhej\nZhechinje\nZhejnzhiikl\nZhenzhbrivtlo\nZhetsefr\nZhevreklnchi\nZhiaqrqiats\nZhiatienjiaz\nZhiejqrinzho\nZhiensh\nZhodane\nZiafrplians\nZietsebl\nZietssha\nZii\nZortakh\n);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4UWP.setColumns(20);"
  <Catalog>
    <col0>    jta4UWP.setColumns(20);</col0>
  </Catalog>
 
"    jta4UWP.setRows(5);"
  <Catalog>
    <col0>    jta4UWP.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout panel4T5WorldLayout = new javax.swing.GroupLayout(panel4T5World);"
  <Catalog>
    <col0>    javax.swing.GroupLayout panel4T5WorldLayout = new javax.swing.GroupLayout(panel4T5World);</col0>
  </Catalog>
 
"    panel4T5World.setLayout(panel4T5WorldLayout);"
  <Catalog>
    <col0>    panel4T5World.setLayout(panel4T5WorldLayout);</col0>
  </Catalog>
 
"    panel4T5WorldLayout.setHorizontalGroup("
  <Catalog>
    <col0>    panel4T5WorldLayout.setHorizontalGroup(</col0>
  </Catalog>
 
"      panel4T5WorldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4T5WorldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGap(0, 58, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addGap(0, 58, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    panel4T5WorldLayout.setVerticalGroup("
  <Catalog>
    <col0>    panel4T5WorldLayout.setVerticalGroup(</col0>
  </Catalog>
 
"      panel4T5WorldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4T5WorldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGap(0, 54, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addGap(0, 54, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Bases.setColumns(20);"
  <Catalog>
    <col0>    jta4Bases.setColumns(20);</col0>
  </Catalog>
 
"    jta4Bases.setRows(5);"
  <Catalog>
    <col0>    jta4Bases.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4WorldPic.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    panel4WorldPic.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    panel4WorldPic.setPreferredSize(new java.awt.Dimension(100, 100));"
  <Catalog>
    <col0>    panel4WorldPic.setPreferredSize(new java.awt.Dimension(100, 100));</col0>
  </Catalog>
 
"    panel4WorldPic.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    panel4WorldPic.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        panel4WorldPicMouseClicked(evt);"
  <Catalog>
    <col0>        panel4WorldPicMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout panel4WorldPicLayout = new javax.swing.GroupLayout(panel4WorldPic);"
  <Catalog>
    <col0>    javax.swing.GroupLayout panel4WorldPicLayout = new javax.swing.GroupLayout(panel4WorldPic);</col0>
  </Catalog>
 
"    panel4WorldPic.setLayout(panel4WorldPicLayout);"
  <Catalog>
    <col0>    panel4WorldPic.setLayout(panel4WorldPicLayout);</col0>
  </Catalog>
 
"    panel4WorldPicLayout.setHorizontalGroup("
  <Catalog>
    <col0>    panel4WorldPicLayout.setHorizontalGroup(</col0>
  </Catalog>
 
"      panel4WorldPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4WorldPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGap(0, 100, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addGap(0, 100, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    panel4WorldPicLayout.setVerticalGroup("
  <Catalog>
    <col0>    panel4WorldPicLayout.setVerticalGroup(</col0>
  </Catalog>
 
"      panel4WorldPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4WorldPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGap(0, 100, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addGap(0, 100, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Sub.setColumns(20);"
  <Catalog>
    <col0>    jta4Sub.setColumns(20);</col0>
  </Catalog>
 
"    jta4Sub.setRows(5);"
  <Catalog>
    <col0>    jta4Sub.setRows(5);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    setOpaque(true);"
  <Catalog>
    <col0>    setOpaque(true);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Sec.setToolTipText("Double Click to Download");"
  <Catalog>
    <col0>    jcb4Sec.setToolTipText(Double Click to Download);</col0>
  </Catalog>
 
"    jcb4Sec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Sec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Sec.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Sec.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4SecMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4SecMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Sec.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Sec.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4SecActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4SecActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Sub.setToolTipText("Double click to Save details");"
  <Catalog>
    <col0>    jcb4Sub.setToolTipText(Double click to Save details);</col0>
  </Catalog>
 
"    jcb4Sub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Sub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Sub.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Sub.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4SubMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4SubMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Sub.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Sub.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4SubActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4SubActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Sys.setToolTipText("Double click to locate Capital (if any)");"
  <Catalog>
    <col0>    jcb4Sys.setToolTipText(Double click to locate Capital (if any));</col0>
  </Catalog>
 
"    jcb4Sys.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Sys.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Sys.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Sys.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4SysMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4SysMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Sys.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Sys.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4SysActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4SysActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Star.setToolTipText("Double click to Load details");"
  <Catalog>
    <col0>    jcb4Star.setToolTipText(Double click to Load details);</col0>
  </Catalog>
 
"    jcb4Star.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Star.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Star.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Star.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4StarMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4StarMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Star.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Star.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4StarActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4StarActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Sec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    panel4Sec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    panel4Sec.setMaximumSize(new java.awt.Dimension(207, 255));"
  <Catalog>
    <col0>    panel4Sec.setMaximumSize(new java.awt.Dimension(207, 255));</col0>
  </Catalog>
 
"    panel4Sec.setMinimumSize(new java.awt.Dimension(207, 255));"
  <Catalog>
    <col0>    panel4Sec.setMinimumSize(new java.awt.Dimension(207, 255));</col0>
  </Catalog>
 
"    panel4Sec.setPreferredSize(new java.awt.Dimension(207, 255));"
  <Catalog>
    <col0>    panel4Sec.setPreferredSize(new java.awt.Dimension(207, 255));</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Sub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    panel4Sub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    panel4Sub.setMaximumSize(new java.awt.Dimension(193, 255));"
  <Catalog>
    <col0>    panel4Sub.setMaximumSize(new java.awt.Dimension(193, 255));</col0>
  </Catalog>
 
"    panel4Sub.setMinimumSize(new java.awt.Dimension(193, 255));"
  <Catalog>
    <col0>    panel4Sub.setMinimumSize(new java.awt.Dimension(193, 255));</col0>
  </Catalog>
 
"    panel4Sub.setOpaque(true);"
  <Catalog>
    <col0>    panel4Sub.setOpaque(true);</col0>
  </Catalog>
 
"    panel4Sub.setPreferredSize(new java.awt.Dimension(193, 255));"
  <Catalog>
    <col0>    panel4Sub.setPreferredSize(new java.awt.Dimension(193, 255));</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Sys.setBackground(new java.awt.Color(255, 255, 255));"
  <Catalog>
    <col0>    panel4Sys.setBackground(new java.awt.Color(255, 255, 255));</col0>
  </Catalog>
 
"    panel4Sys.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    panel4Sys.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    panel4Sys.setMaximumSize(new java.awt.Dimension(200, 255));"
  <Catalog>
    <col0>    panel4Sys.setMaximumSize(new java.awt.Dimension(200, 255));</col0>
  </Catalog>
 
"    panel4Sys.setMinimumSize(new java.awt.Dimension(200, 255));"
  <Catalog>
    <col0>    panel4Sys.setMinimumSize(new java.awt.Dimension(200, 255));</col0>
  </Catalog>
 
"    panel4Sys.setOpaque(true);"
  <Catalog>
    <col0>    panel4Sys.setOpaque(true);</col0>
  </Catalog>
 
"    panel4Sys.setPreferredSize(new java.awt.Dimension(200, 255));"
  <Catalog>
    <col0>    panel4Sys.setPreferredSize(new java.awt.Dimension(200, 255));</col0>
  </Catalog>
 
"    panel4Sys.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {"
  <Catalog>
    <col0>    panel4Sys.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {</col0>
  </Catalog>
 
"      public void mouseMoved(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseMoved(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        panel4SysMouseMoved(evt);"
  <Catalog>
    <col0>        panel4SysMouseMoved(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    panel4Sys.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    panel4Sys.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        panel4SysMouseClicked(evt);"
  <Catalog>
    <col0>        panel4SysMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    js4Dist.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    js4Dist.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    js4Dist.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    js4Dist.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    js4Dist.setMajorTickSpacing(1);"
  <Catalog>
    <col0>    js4Dist.setMajorTickSpacing(1);</col0>
  </Catalog>
 
"    js4Dist.setMaximum(9);"
  <Catalog>
    <col0>    js4Dist.setMaximum(9);</col0>
  </Catalog>
 
"    js4Dist.setPaintLabels(true);"
  <Catalog>
    <col0>    js4Dist.setPaintLabels(true);</col0>
  </Catalog>
 
"    js4Dist.setPaintTicks(true);"
  <Catalog>
    <col0>    js4Dist.setPaintTicks(true);</col0>
  </Catalog>
 
"    js4Dist.setSnapToTicks(true);"
  <Catalog>
    <col0>    js4Dist.setSnapToTicks(true);</col0>
  </Catalog>
 
"    js4Dist.setToolTipText("+/- Jump Number");"
  <Catalog>
    <col0>    js4Dist.setToolTipText(/- Jump Number);</col0>
  </Catalog>
 
"    js4Dist.setValue(1);"
  <Catalog>
    <col0>    js4Dist.setValue(1);</col0>
  </Catalog>
 
"    js4Dist.setPreferredSize(new java.awt.Dimension(200, 40));"
  <Catalog>
    <col0>    js4Dist.setPreferredSize(new java.awt.Dimension(200, 40));</col0>
  </Catalog>
 
"    js4Dist.addChangeListener(new javax.swing.event.ChangeListener() {"
  <Catalog>
    <col0>    js4Dist.addChangeListener(new javax.swing.event.ChangeListener() {</col0>
  </Catalog>
 
"      public void stateChanged(javax.swing.event.ChangeEvent evt) {"
  <Catalog>
    <col0>      public void stateChanged(javax.swing.event.ChangeEvent evt) {</col0>
  </Catalog>
 
"        js4DistStateChanged(evt);"
  <Catalog>
    <col0>        js4DistStateChanged(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Jump.setOpaque(false);"
  <Catalog>
    <col0>    panel4Jump.setOpaque(false);</col0>
  </Catalog>
 
"    panel4Jump.setPreferredSize(new java.awt.Dimension(200, 102));"
  <Catalog>
    <col0>    panel4Jump.setPreferredSize(new java.awt.Dimension(200, 102));</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel3.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    jLabel3.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    jLabel3.setDisplayedMnemonic('C');"
  <Catalog>
    <col0>    jLabel3.setDisplayedMnemonic('C');</col0>
  </Catalog>
 
"    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N"
  <Catalog>
    <col0>    jLabel3.setFont(new java.awt.Font(Tahoma, 1, 14)); // NOI18N</col0>
  </Catalog>
 
"    jLabel3.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jLabel3.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);"
  <Catalog>
    <col0>    jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);</col0>
  </Catalog>
 
"    jLabel3.setText("Cost");"
  <Catalog>
    <col0>    jLabel3.setText(Cost);</col0>
  </Catalog>
 
"    jLabel3.setToolTipText("Click changes Cr");"
  <Catalog>
    <col0>    jLabel3.setToolTipText(Click changes Cr);</col0>
  </Catalog>
 
"    jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);"
  <Catalog>
    <col0>    jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);</col0>
  </Catalog>
 
"    jLabel3.setOpaque(true);"
  <Catalog>
    <col0>    jLabel3.setOpaque(true);</col0>
  </Catalog>
 
"    jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jLabel3MouseClicked(evt);"
  <Catalog>
    <col0>        jLabel3MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jComboBox19.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    jComboBox19.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    jComboBox19.setEditable(true);"
  <Catalog>
    <col0>    jComboBox19.setEditable(true);</col0>
  </Catalog>
 
"    jComboBox19.setForeground(new java.awt.Color(255, 255, 255));"
  <Catalog>
    <col0>    jComboBox19.setForeground(new java.awt.Color(255, 255, 255));</col0>
  </Catalog>
 
"    jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "200", "300", "400", "500", "600", "700", "800", "900", "1000", "1100", "1200", "1300", "1400", "1500", "1600", "1700", "1800", "1900", "2000", "2100", "2200", "2300", "2400", "2500" }));"
  <Catalog>
    <col0>    jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[] { 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500 }));</col0>
  </Catalog>
 
"    jComboBox19.setToolTipText("Starship size in dtons");"
  <Catalog>
    <col0>    jComboBox19.setToolTipText(Starship size in dtons);</col0>
  </Catalog>
 
"    jComboBox19.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jComboBox19.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jComboBox19MouseClicked(evt);"
  <Catalog>
    <col0>        jComboBox19MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jComboBox19.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jComboBox19.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jComboBox19ActionPerformed(evt);"
  <Catalog>
    <col0>        jComboBox19ActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jCheckBox2.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    jCheckBox2.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    jCheckBox2.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jCheckBox2.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jCheckBox2.setText("Unrefined");"
  <Catalog>
    <col0>    jCheckBox2.setText(Unrefined);</col0>
  </Catalog>
 
"    jCheckBox2.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jCheckBox2.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jCheckBox2ActionPerformed(evt);"
  <Catalog>
    <col0>        jCheckBox2ActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jCheckBox1.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    jCheckBox1.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    jCheckBox1.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jCheckBox1.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jCheckBox1.setText("dT");"
  <Catalog>
    <col0>    jCheckBox1.setText(dT);</col0>
  </Catalog>
 
"    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jCheckBox1ActionPerformed(evt);"
  <Catalog>
    <col0>        jCheckBox1ActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout panel4JumpLayout = new javax.swing.GroupLayout(panel4Jump);"
  <Catalog>
    <col0>    javax.swing.GroupLayout panel4JumpLayout = new javax.swing.GroupLayout(panel4Jump);</col0>
  </Catalog>
 
"    panel4Jump.setLayout(panel4JumpLayout);"
  <Catalog>
    <col0>    panel4Jump.setLayout(panel4JumpLayout);</col0>
  </Catalog>
 
"    panel4JumpLayout.setHorizontalGroup("
  <Catalog>
    <col0>    panel4JumpLayout.setHorizontalGroup(</col0>
  </Catalog>
 
"      panel4JumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4JumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(panel4JumpLayout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(panel4JumpLayout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addComponent(jComboBox19, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>        .addComponent(jComboBox19, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)"
  <Catalog>
    <col0>        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)</col0>
  </Catalog>
 
"        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)"
  <Catalog>
    <col0>        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)</col0>
  </Catalog>
 
"        .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>        .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"        .addGap(34, 34, 34))"
  <Catalog>
    <col0>        .addGap(34, 34, 34))</col0>
  </Catalog>
 
"      .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    panel4JumpLayout.setVerticalGroup("
  <Catalog>
    <col0>    panel4JumpLayout.setVerticalGroup(</col0>
  </Catalog>
 
"      panel4JumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4JumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(panel4JumpLayout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(panel4JumpLayout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGroup(panel4JumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4JumpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(jComboBox19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(jComboBox19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(jCheckBox1)"
  <Catalog>
    <col0>          .addComponent(jCheckBox1)</col0>
  </Catalog>
 
"          .addComponent(jCheckBox2))"
  <Catalog>
    <col0>          .addComponent(jCheckBox2))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addComponent(jLabel3)"
  <Catalog>
    <col0>        .addComponent(jLabel3)</col0>
  </Catalog>
 
"        .addGap(0, 0, 0))"
  <Catalog>
    <col0>        .addGap(0, 0, 0))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Strength.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    panel4Strength.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    panel4Strength.setForeground(java.awt.Color.lightGray);"
  <Catalog>
    <col0>    panel4Strength.setForeground(java.awt.Color.lightGray);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    SDBs.setDisplayedMnemonic('S');"
  <Catalog>
    <col0>    SDBs.setDisplayedMnemonic('S');</col0>
  </Catalog>
 
"    SDBs.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    SDBs.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    SDBs.setText("SDBs");"
  <Catalog>
    <col0>    SDBs.setText(SDBs);</col0>
  </Catalog>
 
"    SDBs.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    SDBs.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        SDBsMouseClicked(evt);"
  <Catalog>
    <col0>        SDBsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    defbats.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    defbats.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    defbats.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);"
  <Catalog>
    <col0>    defbats.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);</col0>
  </Catalog>
 
"    defbats.setText("X");"
  <Catalog>
    <col0>    defbats.setText(X);</col0>
  </Catalog>
 
"    defbats.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    defbats.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        defbatsMouseClicked(evt);"
  <Catalog>
    <col0>        defbatsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    Troops.setDisplayedMnemonic('T');"
  <Catalog>
    <col0>    Troops.setDisplayedMnemonic('T');</col0>
  </Catalog>
 
"    Troops.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    Troops.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    Troops.setText("Troops");"
  <Catalog>
    <col0>    Troops.setText(Troops);</col0>
  </Catalog>
 
"    Troops.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    Troops.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        TroopsMouseClicked(evt);"
  <Catalog>
    <col0>        TroopsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    troopunits.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    troopunits.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    troopunits.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);"
  <Catalog>
    <col0>    troopunits.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);</col0>
  </Catalog>
 
"    troopunits.setText("X");"
  <Catalog>
    <col0>    troopunits.setText(X);</col0>
  </Catalog>
 
"    troopunits.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    troopunits.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        troopunitsMouseClicked(evt);"
  <Catalog>
    <col0>        troopunitsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    squadrons.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    squadrons.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    squadrons.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);"
  <Catalog>
    <col0>    squadrons.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);</col0>
  </Catalog>
 
"    squadrons.setText("X");"
  <Catalog>
    <col0>    squadrons.setText(X);</col0>
  </Catalog>
 
"    squadrons.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    squadrons.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        squadronsMouseClicked(evt);"
  <Catalog>
    <col0>        squadronsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    sdbs1.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    sdbs1.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    sdbs1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);"
  <Catalog>
    <col0>    sdbs1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);</col0>
  </Catalog>
 
"    sdbs1.setText("X");"
  <Catalog>
    <col0>    sdbs1.setText(X);</col0>
  </Catalog>
 
"    sdbs1.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    sdbs1.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        sdbs1MouseClicked(evt);"
  <Catalog>
    <col0>        sdbs1MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    Rons.setDisplayedMnemonic('M');"
  <Catalog>
    <col0>    Rons.setDisplayedMnemonic('M');</col0>
  </Catalog>
 
"    Rons.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    Rons.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    Rons.setText("Max Rons");"
  <Catalog>
    <col0>    Rons.setText(Max Rons);</col0>
  </Catalog>
 
"    Rons.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    Rons.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        RonsMouseClicked(evt);"
  <Catalog>
    <col0>        RonsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    CF.setDisplayedMnemonic('D');"
  <Catalog>
    <col0>    CF.setDisplayedMnemonic('D');</col0>
  </Catalog>
 
"    CF.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    CF.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    CF.setText("Def. CF");"
  <Catalog>
    <col0>    CF.setText(Def. CF);</col0>
  </Catalog>
 
"    CF.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    CF.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        CFMouseClicked(evt);"
  <Catalog>
    <col0>        CFMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout panel4StrengthLayout = new javax.swing.GroupLayout(panel4Strength);"
  <Catalog>
    <col0>    javax.swing.GroupLayout panel4StrengthLayout = new javax.swing.GroupLayout(panel4Strength);</col0>
  </Catalog>
 
"    panel4Strength.setLayout(panel4StrengthLayout);"
  <Catalog>
    <col0>    panel4Strength.setLayout(panel4StrengthLayout);</col0>
  </Catalog>
 
"    panel4StrengthLayout.setHorizontalGroup("
  <Catalog>
    <col0>    panel4StrengthLayout.setHorizontalGroup(</col0>
  </Catalog>
 
"      panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(panel4StrengthLayout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(panel4StrengthLayout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addComponent(Rons)"
  <Catalog>
    <col0>          .addComponent(Rons)</col0>
  </Catalog>
 
"          .addComponent(SDBs)"
  <Catalog>
    <col0>          .addComponent(SDBs)</col0>
  </Catalog>
 
"          .addComponent(Troops)"
  <Catalog>
    <col0>          .addComponent(Troops)</col0>
  </Catalog>
 
"          .addComponent(CF))"
  <Catalog>
    <col0>          .addComponent(CF))</col0>
  </Catalog>
 
"        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)"
  <Catalog>
    <col0>        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)</col0>
  </Catalog>
 
"        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addComponent(defbats, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(defbats, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(troopunits, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(troopunits, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(squadrons, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(squadrons, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(sdbs1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>          .addComponent(sdbs1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0))"
  <Catalog>
    <col0>        .addGap(0, 0, 0))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    panel4StrengthLayout.setVerticalGroup("
  <Catalog>
    <col0>    panel4StrengthLayout.setVerticalGroup(</col0>
  </Catalog>
 
"      panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(panel4StrengthLayout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(panel4StrengthLayout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(SDBs)"
  <Catalog>
    <col0>          .addComponent(SDBs)</col0>
  </Catalog>
 
"          .addComponent(sdbs1))"
  <Catalog>
    <col0>          .addComponent(sdbs1))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)"
  <Catalog>
    <col0>        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)</col0>
  </Catalog>
 
"          .addComponent(squadrons)"
  <Catalog>
    <col0>          .addComponent(squadrons)</col0>
  </Catalog>
 
"          .addComponent(Rons))"
  <Catalog>
    <col0>          .addComponent(Rons))</col0>
  </Catalog>
 
"        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(CF)"
  <Catalog>
    <col0>          .addComponent(CF)</col0>
  </Catalog>
 
"          .addComponent(defbats))"
  <Catalog>
    <col0>          .addComponent(defbats))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)"
  <Catalog>
    <col0>        .addGroup(panel4StrengthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)</col0>
  </Catalog>
 
"          .addComponent(Troops)"
  <Catalog>
    <col0>          .addComponent(Troops)</col0>
  </Catalog>
 
"          .addComponent(troopunits))"
  <Catalog>
    <col0>          .addComponent(troopunits))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0))"
  <Catalog>
    <col0>        .addGap(0, 0, 0))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jl4Jump.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jl4Jump.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jl4Jump.setModel(new javax.swing.AbstractListModel() {"
  <Catalog>
    <col0>    jl4Jump.setModel(new javax.swing.AbstractListModel() {</col0>
  </Catalog>
 
"      String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };"
  <Catalog>
    <col0>      String[] strings = { Item 1, Item 2, Item 3, Item 4, Item 5 };</col0>
  </Catalog>
 
"      public int getSize() { return strings.length; }"
  <Catalog>
    <col0>      public int getSize() { return strings.length; }</col0>
  </Catalog>
 
"      public Object getElementAt(int i) { return strings[i]; }"
  <Catalog>
    <col0>      public Object getElementAt(int i) { return strings[i]; }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jl4Jump.setToolTipText("Click to view, Double click to Jump");"
  <Catalog>
    <col0>    jl4Jump.setToolTipText(Click to view, Double click to Jump);</col0>
  </Catalog>
 
"    jl4Jump.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jl4Jump.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jl4JumpMouseClicked(evt);"
  <Catalog>
    <col0>        jl4JumpMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      public void mousePressed(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mousePressed(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jl4JumpMousePressed(evt);"
  <Catalog>
    <col0>        jl4JumpMousePressed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      public void mouseReleased(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseReleased(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jl4JumpMouseReleased(evt);"
  <Catalog>
    <col0>        jl4JumpMouseReleased(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jl4Jump.addListSelectionListener(new javax.swing.event.ListSelectionListener() {"
  <Catalog>
    <col0>    jl4Jump.addListSelectionListener(new javax.swing.event.ListSelectionListener() {</col0>
  </Catalog>
 
"      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {"
  <Catalog>
    <col0>      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {</col0>
  </Catalog>
 
"        jl4JumpValueChanged(evt);"
  <Catalog>
    <col0>        jl4JumpValueChanged(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jsp4Jump.setViewportView(jl4Jump);"
  <Catalog>
    <col0>    jsp4Jump.setViewportView(jl4Jump);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4All.setColumns(20);"
  <Catalog>
    <col0>    jta4All.setColumns(20);</col0>
  </Catalog>
 
"    jta4All.setRows(5);"
  <Catalog>
    <col0>    jta4All.setRows(5);</col0>
  </Catalog>
 
"    jta4All.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jta4All.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jta4All.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jta4All.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jta4AllMouseClicked(evt);"
  <Catalog>
    <col0>        jta4AllMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jsp4All.setViewportView(jta4All);"
  <Catalog>
    <col0>    jsp4All.setViewportView(jta4All);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4All.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "jta4Sec", "jta4Sub", "jta4Sys", "jta4Line", "jta4Info", "jta4Near", "jta4Orb", "jta4Dest", "jta4Str", "jta4HTML", "jta4UWP", "jta4Bases" }));"
  <Catalog>
    <col0>    jcb4All.setModel(new javax.swing.DefaultComboBoxModel(new String[] { jta4Sec, jta4Sub, jta4Sys, jta4Line, jta4Info, jta4Near, jta4Orb, jta4Dest, jta4Str, jta4HTML, jta4UWP, jta4Bases }));</col0>
  </Catalog>
 
"    jcb4All.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4All.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4All.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4All.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4AllActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4AllActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jtf4UWP.setToolTipText("Enter UWP & click");"
  <Catalog>
    <col0>    jtf4UWP.setToolTipText(Enter UWP & click);</col0>
  </Catalog>
 
"    jtf4UWP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jtf4UWP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jtf4UWP.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jtf4UWP.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jtf4UWPMouseClicked(evt);"
  <Catalog>
    <col0>        jtf4UWPMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jtf4UWP.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jtf4UWP.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jtf4UWPActionPerformed(evt);"
  <Catalog>
    <col0>        jtf4UWPActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Lang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vilani", "Zhodani", "Vargr", "Aslan", "Droyne", "Other" }));"
  <Catalog>
    <col0>    jcb4Lang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { Vilani, Zhodani, Vargr, Aslan, Droyne, Other }));</col0>
  </Catalog>
 
"    jcb4Lang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Lang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Lang.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Lang.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4LangMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4LangMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Lang.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Lang.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4LangActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4LangActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jtf4Word.setToolTipText("Click gets word, CRL+C copies");"
  <Catalog>
    <col0>    jtf4Word.setToolTipText(Click gets word, CRLC copies);</col0>
  </Catalog>
 
"    jtf4Word.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jtf4Word.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jtf4Word.setMargin(new java.awt.Insets(0, 0, 0, 0));"
  <Catalog>
    <col0>    jtf4Word.setMargin(new java.awt.Insets(0, 0, 0, 0));</col0>
  </Catalog>
 
"    jtf4Word.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jtf4Word.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jtf4WordMouseClicked(evt);"
  <Catalog>
    <col0>        jtf4WordMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jtf4Word.addKeyListener(new java.awt.event.KeyAdapter() {"
  <Catalog>
    <col0>    jtf4Word.addKeyListener(new java.awt.event.KeyAdapter() {</col0>
  </Catalog>
 
"      public void keyPressed(java.awt.event.KeyEvent evt) {"
  <Catalog>
    <col0>      public void keyPressed(java.awt.event.KeyEvent evt) {</col0>
  </Catalog>
 
"        jtf4WordKeyPressed(evt);"
  <Catalog>
    <col0>        jtf4WordKeyPressed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Options.setMaximumRowCount(10);"
  <Catalog>
    <col0>    jcb4Options.setMaximumRowCount(10);</col0>
  </Catalog>
 
"    jcb4Options.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "_Choose", "Squadrons", "Troops", "Counter", "Scripting", "Launch", "Box", "Backup", "LPT", "XML" }));"
  <Catalog>
    <col0>    jcb4Options.setModel(new javax.swing.DefaultComboBoxModel(new String[] { _Choose, Squadrons, Troops, Counter, Scripting, Launch, Box, Backup, LPT, XML }));</col0>
  </Catalog>
 
"    jcb4Options.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Options.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Options.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Options.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4OptionsMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4OptionsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Options.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Options.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4OptionsActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4OptionsActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Pic.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    panel4Pic.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    panel4Pic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    panel4Pic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    panel4Pic.setToolTipText("Cilck saves in T5");"
  <Catalog>
    <col0>    panel4Pic.setToolTipText(Cilck saves in T5);</col0>
  </Catalog>
 
"    panel4Pic.setPreferredSize(new java.awt.Dimension(200, 100));"
  <Catalog>
    <col0>    panel4Pic.setPreferredSize(new java.awt.Dimension(200, 100));</col0>
  </Catalog>
 
"    panel4Pic.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {"
  <Catalog>
    <col0>    panel4Pic.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {</col0>
  </Catalog>
 
"      public void mouseMoved(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseMoved(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        panel4PicMouseMoved(evt);"
  <Catalog>
    <col0>        panel4PicMouseMoved(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    panel4Pic.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    panel4Pic.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        panel4PicMouseClicked(evt);"
  <Catalog>
    <col0>        panel4PicMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout panel4PicLayout = new javax.swing.GroupLayout(panel4Pic);"
  <Catalog>
    <col0>    javax.swing.GroupLayout panel4PicLayout = new javax.swing.GroupLayout(panel4Pic);</col0>
  </Catalog>
 
"    panel4Pic.setLayout(panel4PicLayout);"
  <Catalog>
    <col0>    panel4Pic.setLayout(panel4PicLayout);</col0>
  </Catalog>
 
"    panel4PicLayout.setHorizontalGroup("
  <Catalog>
    <col0>    panel4PicLayout.setHorizontalGroup(</col0>
  </Catalog>
 
"      panel4PicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4PicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGap(0, 0, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addGap(0, 0, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    panel4PicLayout.setVerticalGroup("
  <Catalog>
    <col0>    panel4PicLayout.setVerticalGroup(</col0>
  </Catalog>
 
"      panel4PicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4PicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGap(0, 97, Short.MAX_VALUE)"
  <Catalog>
    <col0>      .addGap(0, 97, Short.MAX_VALUE)</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    sC.setText("sc");"
  <Catalog>
    <col0>    sC.setText(sc);</col0>
  </Catalog>
 
"    sC.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    sC.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        sCMouseClicked(evt);"
  <Catalog>
    <col0>        sCMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    sB.setText("sb");"
  <Catalog>
    <col0>    sB.setText(sb);</col0>
  </Catalog>
 
"    sB.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    sB.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        sBMouseClicked(evt);"
  <Catalog>
    <col0>        sBMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    sS.setText("ss");"
  <Catalog>
    <col0>    sS.setText(ss);</col0>
  </Catalog>
 
"    sS.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    sS.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        sSMouseClicked(evt);"
  <Catalog>
    <col0>        sSMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);"
  <Catalog>
    <col0>    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);</col0>
  </Catalog>
 
"    jPanel1.setLayout(jPanel1Layout);"
  <Catalog>
    <col0>    jPanel1.setLayout(jPanel1Layout);</col0>
  </Catalog>
 
"    jPanel1Layout.setHorizontalGroup("
  <Catalog>
    <col0>    jPanel1Layout.setHorizontalGroup(</col0>
  </Catalog>
 
"      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(jPanel1Layout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(jPanel1Layout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addComponent(sC, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(sC, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(sB, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(sB, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(sS, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>          .addComponent(sS, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"        .addGap(0, 0, Short.MAX_VALUE))"
  <Catalog>
    <col0>        .addGap(0, 0, Short.MAX_VALUE))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    jPanel1Layout.setVerticalGroup("
  <Catalog>
    <col0>    jPanel1Layout.setVerticalGroup(</col0>
  </Catalog>
 
"      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(jPanel1Layout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(jPanel1Layout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addComponent(sC)"
  <Catalog>
    <col0>        .addComponent(sC)</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addComponent(sB)"
  <Catalog>
    <col0>        .addComponent(sB)</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addComponent(sS)"
  <Catalog>
    <col0>        .addComponent(sS)</col0>
  </Catalog>
 
"        .addGap(0, 0, 0))"
  <Catalog>
    <col0>        .addGap(0, 0, 0))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4T5PBG.setBackground(new java.awt.Color(0, 0, 0));"
  <Catalog>
    <col0>    panel4T5PBG.setBackground(new java.awt.Color(0, 0, 0));</col0>
  </Catalog>
 
"    panel4T5PBG.setForeground(java.awt.Color.lightGray);"
  <Catalog>
    <col0>    panel4T5PBG.setForeground(java.awt.Color.lightGray);</col0>
  </Catalog>
 
"    panel4T5PBG.setOpaque(false);"
  <Catalog>
    <col0>    panel4T5PBG.setOpaque(false);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel5.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jLabel5.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jLabel5.setText("Pop");"
  <Catalog>
    <col0>    jLabel5.setText(Pop);</col0>
  </Catalog>
 
"    jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jLabel5MouseClicked(evt);"
  <Catalog>
    <col0>        jLabel5MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel6.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jLabel6.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jLabel6.setText("Belts");"
  <Catalog>
    <col0>    jLabel6.setText(Belts);</col0>
  </Catalog>
 
"    jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jLabel6MouseClicked(evt);"
  <Catalog>
    <col0>        jLabel6MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel7.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jLabel7.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jLabel7.setText("GGs");"
  <Catalog>
    <col0>    jLabel7.setText(GGs);</col0>
  </Catalog>
 
"    jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jLabel7MouseClicked(evt);"
  <Catalog>
    <col0>        jLabel7MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel8.setForeground(java.awt.Color.lightGray);"
  <Catalog>
    <col0>    jLabel8.setForeground(java.awt.Color.lightGray);</col0>
  </Catalog>
 
"    jLabel8.setText("0");"
  <Catalog>
    <col0>    jLabel8.setText(0);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel9.setForeground(java.awt.Color.lightGray);"
  <Catalog>
    <col0>    jLabel9.setForeground(java.awt.Color.lightGray);</col0>
  </Catalog>
 
"    jLabel9.setText("0");"
  <Catalog>
    <col0>    jLabel9.setText(0);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel10.setForeground(java.awt.Color.lightGray);"
  <Catalog>
    <col0>    jLabel10.setForeground(java.awt.Color.lightGray);</col0>
  </Catalog>
 
"    jLabel10.setText("0");"
  <Catalog>
    <col0>    jLabel10.setText(0);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel11.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jLabel11.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jLabel11.setText("W");"
  <Catalog>
    <col0>    jLabel11.setText(W);</col0>
  </Catalog>
 
"    jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jLabel11MouseClicked(evt);"
  <Catalog>
    <col0>        jLabel11MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel12.setForeground(java.awt.Color.lightGray);"
  <Catalog>
    <col0>    jLabel12.setForeground(java.awt.Color.lightGray);</col0>
  </Catalog>
 
"    jLabel12.setText("0");"
  <Catalog>
    <col0>    jLabel12.setText(0);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout panel4T5PBGLayout = new javax.swing.GroupLayout(panel4T5PBG);"
  <Catalog>
    <col0>    javax.swing.GroupLayout panel4T5PBGLayout = new javax.swing.GroupLayout(panel4T5PBG);</col0>
  </Catalog>
 
"    panel4T5PBG.setLayout(panel4T5PBGLayout);"
  <Catalog>
    <col0>    panel4T5PBG.setLayout(panel4T5PBGLayout);</col0>
  </Catalog>
 
"    panel4T5PBGLayout.setHorizontalGroup("
  <Catalog>
    <col0>    panel4T5PBGLayout.setHorizontalGroup(</col0>
  </Catalog>
 
"      panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(panel4T5PBGLayout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(panel4T5PBGLayout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGap(2, 2, 2)"
  <Catalog>
    <col0>        .addGap(2, 2, 2)</col0>
  </Catalog>
 
"        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addComponent(jLabel5)"
  <Catalog>
    <col0>          .addComponent(jLabel5)</col0>
  </Catalog>
 
"          .addComponent(jLabel6)"
  <Catalog>
    <col0>          .addComponent(jLabel6)</col0>
  </Catalog>
 
"          .addComponent(jLabel7)"
  <Catalog>
    <col0>          .addComponent(jLabel7)</col0>
  </Catalog>
 
"          .addComponent(jLabel11))"
  <Catalog>
    <col0>          .addComponent(jLabel11))</col0>
  </Catalog>
 
"        .addGap(18, 18, 18)"
  <Catalog>
    <col0>        .addGap(18, 18, 18)</col0>
  </Catalog>
 
"        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addComponent(jLabel12)"
  <Catalog>
    <col0>          .addComponent(jLabel12)</col0>
  </Catalog>
 
"          .addComponent(jLabel8)"
  <Catalog>
    <col0>          .addComponent(jLabel8)</col0>
  </Catalog>
 
"          .addComponent(jLabel9)"
  <Catalog>
    <col0>          .addComponent(jLabel9)</col0>
  </Catalog>
 
"          .addComponent(jLabel10))"
  <Catalog>
    <col0>          .addComponent(jLabel10))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0))"
  <Catalog>
    <col0>        .addGap(0, 0, 0))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
"    panel4T5PBGLayout.setVerticalGroup("
  <Catalog>
    <col0>    panel4T5PBGLayout.setVerticalGroup(</col0>
  </Catalog>
 
"      panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(panel4T5PBGLayout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(panel4T5PBGLayout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(jLabel5)"
  <Catalog>
    <col0>          .addComponent(jLabel5)</col0>
  </Catalog>
 
"          .addComponent(jLabel8))"
  <Catalog>
    <col0>          .addComponent(jLabel8))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(jLabel6)"
  <Catalog>
    <col0>          .addComponent(jLabel6)</col0>
  </Catalog>
 
"          .addComponent(jLabel9))"
  <Catalog>
    <col0>          .addComponent(jLabel9))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(jLabel7)"
  <Catalog>
    <col0>          .addComponent(jLabel7)</col0>
  </Catalog>
 
"          .addComponent(jLabel10))"
  <Catalog>
    <col0>          .addComponent(jLabel10))</col0>
  </Catalog>
 
"        .addGap(0, 0, 0)"
  <Catalog>
    <col0>        .addGap(0, 0, 0)</col0>
  </Catalog>
 
"        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>        .addGroup(panel4T5PBGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"          .addComponent(jLabel11)"
  <Catalog>
    <col0>          .addComponent(jLabel11)</col0>
  </Catalog>
 
"          .addComponent(jLabel12)))"
  <Catalog>
    <col0>          .addComponent(jLabel12)))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jsp4Maps.setPreferredSize(new java.awt.Dimension(600, 600));"
  <Catalog>
    <col0>    jsp4Maps.setPreferredSize(new java.awt.Dimension(600, 600));</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    panel4Maps.setToolTipText("Pink = 10D ~ Grav Limit   Blue = 100D Jump Limit   Gray = 1000D Maneuver Limit");"
  <Catalog>
    <col0>    panel4Maps.setToolTipText(Pink = 10D ~ Grav Limit   Blue = 100D Jump Limit   Gray = 1000D Maneuver Limit);</col0>
  </Catalog>
 
"    panel4Maps.setPreferredSize(new java.awt.Dimension(600, 600));"
  <Catalog>
    <col0>    panel4Maps.setPreferredSize(new java.awt.Dimension(600, 600));</col0>
  </Catalog>
 
"    panel4Maps.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    panel4Maps.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        panel4MapsMouseClicked(evt);"
  <Catalog>
    <col0>        panel4MapsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jsp4Maps.setViewportView(panel4Maps);"
  <Catalog>
    <col0>    jsp4Maps.setViewportView(panel4Maps);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jScrollPane1.setViewportView(jsp4Maps);"
  <Catalog>
    <col0>    jScrollPane1.setViewportView(jsp4Maps);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jtf4Find.setText("1910");"
  <Catalog>
    <col0>    jtf4Find.setText(1910);</col0>
  </Catalog>
 
"    jtf4Find.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jtf4Find.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jtf4Find.setEnabled(false);"
  <Catalog>
    <col0>    jtf4Find.setEnabled(false);</col0>
  </Catalog>
 
"    jtf4Find.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jtf4Find.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jtf4FindMouseClicked(evt);"
  <Catalog>
    <col0>        jtf4FindMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0-Hex", "1-Name", "2-UWP", "  Starport", "  Size", "  Atmosphere", "  Hydrosphere", "  Population", "  Government", "  Law Level", "  Tech Level", "3-Remarks", "4-Importance", "5-Economic", "  Resources", "  Labour", "  Infrastructure", "  Efficiency", "6-Cultural", "  Homogeneity", "  Acceptance", "  Strangeness", "  Symbols", "7-Nobles", "    B-Knight", "    c-Baronet", "    C-Baron", "    D-Marquis", "    e-Viscount", "    E-Count", "    f-Duke", "    F-Duke", "    G-Archduke", "    H-Emperor", "8-Bases", "9-Zones", "  Green", "  Amber", "  Red", "10-PBG", "  No pop", "  Low pop", "  Med pop", "  HIGH POP", "11-Worlds", "12-Allegiance", "13-Stellar", "  Color", "  Decimal", "  Star Size", "  Amount" }));"
  <Catalog>
    <col0>    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { 0-Hex, 1-Name, 2-UWP,   Starport,   Size,   Atmosphere,   Hydrosphere,   Population,   Government,   Law Level,   Tech Level, 3-Remarks, 4-Importance, 5-Economic,   Resources,   Labour,   Infrastructure,   Efficiency, 6-Cultural,   Homogeneity,   Acceptance,   Strangeness,   Symbols, 7-Nobles,     B-Knight,     c-Baronet,     C-Baron,     D-Marquis,     e-Viscount,     E-Count,     f-Duke,     F-Duke,     G-Archduke,     H-Emperor, 8-Bases, 9-Zones,   Green,   Amber,   Red, 10-PBG,   No pop,   Low pop,   Med pop,   HIGH POP, 11-Worlds, 12-Allegiance, 13-Stellar,   Color,   Decimal,   Star Size,   Amount }));</col0>
  </Catalog>
 
"    jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jComboBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jComboBox1.setEnabled(false);"
  <Catalog>
    <col0>    jComboBox1.setEnabled(false);</col0>
  </Catalog>
 
"    jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jComboBox1MouseClicked(evt);"
  <Catalog>
    <col0>        jComboBox1MouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jComboBox1.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jComboBox1.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jComboBox1ActionPerformed(evt);"
  <Catalog>
    <col0>        jComboBox1ActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jButton1.setText("Cap");"
  <Catalog>
    <col0>    jButton1.setText(Cap);</col0>
  </Catalog>
 
"    jButton1.setToolTipText("Locate Subsector capital (or most important)");"
  <Catalog>
    <col0>    jButton1.setToolTipText(Locate Subsector capital (or most important));</col0>
  </Catalog>
 
"    jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jButton1.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jButton1.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mousePressed(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mousePressed(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jButton1MousePressed(evt);"
  <Catalog>
    <col0>        jButton1MousePressed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      public void mouseReleased(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseReleased(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jButton1MouseReleased(evt);"
  <Catalog>
    <col0>        jButton1MouseReleased(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jButton1.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jButton1.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jButton1ActionPerformed(evt);"
  <Catalog>
    <col0>        jButton1ActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jcb4Career.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Choose-", "Navy", "Marine", "Army", "Scout", "Other", "Merchant" }));"
  <Catalog>
    <col0>    jcb4Career.setModel(new javax.swing.DefaultComboBoxModel(new String[] { -Choose-, Navy, Marine, Army, Scout, Other, Merchant }));</col0>
  </Catalog>
 
"    jcb4Career.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jcb4Career.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jcb4Career.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jcb4Career.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jcb4CareerMouseClicked(evt);"
  <Catalog>
    <col0>        jcb4CareerMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jcb4Career.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jcb4Career.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jcb4CareerActionPerformed(evt);"
  <Catalog>
    <col0>        jcb4CareerActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    js4Terms.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));"
  <Catalog>
    <col0>    js4Terms.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));</col0>
  </Catalog>
 
"    js4Terms.setToolTipText("Terms");"
  <Catalog>
    <col0>    js4Terms.setToolTipText(Terms);</col0>
  </Catalog>
 
"    js4Terms.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    js4Terms.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    js4Terms.addChangeListener(new javax.swing.event.ChangeListener() {"
  <Catalog>
    <col0>    js4Terms.addChangeListener(new javax.swing.event.ChangeListener() {</col0>
  </Catalog>
 
"      public void stateChanged(javax.swing.event.ChangeEvent evt) {"
  <Catalog>
    <col0>      public void stateChanged(javax.swing.event.ChangeEvent evt) {</col0>
  </Catalog>
 
"        js4TermsStateChanged(evt);"
  <Catalog>
    <col0>        js4TermsStateChanged(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    js4Terms.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    js4Terms.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        js4TermsMouseClicked(evt);"
  <Catalog>
    <col0>        js4TermsMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jtf4UPP.setText("AAAAAA");"
  <Catalog>
    <col0>    jtf4UPP.setText(AAAAAA);</col0>
  </Catalog>
 
"    jtf4UPP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jtf4UPP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jtf4UPP.setMinimumSize(new java.awt.Dimension(6, 1));"
  <Catalog>
    <col0>    jtf4UPP.setMinimumSize(new java.awt.Dimension(6, 1));</col0>
  </Catalog>
 
"    jtf4UPP.setPreferredSize(new java.awt.Dimension(45, 20));"
  <Catalog>
    <col0>    jtf4UPP.setPreferredSize(new java.awt.Dimension(45, 20));</col0>
  </Catalog>
 
"    jtf4UPP.addMouseListener(new java.awt.event.MouseAdapter() {"
  <Catalog>
    <col0>    jtf4UPP.addMouseListener(new java.awt.event.MouseAdapter() {</col0>
  </Catalog>
 
"      public void mouseClicked(java.awt.event.MouseEvent evt) {"
  <Catalog>
    <col0>      public void mouseClicked(java.awt.event.MouseEvent evt) {</col0>
  </Catalog>
 
"        jtf4UPPMouseClicked(evt);"
  <Catalog>
    <col0>        jtf4UPPMouseClicked(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jtf4UPP.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jtf4UPP.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jtf4UPPActionPerformed(evt);"
  <Catalog>
    <col0>        jtf4UPPActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    jtf4UPP.addKeyListener(new java.awt.event.KeyAdapter() {"
  <Catalog>
    <col0>    jtf4UPP.addKeyListener(new java.awt.event.KeyAdapter() {</col0>
  </Catalog>
 
"      public void keyPressed(java.awt.event.KeyEvent evt) {"
  <Catalog>
    <col0>      public void keyPressed(java.awt.event.KeyEvent evt) {</col0>
  </Catalog>
 
"        jtf4UPPKeyPressed(evt);"
  <Catalog>
    <col0>        jtf4UPPKeyPressed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jButton2.setText("S");"
  <Catalog>
    <col0>    jButton2.setText(S);</col0>
  </Catalog>
 
"    jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));"
  <Catalog>
    <col0>    jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));</col0>
  </Catalog>
 
"    jButton2.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    jButton2.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        jButton2ActionPerformed(evt);"
  <Catalog>
    <col0>        jButton2ActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N"
  <Catalog>
    <col0>    jLabel4.setFont(new java.awt.Font(Tahoma, 0, 14)); // NOI18N</col0>
  </Catalog>
 
"    jLabel4.setForeground(java.awt.Color.green);"
  <Catalog>
    <col0>    jLabel4.setForeground(java.awt.Color.green);</col0>
  </Catalog>
 
"    jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);"
  <Catalog>
    <col0>    jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);</col0>
  </Catalog>
 
"    jLabel4.setText("UWP");"
  <Catalog>
    <col0>    jLabel4.setText(UWP);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    Sex.setSelected(true);"
  <Catalog>
    <col0>    Sex.setSelected(true);</col0>
  </Catalog>
 
"    Sex.setToolTipText("Male?");"
  <Catalog>
    <col0>    Sex.setToolTipText(Male?);</col0>
  </Catalog>
 
"    Sex.setIconTextGap(0);"
  <Catalog>
    <col0>    Sex.setIconTextGap(0);</col0>
  </Catalog>
 
"    Sex.setMargin(new java.awt.Insets(0, 0, 0, 0));"
  <Catalog>
    <col0>    Sex.setMargin(new java.awt.Insets(0, 0, 0, 0));</col0>
  </Catalog>
 
"    Sex.setOpaque(false);"
  <Catalog>
    <col0>    Sex.setOpaque(false);</col0>
  </Catalog>
 
"    Sex.addActionListener(new java.awt.event.ActionListener() {"
  <Catalog>
    <col0>    Sex.addActionListener(new java.awt.event.ActionListener() {</col0>
  </Catalog>
 
"      public void actionPerformed(java.awt.event.ActionEvent evt) {"
  <Catalog>
    <col0>      public void actionPerformed(java.awt.event.ActionEvent evt) {</col0>
  </Catalog>
 
"        SexActionPerformed(evt);"
  <Catalog>
    <col0>        SexActionPerformed(evt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);"
  <Catalog>
    <col0>    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);</col0>
  </Catalog>
 
"    this.setLayout(layout);"
  <Catalog>
    <col0>    this.setLayout(layout);</col0>
  </Catalog>
 
"    layout.setHorizontalGroup("
  <Catalog>
    <col0>    layout.setHorizontalGroup(</col0>
  </Catalog>
 
"      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)"
  <Catalog>
    <col0>        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)</col0>
  </Catalog>
 
"          .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addComponent(panel4Strength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>            .addComponent(panel4Strength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)"
  <Catalog>
    <col0>            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)</col0>
  </Catalog>
 
"            .addComponent(panel4T5PBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>            .addComponent(panel4T5PBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"          .addComponent(jcb4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(jcb4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(jsp4Jump, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(jsp4Jump, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(panel4Pic, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(panel4Pic, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(panel4Jump, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(panel4Jump, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(js4Dist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(js4Dist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(panel4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>          .addComponent(panel4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"          .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))"
  <Catalog>
    <col0>          .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))</col0>
  </Catalog>
 
"        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)</col0>
  </Catalog>
 
"              .addComponent(jcb4Options, 0, 88, Short.MAX_VALUE)"
  <Catalog>
    <col0>              .addComponent(jcb4Options, 0, 88, Short.MAX_VALUE)</col0>
  </Catalog>
 
"              .addComponent(jcb4All, 0, 0, Short.MAX_VALUE))"
  <Catalog>
    <col0>              .addComponent(jcb4All, 0, 0, Short.MAX_VALUE))</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)</col0>
  </Catalog>
 
"              .addComponent(jComboBox1, 0, 71, Short.MAX_VALUE)"
  <Catalog>
    <col0>              .addComponent(jComboBox1, 0, 71, Short.MAX_VALUE)</col0>
  </Catalog>
 
"              .addComponent(jtf4UWP))"
  <Catalog>
    <col0>              .addComponent(jtf4UWP))</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)</col0>
  </Catalog>
 
"              .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)"
  <Catalog>
    <col0>              .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)</col0>
  </Catalog>
 
"              .addComponent(jtf4Find))"
  <Catalog>
    <col0>              .addComponent(jtf4Find))</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"              .addComponent(jcb4Career, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>              .addComponent(jcb4Career, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"              .addComponent(jcb4Lang, 0, 73, Short.MAX_VALUE))"
  <Catalog>
    <col0>              .addComponent(jcb4Lang, 0, 73, Short.MAX_VALUE))</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)</col0>
  </Catalog>
 
"              .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>              .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"                .addComponent(js4Terms, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(js4Terms, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addGap(0, 0, 0)"
  <Catalog>
    <col0>                .addGap(0, 0, 0)</col0>
  </Catalog>
 
"                .addComponent(jtf4UPP, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(jtf4UPP, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addGap(0, 0, 0)"
  <Catalog>
    <col0>                .addGap(0, 0, 0)</col0>
  </Catalog>
 
"                .addComponent(Sex)"
  <Catalog>
    <col0>                .addComponent(Sex)</col0>
  </Catalog>
 
"                .addGap(0, 0, 0)"
  <Catalog>
    <col0>                .addGap(0, 0, 0)</col0>
  </Catalog>
 
"                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"              .addComponent(jtf4Word)))"
  <Catalog>
    <col0>              .addComponent(jtf4Word)))</col0>
  </Catalog>
 
"          .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addGap(200, 200, 200)"
  <Catalog>
    <col0>            .addGap(200, 200, 200)</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"              .addComponent(panel4Sys, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>              .addComponent(panel4Sys, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"              .addComponent(jcb4Sys, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))"
  <Catalog>
    <col0>              .addComponent(jcb4Sys, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))</col0>
  </Catalog>
 
"          .addComponent(panel4Sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(panel4Sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(jcb4Sub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(jcb4Sub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(jsp4All, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>          .addComponent(jsp4All, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addComponent(jcb4Star, 0, 256, Short.MAX_VALUE)"
  <Catalog>
    <col0>          .addComponent(jcb4Star, 0, 256, Short.MAX_VALUE)</col0>
  </Catalog>
 
"          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)))"
  <Catalog>
    <col0>          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcb4Sec, jcb4Sub, panel4Sec, panel4Sub});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcb4Sec, jcb4Sub, panel4Sec, panel4Sub});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcb4Career, jcb4Lang});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcb4Career, jcb4Lang});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboBox1, jtf4UWP});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboBox1, jtf4UWP});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Sex, jButton2});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Sex, jButton2});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcb4Sys, panel4Sys});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jcb4Sys, panel4Sys});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.setVerticalGroup("
  <Catalog>
    <col0>    layout.setVerticalGroup(</col0>
  </Catalog>
 
"      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"      .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGap(20, 20, 20)"
  <Catalog>
    <col0>        .addGap(20, 20, 20)</col0>
  </Catalog>
 
"        .addComponent(jScrollPane1))"
  <Catalog>
    <col0>        .addComponent(jScrollPane1))</col0>
  </Catalog>
 
"      .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>      .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addComponent(jcb4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>            .addComponent(jcb4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addComponent(panel4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>            .addComponent(panel4Sec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"          .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)</col0>
  </Catalog>
 
"              .addComponent(jcb4Star)"
  <Catalog>
    <col0>              .addComponent(jcb4Star)</col0>
  </Catalog>
 
"              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"                .addComponent(jcb4Sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(jcb4Sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addComponent(jcb4Sys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))"
  <Catalog>
    <col0>                .addComponent(jcb4Sys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)</col0>
  </Catalog>
 
"              .addComponent(panel4Sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)"
  <Catalog>
    <col0>              .addComponent(panel4Sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)</col0>
  </Catalog>
 
"              .addComponent(panel4Sys, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))"
  <Catalog>
    <col0>              .addComponent(panel4Sys, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))</col0>
  </Catalog>
 
"        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"          .addGroup(layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"              .addComponent(jcb4Options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>              .addComponent(jcb4Options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"                .addComponent(jtf4UWP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(jtf4UWP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addComponent(jButton1))"
  <Catalog>
    <col0>                .addComponent(jButton1))</col0>
  </Catalog>
 
"              .addComponent(jcb4Lang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>              .addComponent(jcb4Lang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"              .addComponent(jtf4Word, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>              .addComponent(jtf4Word, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"              .addComponent(jcb4All, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>              .addComponent(jcb4All, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)"
  <Catalog>
    <col0>              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)</col0>
  </Catalog>
 
"                .addComponent(jtf4Find, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(jtf4Find, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addComponent(jcb4Career, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(jcb4Career, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addComponent(js4Terms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(js4Terms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addComponent(jtf4UPP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>                .addComponent(jtf4UPP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"                .addComponent(jButton2))"
  <Catalog>
    <col0>                .addComponent(jButton2))</col0>
  </Catalog>
 
"              .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>              .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"              .addComponent(Sex))"
  <Catalog>
    <col0>              .addComponent(Sex))</col0>
  </Catalog>
 
"            .addComponent(jsp4All))"
  <Catalog>
    <col0>            .addComponent(jsp4All))</col0>
  </Catalog>
 
"          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()"
  <Catalog>
    <col0>          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()</col0>
  </Catalog>
 
"            .addComponent(jLabel4)"
  <Catalog>
    <col0>            .addComponent(jLabel4)</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)"
  <Catalog>
    <col0>            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)</col0>
  </Catalog>
 
"              .addComponent(panel4Strength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>              .addComponent(panel4Strength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"              .addComponent(panel4T5PBG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))"
  <Catalog>
    <col0>              .addComponent(panel4T5PBG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addComponent(panel4Pic, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>            .addComponent(panel4Pic, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addComponent(panel4Jump, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>            .addComponent(panel4Jump, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addComponent(js4Dist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)"
  <Catalog>
    <col0>            .addComponent(js4Dist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)</col0>
  </Catalog>
 
"            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)"
  <Catalog>
    <col0>            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)</col0>
  </Catalog>
 
"            .addComponent(jsp4Jump, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)"
  <Catalog>
    <col0>            .addComponent(jsp4Jump, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)</col0>
  </Catalog>
 
"            .addGap(0, 0, 0)"
  <Catalog>
    <col0>            .addGap(0, 0, 0)</col0>
  </Catalog>
 
"            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))"
  <Catalog>
    <col0>            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))</col0>
  </Catalog>
 
"    );"
  <Catalog>
    <col0>    );</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Sex, jButton2, jcb4All, jcb4Career, jcb4Lang, jcb4Options, js4Terms, jtf4UPP, jtf4UWP, jtf4Word});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Sex, jButton2, jcb4All, jcb4Career, jcb4Lang, jcb4Options, js4Terms, jtf4UPP, jtf4UWP, jtf4Word});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jComboBox1, jtf4Find});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jComboBox1, jtf4Find});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {panel4Sec, panel4Sub, panel4Sys});"
  <Catalog>
    <col0>    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {panel4Sec, panel4Sub, panel4Sys});</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }// </editor-fold>//GEN-END:initComponents"
  <Catalog>
    <col0>  }// </editor-fold>//GEN-END:initComponents</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4SecActionPerformed"
  <Catalog>
    <col0>  private void jcb4SecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4SecActionPerformed</col0>
  </Catalog>
 
"    jcb4SecAction(evt);"
  <Catalog>
    <col0>    jcb4SecAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4SecActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4SecActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4SubActionPerformed"
  <Catalog>
    <col0>  private void jcb4SubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4SubActionPerformed</col0>
  </Catalog>
 
"    jcb4SubAction(evt);"
  <Catalog>
    <col0>    jcb4SubAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4SubActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4SubActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4SysActionPerformed"
  <Catalog>
    <col0>  private void jcb4SysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4SysActionPerformed</col0>
  </Catalog>
 
"    jcb4SysAction(evt);"
  <Catalog>
    <col0>    jcb4SysAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4SysActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4SysActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4SysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4SysMouseClicked"
  <Catalog>
    <col0>  private void panel4SysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4SysMouseClicked</col0>
  </Catalog>
 
"    panel4SysClick(evt);"
  <Catalog>
    <col0>    panel4SysClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_panel4SysMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_panel4SysMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jta4SecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta4SecMouseClicked"
  <Catalog>
    <col0>  private void jta4SecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta4SecMouseClicked</col0>
  </Catalog>
 
"    setUWP();"
  <Catalog>
    <col0>    setUWP();</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jta4SecMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jta4SecMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4SysMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4SysMouseMoved"
  <Catalog>
    <col0>  private void panel4SysMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4SysMouseMoved</col0>
  </Catalog>
 
"    panel4SysMove(evt);"
  <Catalog>
    <col0>    panel4SysMove(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_panel4SysMouseMoved"
  <Catalog>
    <col0>  }//GEN-LAST:event_panel4SysMouseMoved</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4MapsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4MapsMouseClicked"
  <Catalog>
    <col0>  private void panel4MapsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4MapsMouseClicked</col0>
  </Catalog>
 
"    panel4MapClick(evt);"
  <Catalog>
    <col0>    panel4MapClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_panel4MapsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_panel4MapsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4StarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4StarActionPerformed"
  <Catalog>
    <col0>  private void jcb4StarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4StarActionPerformed</col0>
  </Catalog>
 
"    jcb4StarAction(evt);"
  <Catalog>
    <col0>    jcb4StarAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4StarActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4StarActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void js4DistStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_js4DistStateChanged"
  <Catalog>
    <col0>  private void js4DistStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_js4DistStateChanged</col0>
  </Catalog>
 
"    js4DistChange(evt);"
  <Catalog>
    <col0>    js4DistChange(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_js4DistStateChanged"
  <Catalog>
    <col0>  }//GEN-LAST:event_js4DistStateChanged</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked"
  <Catalog>
    <col0>  private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked</col0>
  </Catalog>
 
"    jLabel3Click(evt);"
  <Catalog>
    <col0>    jLabel3Click(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jLabel3MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jLabel3MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox19ActionPerformed"
  <Catalog>
    <col0>  private void jComboBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox19ActionPerformed</col0>
  </Catalog>
 
"    calcCost();"
  <Catalog>
    <col0>    calcCost();</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jComboBox19ActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jComboBox19ActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed"
  <Catalog>
    <col0>  private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed</col0>
  </Catalog>
 
"    jcb2Action(evt);"
  <Catalog>
    <col0>    jcb2Action(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jCheckBox2ActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jCheckBox2ActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed"
  <Catalog>
    <col0>  private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed</col0>
  </Catalog>
 
"    jcb1Action(evt);"
  <Catalog>
    <col0>    jcb1Action(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jCheckBox1ActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jCheckBox1ActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jta4OrbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta4OrbMouseClicked"
  <Catalog>
    <col0>  private void jta4OrbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta4OrbMouseClicked</col0>
  </Catalog>
 
"    jta4OrbClick(evt);"
  <Catalog>
    <col0>    jta4OrbClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jta4OrbMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jta4OrbMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4SysMouseClicked"
  <Catalog>
    <col0>  private void jcb4SysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4SysMouseClicked</col0>
  </Catalog>
 
"    jcb4SysClick(evt);"
  <Catalog>
    <col0>    jcb4SysClick(evt);</col0>
  </Catalog>
 
"    jcb4SysItemChange();"
  <Catalog>
    <col0>    jcb4SysItemChange();</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4SysMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4SysMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4SubMouseClicked"
  <Catalog>
    <col0>  private void jcb4SubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4SubMouseClicked</col0>
  </Catalog>
 
"    jcb4SubClick(evt);"
  <Catalog>
    <col0>    jcb4SubClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4SubMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4SubMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4SecMouseClicked"
  <Catalog>
    <col0>  private void jcb4SecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4SecMouseClicked</col0>
  </Catalog>
 
"    jcb4SecClick(evt);"
  <Catalog>
    <col0>    jcb4SecClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4SecMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4SecMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4StarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4StarMouseClicked"
  <Catalog>
    <col0>  private void jcb4StarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4StarMouseClicked</col0>
  </Catalog>
 
"    jcb4StarClick(evt);"
  <Catalog>
    <col0>    jcb4StarClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4StarMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4StarMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void SDBsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SDBsMouseClicked"
  <Catalog>
    <col0>  private void SDBsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SDBsMouseClicked</col0>
  </Catalog>
 
"    SDBsClick(evt);"
  <Catalog>
    <col0>    SDBsClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_SDBsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_SDBsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void TroopsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TroopsMouseClicked"
  <Catalog>
    <col0>  private void TroopsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TroopsMouseClicked</col0>
  </Catalog>
 
"    TroopsClick(evt);"
  <Catalog>
    <col0>    TroopsClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_TroopsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_TroopsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void RonsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RonsMouseClicked"
  <Catalog>
    <col0>  private void RonsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RonsMouseClicked</col0>
  </Catalog>
 
"    RonsClick(evt);"
  <Catalog>
    <col0>    RonsClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_RonsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_RonsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void CFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CFMouseClicked"
  <Catalog>
    <col0>  private void CFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CFMouseClicked</col0>
  </Catalog>
 
"    CFClick(evt);"
  <Catalog>
    <col0>    CFClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_CFMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_CFMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sdbs1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sdbs1MouseClicked"
  <Catalog>
    <col0>  private void sdbs1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sdbs1MouseClicked</col0>
  </Catalog>
 
"    SDBs1Click(evt);"
  <Catalog>
    <col0>    SDBs1Click(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_sdbs1MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_sdbs1MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void squadronsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_squadronsMouseClicked"
  <Catalog>
    <col0>  private void squadronsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_squadronsMouseClicked</col0>
  </Catalog>
 
"    squadronsClick(evt);"
  <Catalog>
    <col0>    squadronsClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_squadronsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_squadronsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void defbatsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_defbatsMouseClicked"
  <Catalog>
    <col0>  private void defbatsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_defbatsMouseClicked</col0>
  </Catalog>
 
"    defbatsClick(evt);"
  <Catalog>
    <col0>    defbatsClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_defbatsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_defbatsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void troopunitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_troopunitsMouseClicked"
  <Catalog>
    <col0>  private void troopunitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_troopunitsMouseClicked</col0>
  </Catalog>
 
"    troopsunitClick(evt);"
  <Catalog>
    <col0>    troopsunitClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_troopunitsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_troopunitsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl4JumpMouseClicked"
  <Catalog>
    <col0>  private void jl4JumpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl4JumpMouseClicked</col0>
  </Catalog>
 
"    jl4JumpClick(evt);"
  <Catalog>
    <col0>    jl4JumpClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jl4JumpMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jl4JumpMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jl4JumpValueChanged"
  <Catalog>
    <col0>  private void jl4JumpValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jl4JumpValueChanged</col0>
  </Catalog>
 
"    jl4JumpChange(evt);"
  <Catalog>
    <col0>    jl4JumpChange(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jl4JumpValueChanged"
  <Catalog>
    <col0>  }//GEN-LAST:event_jl4JumpValueChanged</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4AllActionPerformed"
  <Catalog>
    <col0>  private void jcb4AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4AllActionPerformed</col0>
  </Catalog>
 
"    jcb4AllAction(evt);"
  <Catalog>
    <col0>    jcb4AllAction(evt);</col0>
  </Catalog>
 
"//    writeSectorInfo();"
  <Catalog>
    <col0>//    writeSectorInfo();</col0>
  </Catalog>
 
"//    writeSubsectorInfo();"
  <Catalog>
    <col0>//    writeSubsectorInfo();</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4AllActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4AllActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4WorldPicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4WorldPicMouseClicked"
  <Catalog>
    <col0>  private void panel4WorldPicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4WorldPicMouseClicked</col0>
  </Catalog>
 
"    panel4WorldPicClick(evt);"
  <Catalog>
    <col0>    panel4WorldPicClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_panel4WorldPicMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_panel4WorldPicMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4WordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4WordMouseClicked"
  <Catalog>
    <col0>  private void jtf4WordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4WordMouseClicked</col0>
  </Catalog>
 
"    jtf4WordClick(evt);"
  <Catalog>
    <col0>    jtf4WordClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4WordMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4WordMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4LangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4LangActionPerformed"
  <Catalog>
    <col0>  private void jcb4LangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4LangActionPerformed</col0>
  </Catalog>
 
"    jcb4LangAction(evt);"
  <Catalog>
    <col0>    jcb4LangAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4LangActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4LangActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UWPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf4UWPActionPerformed"
  <Catalog>
    <col0>  private void jtf4UWPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf4UWPActionPerformed</col0>
  </Catalog>
 
"    jtf4UWPAction(evt);"
  <Catalog>
    <col0>    jtf4UWPAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4UWPActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4UWPActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UWPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4UWPMouseClicked"
  <Catalog>
    <col0>  private void jtf4UWPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4UWPMouseClicked</col0>
  </Catalog>
 
"    jtf4UWPClick(evt);"
  <Catalog>
    <col0>    jtf4UWPClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4UWPMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4UWPMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4OptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4OptionsActionPerformed"
  <Catalog>
    <col0>  private void jcb4OptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4OptionsActionPerformed</col0>
  </Catalog>
 
"    jcb4OptionsAction(evt);"
  <Catalog>
    <col0>    jcb4OptionsAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4OptionsActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4OptionsActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed"
  <Catalog>
    <col0>  private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed</col0>
  </Catalog>
 
"    jButton1Pressed(evt);"
  <Catalog>
    <col0>    jButton1Pressed(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jButton1MousePressed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jButton1MousePressed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased"
  <Catalog>
    <col0>  private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased</col0>
  </Catalog>
 
"    jButton1Released(evt);"
  <Catalog>
    <col0>    jButton1Released(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jButton1MouseReleased"
  <Catalog>
    <col0>  }//GEN-LAST:event_jButton1MouseReleased</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sCMouseClicked"
  <Catalog>
    <col0>  private void sCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sCMouseClicked</col0>
  </Catalog>
 
"    sCMouseClick(evt);"
  <Catalog>
    <col0>    sCMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_sCMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_sCMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sBMouseClicked"
  <Catalog>
    <col0>  private void sBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sBMouseClicked</col0>
  </Catalog>
 
"    sBMouseClick(evt);"
  <Catalog>
    <col0>    sBMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_sBMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_sBMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSMouseClicked"
  <Catalog>
    <col0>  private void sSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSMouseClicked</col0>
  </Catalog>
 
"    sSMouseClick(evt);"
  <Catalog>
    <col0>    sSMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_sSMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_sSMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl4JumpMousePressed"
  <Catalog>
    <col0>  private void jl4JumpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl4JumpMousePressed</col0>
  </Catalog>
 
"    jl4JumpPressed(evt);"
  <Catalog>
    <col0>    jl4JumpPressed(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jl4JumpMousePressed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jl4JumpMousePressed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl4JumpMouseReleased"
  <Catalog>
    <col0>  private void jl4JumpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl4JumpMouseReleased</col0>
  </Catalog>
 
"    jl4JumpReleased(evt);"
  <Catalog>
    <col0>    jl4JumpReleased(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jl4JumpMouseReleased"
  <Catalog>
    <col0>  }//GEN-LAST:event_jl4JumpMouseReleased</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4PicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4PicMouseClicked"
  <Catalog>
    <col0>  private void panel4PicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4PicMouseClicked</col0>
  </Catalog>
 
"    panel4ClickClick(evt);"
  <Catalog>
    <col0>    panel4ClickClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_panel4PicMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_panel4PicMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked"
  <Catalog>
    <col0>  private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked</col0>
  </Catalog>
 
"    jLabel5MouseClick(evt);"
  <Catalog>
    <col0>    jLabel5MouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jLabel5MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jLabel5MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked"
  <Catalog>
    <col0>  private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked</col0>
  </Catalog>
 
"    jLabel6MouseClick(evt);"
  <Catalog>
    <col0>    jLabel6MouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jLabel6MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jLabel6MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked"
  <Catalog>
    <col0>  private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked</col0>
  </Catalog>
 
"    jLabel7MouseClick(evt);"
  <Catalog>
    <col0>    jLabel7MouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jLabel7MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jLabel7MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked"
  <Catalog>
    <col0>  private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked</col0>
  </Catalog>
 
"    jLabel11MouseClick(evt);"
  <Catalog>
    <col0>    jLabel11MouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jLabel11MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jLabel11MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed"
  <Catalog>
    <col0>  private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed</col0>
  </Catalog>
 
"    jComboBox1Action(evt);"
  <Catalog>
    <col0>    jComboBox1Action(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jComboBox1ActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jComboBox1ActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4FindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4FindMouseClicked"
  <Catalog>
    <col0>  private void jtf4FindMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4FindMouseClicked</col0>
  </Catalog>
 
"    jtf4FindMouseClick(evt);"
  <Catalog>
    <col0>    jtf4FindMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4FindMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4FindMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox19MouseClicked"
  <Catalog>
    <col0>  private void jComboBox19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox19MouseClicked</col0>
  </Catalog>
 
"    jComboBox19Click(evt);"
  <Catalog>
    <col0>    jComboBox19Click(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jComboBox19MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jComboBox19MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4PicMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4PicMouseMoved"
  <Catalog>
    <col0>  private void panel4PicMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel4PicMouseMoved</col0>
  </Catalog>
 
"//    panel4PicMouseMove(evt);"
  <Catalog>
    <col0>//    panel4PicMouseMove(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_panel4PicMouseMoved"
  <Catalog>
    <col0>  }//GEN-LAST:event_panel4PicMouseMoved</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4OptionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4OptionsMouseClicked"
  <Catalog>
    <col0>  private void jcb4OptionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4OptionsMouseClicked</col0>
  </Catalog>
 
"    jcb4OptionsMouseClick(evt);"
  <Catalog>
    <col0>    jcb4OptionsMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4OptionsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4OptionsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked"
  <Catalog>
    <col0>  private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked</col0>
  </Catalog>
 
"    jComboBox1MouseClick(evt);"
  <Catalog>
    <col0>    jComboBox1MouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jComboBox1MouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jComboBox1MouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf4UPPActionPerformed"
  <Catalog>
    <col0>  private void jtf4UPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf4UPPActionPerformed</col0>
  </Catalog>
 
"    jtf4UPPAction(evt);"
  <Catalog>
    <col0>    jtf4UPPAction(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4UPPActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4UPPActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4LangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4LangMouseClicked"
  <Catalog>
    <col0>  private void jcb4LangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4LangMouseClicked</col0>
  </Catalog>
 
"    jcb4LangMouseClick(evt);"
  <Catalog>
    <col0>    jcb4LangMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4LangMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4LangMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UPPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4UPPMouseClicked"
  <Catalog>
    <col0>  private void jtf4UPPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtf4UPPMouseClicked</col0>
  </Catalog>
 
"    jtf4UPPMouseClick(evt);"
  <Catalog>
    <col0>    jtf4UPPMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4UPPMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4UPPMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4CareerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4CareerMouseClicked"
  <Catalog>
    <col0>  private void jcb4CareerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb4CareerMouseClicked</col0>
  </Catalog>
 
"    jcb4CareerMouseClick(evt);"
  <Catalog>
    <col0>    jcb4CareerMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4CareerMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4CareerMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void js4TermsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_js4TermsStateChanged"
  <Catalog>
    <col0>  private void js4TermsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_js4TermsStateChanged</col0>
  </Catalog>
 
"    js4TermsStateChange(evt);"
  <Catalog>
    <col0>    js4TermsStateChange(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_js4TermsStateChanged"
  <Catalog>
    <col0>  }//GEN-LAST:event_js4TermsStateChanged</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void js4TermsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_js4TermsMouseClicked"
  <Catalog>
    <col0>  private void js4TermsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_js4TermsMouseClicked</col0>
  </Catalog>
 
"    js4TermsMouseClick(evt);"
  <Catalog>
    <col0>    js4TermsMouseClick(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_js4TermsMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_js4TermsMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed"
  <Catalog>
    <col0>  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed</col0>
  </Catalog>
 
"    jButton2Action(evt);"
  <Catalog>
    <col0>    jButton2Action(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jButton2ActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jButton2ActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4WordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf4WordKeyPressed"
  <Catalog>
    <col0>  private void jtf4WordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf4WordKeyPressed</col0>
  </Catalog>
 
"    jtf4WordKeyPress(evt);"
  <Catalog>
    <col0>    jtf4WordKeyPress(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4WordKeyPressed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4WordKeyPressed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UPPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf4UPPKeyPressed"
  <Catalog>
    <col0>  private void jtf4UPPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf4UPPKeyPressed</col0>
  </Catalog>
 
"    jtf4UPPKeyPress(evt);"
  <Catalog>
    <col0>    jtf4UPPKeyPress(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jtf4UPPKeyPressed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jtf4UPPKeyPressed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed"
  <Catalog>
    <col0>  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed</col0>
  </Catalog>
 
"    jButton1Action(evt);"
  <Catalog>
    <col0>    jButton1Action(evt);</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jButton1ActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jButton1ActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jta4AllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta4AllMouseClicked"
  <Catalog>
    <col0>  private void jta4AllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jta4AllMouseClicked</col0>
  </Catalog>
 
"    jta4AllClick(evt);"
  <Catalog>
    <col0>    jta4AllClick(evt);</col0>
  </Catalog>
 
"//    writeSectorInfo();"
  <Catalog>
    <col0>//    writeSectorInfo();</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jta4AllMouseClicked"
  <Catalog>
    <col0>  }//GEN-LAST:event_jta4AllMouseClicked</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4CareerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4CareerActionPerformed"
  <Catalog>
    <col0>  private void jcb4CareerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb4CareerActionPerformed</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      String s = "";"
  <Catalog>
    <col0>      String s = ;</col0>
  </Catalog>
 
"      s += GlobalMethods.comment("=", 80) + CRLF;"
  <Catalog>
    <col0>      s = GlobalMethods.comment(=, 80)  CRLF;</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      s += "\t" + method + CRLF;"
  <Catalog>
    <col0>      s = \t  method  CRLF;</col0>
  </Catalog>
 
"//      s += "" + " = " + "" + CRLF;"
  <Catalog>
    <col0>//      s =    =     CRLF;</col0>
  </Catalog>
 
"      System.out.print(s);"
  <Catalog>
    <col0>      System.out.print(s);</col0>
  </Catalog>
 
"//      JOptionPane.showMessageDialog(null, s);"
  <Catalog>
    <col0>//      JOptionPane.showMessageDialog(null, s);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (jcb4Career.getSelectedItem().toString().equals("-Choose-")) {"
  <Catalog>
    <col0>    if (jcb4Career.getSelectedItem().toString().equals(-Choose-)) {</col0>
  </Catalog>
 
"      int num = GlobalMethods.roll1d();"
  <Catalog>
    <col0>      int num = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"      jcb4Career.setSelectedIndex(num);"
  <Catalog>
    <col0>      jcb4Career.setSelectedIndex(num);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    num = GlobalMethods.roll1d();"
  <Catalog>
    <col0>    num = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"    js4Terms.setValue(num);"
  <Catalog>
    <col0>    js4Terms.setValue(num);</col0>
  </Catalog>
 
"    jtf4WordClick(me);"
  <Catalog>
    <col0>    jtf4WordClick(me);</col0>
  </Catalog>
 
"    jtf4UPPAction(ae);"
  <Catalog>
    <col0>    jtf4UPPAction(ae);</col0>
  </Catalog>
 
"    jButton2.doClick();"
  <Catalog>
    <col0>    jButton2.doClick();</col0>
  </Catalog>
 
"//    js4TermsMouseClick(new ActionEvent());"
  <Catalog>
    <col0>//    js4TermsMouseClick(new ActionEvent());</col0>
  </Catalog>
 
"  }//GEN-LAST:event_jcb4CareerActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_jcb4CareerActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void SexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexActionPerformed"
  <Catalog>
    <col0>  private void SexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexActionPerformed</col0>
  </Catalog>
 
"  }//GEN-LAST:event_SexActionPerformed"
  <Catalog>
    <col0>  }//GEN-LAST:event_SexActionPerformed</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  // Variables declaration - do not modify//GEN-BEGIN:variables"
  <Catalog>
    <col0>  // Variables declaration - do not modify//GEN-BEGIN:variables</col0>
  </Catalog>
 
"  static javax.swing.JLabel CF;"
  <Catalog>
    <col0>  static javax.swing.JLabel CF;</col0>
  </Catalog>
 
"  static javax.swing.JLabel Rons;"
  <Catalog>
    <col0>  static javax.swing.JLabel Rons;</col0>
  </Catalog>
 
"  static javax.swing.JLabel SDBs;"
  <Catalog>
    <col0>  static javax.swing.JLabel SDBs;</col0>
  </Catalog>
 
"  public static javax.swing.JCheckBox Sex;"
  <Catalog>
    <col0>  public static javax.swing.JCheckBox Sex;</col0>
  </Catalog>
 
"  static javax.swing.JLabel Troops;"
  <Catalog>
    <col0>  static javax.swing.JLabel Troops;</col0>
  </Catalog>
 
"  static javax.swing.JLabel defbats;"
  <Catalog>
    <col0>  static javax.swing.JLabel defbats;</col0>
  </Catalog>
 
"  private javax.swing.JButton jButton1;"
  <Catalog>
    <col0>  private javax.swing.JButton jButton1;</col0>
  </Catalog>
 
"  private javax.swing.JButton jButton2;"
  <Catalog>
    <col0>  private javax.swing.JButton jButton2;</col0>
  </Catalog>
 
"  private javax.swing.JCheckBox jCheckBox1;"
  <Catalog>
    <col0>  private javax.swing.JCheckBox jCheckBox1;</col0>
  </Catalog>
 
"  private javax.swing.JCheckBox jCheckBox2;"
  <Catalog>
    <col0>  private javax.swing.JCheckBox jCheckBox2;</col0>
  </Catalog>
 
"  private javax.swing.JComboBox<String> jComboBox1;"
  <Catalog>
    <col0>  private javax.swing.JComboBox<String> jComboBox1;</col0>
  </Catalog>
 
"  private javax.swing.JComboBox jComboBox19;"
  <Catalog>
    <col0>  private javax.swing.JComboBox jComboBox19;</col0>
  </Catalog>
 
"  private javax.swing.JLabel jLabel1;"
  <Catalog>
    <col0>  private javax.swing.JLabel jLabel1;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel10;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel10;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel11;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel11;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel12;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel12;</col0>
  </Catalog>
 
"  private javax.swing.JLabel jLabel2;"
  <Catalog>
    <col0>  private javax.swing.JLabel jLabel2;</col0>
  </Catalog>
 
"  private javax.swing.JLabel jLabel3;"
  <Catalog>
    <col0>  private javax.swing.JLabel jLabel3;</col0>
  </Catalog>
 
"  private static javax.swing.JLabel jLabel4;"
  <Catalog>
    <col0>  private static javax.swing.JLabel jLabel4;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel5;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel5;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel6;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel6;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel7;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel7;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel8;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel8;</col0>
  </Catalog>
 
"  static javax.swing.JLabel jLabel9;"
  <Catalog>
    <col0>  static javax.swing.JLabel jLabel9;</col0>
  </Catalog>
 
"  private javax.swing.JPanel jPanel1;"
  <Catalog>
    <col0>  private javax.swing.JPanel jPanel1;</col0>
  </Catalog>
 
"  private javax.swing.JScrollPane jScrollPane1;"
  <Catalog>
    <col0>  private javax.swing.JScrollPane jScrollPane1;</col0>
  </Catalog>
 
"  private javax.swing.JComboBox<String> jcb4All;"
  <Catalog>
    <col0>  private javax.swing.JComboBox<String> jcb4All;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox jcb4Career;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox jcb4Career;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox<String> jcb4Lang;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox<String> jcb4Lang;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox<String> jcb4Options;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox<String> jcb4Options;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox jcb4Sec;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox jcb4Sec;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox jcb4Star;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox jcb4Star;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox<String> jcb4Sub;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox<String> jcb4Sub;</col0>
  </Catalog>
 
"  public static javax.swing.JComboBox<String> jcb4Sys;"
  <Catalog>
    <col0>  public static javax.swing.JComboBox<String> jcb4Sys;</col0>
  </Catalog>
 
"  private javax.swing.JList jl4Jump;"
  <Catalog>
    <col0>  private javax.swing.JList jl4Jump;</col0>
  </Catalog>
 
"  private static javax.swing.JSlider js4Dist;"
  <Catalog>
    <col0>  private static javax.swing.JSlider js4Dist;</col0>
  </Catalog>
 
"  public static javax.swing.JSpinner js4Terms;"
  <Catalog>
    <col0>  public static javax.swing.JSpinner js4Terms;</col0>
  </Catalog>
 
"  private javax.swing.JScrollPane jsp4All;"
  <Catalog>
    <col0>  private javax.swing.JScrollPane jsp4All;</col0>
  </Catalog>
 
"  private javax.swing.JScrollPane jsp4Jump;"
  <Catalog>
    <col0>  private javax.swing.JScrollPane jsp4Jump;</col0>
  </Catalog>
 
"  private javax.swing.JScrollPane jsp4Maps;"
  <Catalog>
    <col0>  private javax.swing.JScrollPane jsp4Maps;</col0>
  </Catalog>
 
"  public static javax.swing.JTextArea jta4All;"
  <Catalog>
    <col0>  public static javax.swing.JTextArea jta4All;</col0>
  </Catalog>
 
"  public static javax.swing.JTextArea jta4Bases;"
  <Catalog>
    <col0>  public static javax.swing.JTextArea jta4Bases;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Dest;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Dest;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4HTML;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4HTML;</col0>
  </Catalog>
 
"  private static javax.swing.JTextArea jta4Info;"
  <Catalog>
    <col0>  private static javax.swing.JTextArea jta4Info;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Line;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Line;</col0>
  </Catalog>
 
"  public static javax.swing.JTextArea jta4Near;"
  <Catalog>
    <col0>  public static javax.swing.JTextArea jta4Near;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Orb;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Orb;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Sec;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Sec;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Sectors;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Sectors;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Str;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Str;</col0>
  </Catalog>
 
"  public static javax.swing.JTextArea jta4Sub;"
  <Catalog>
    <col0>  public static javax.swing.JTextArea jta4Sub;</col0>
  </Catalog>
 
"  private javax.swing.JTextArea jta4Sys;"
  <Catalog>
    <col0>  private javax.swing.JTextArea jta4Sys;</col0>
  </Catalog>
 
"  public static javax.swing.JTextArea jta4UWP;"
  <Catalog>
    <col0>  public static javax.swing.JTextArea jta4UWP;</col0>
  </Catalog>
 
"  private javax.swing.JTextField jtf4Find;"
  <Catalog>
    <col0>  private javax.swing.JTextField jtf4Find;</col0>
  </Catalog>
 
"  public static javax.swing.JTextField jtf4UPP;"
  <Catalog>
    <col0>  public static javax.swing.JTextField jtf4UPP;</col0>
  </Catalog>
 
"  public static javax.swing.JTextField jtf4UWP;"
  <Catalog>
    <col0>  public static javax.swing.JTextField jtf4UWP;</col0>
  </Catalog>
 
"  public static javax.swing.JTextField jtf4Word;"
  <Catalog>
    <col0>  public static javax.swing.JTextField jtf4Word;</col0>
  </Catalog>
 
"  private javax.swing.JPanel panel4Jump;"
  <Catalog>
    <col0>  private javax.swing.JPanel panel4Jump;</col0>
  </Catalog>
 
"  public static panels.Panel4T5BitSub panel4Maps;"
  <Catalog>
    <col0>  public static panels.Panel4T5BitSub panel4Maps;</col0>
  </Catalog>
 
"  public static javax.swing.JPanel panel4Pic;"
  <Catalog>
    <col0>  public static javax.swing.JPanel panel4Pic;</col0>
  </Catalog>
 
"  public static panels.Panel4Grid3x3 panel4Sec;"
  <Catalog>
    <col0>  public static panels.Panel4Grid3x3 panel4Sec;</col0>
  </Catalog>
 
"  private javax.swing.JPanel panel4Strength;"
  <Catalog>
    <col0>  private javax.swing.JPanel panel4Strength;</col0>
  </Catalog>
 
"  public static panels.Panel4Grid6x6 panel4Sub;"
  <Catalog>
    <col0>  public static panels.Panel4Grid6x6 panel4Sub;</col0>
  </Catalog>
 
"  public static panels.Panel4T5BitSub panel4Sys;"
  <Catalog>
    <col0>  public static panels.Panel4T5BitSub panel4Sys;</col0>
  </Catalog>
 
"  private javax.swing.JPanel panel4T5PBG;"
  <Catalog>
    <col0>  private javax.swing.JPanel panel4T5PBG;</col0>
  </Catalog>
 
"  private javax.swing.JPanel panel4T5World;"
  <Catalog>
    <col0>  private javax.swing.JPanel panel4T5World;</col0>
  </Catalog>
 
"  static javax.swing.JPanel panel4WorldPic;"
  <Catalog>
    <col0>  static javax.swing.JPanel panel4WorldPic;</col0>
  </Catalog>
 
"  private javax.swing.JLabel sB;"
  <Catalog>
    <col0>  private javax.swing.JLabel sB;</col0>
  </Catalog>
 
"  private javax.swing.JLabel sC;"
  <Catalog>
    <col0>  private javax.swing.JLabel sC;</col0>
  </Catalog>
 
"  private javax.swing.JLabel sS;"
  <Catalog>
    <col0>  private javax.swing.JLabel sS;</col0>
  </Catalog>
 
"  static javax.swing.JLabel sdbs1;"
  <Catalog>
    <col0>  static javax.swing.JLabel sdbs1;</col0>
  </Catalog>
 
"  static javax.swing.JLabel squadrons;"
  <Catalog>
    <col0>  static javax.swing.JLabel squadrons;</col0>
  </Catalog>
 
"  static javax.swing.JLabel troopunits;"
  <Catalog>
    <col0>  static javax.swing.JLabel troopunits;</col0>
  </Catalog>
 
"  // End of variables declaration//GEN-END:variables"
  <Catalog>
    <col0>  // End of variables declaration//GEN-END:variables</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="variables">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=variables></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   unrefined fuel cost"
  <Catalog>
    <col0>   unrefined fuel cost</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static int unrefined = 1;"
  <Catalog>
    <col0>  public static int unrefined = 1;</col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   refined fuel cost"
  <Catalog>
    <col0>   refined fuel cost</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static boolean Refined;"
  <Catalog>
    <col0>  public static boolean Refined;</col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   type gives colour of star"
  <Catalog>
    <col0>   type gives colour of star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String type = "G";"
  <Catalog>
    <col0>  public static String type = G;</col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   colour brightness of star"
  <Catalog>
    <col0>   colour brightness of star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static int dec = 2;"
  <Catalog>
    <col0>  public static int dec = 2;</col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   Stellar star size as Roman numeral"
  <Catalog>
    <col0>   Stellar star size as Roman numeral</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String size = "V";"
  <Catalog>
    <col0>  public static String size = V;</col0>
  </Catalog>
 
"  static boolean running;"
  <Catalog>
    <col0>  static boolean running;</col0>
  </Catalog>
 
"  public static String[] lines;"
  <Catalog>
    <col0>  public static String[] lines;</col0>
  </Catalog>
 
"  public static String[] data;"
  <Catalog>
    <col0>  public static String[] data;</col0>
  </Catalog>
 
"  static String UWP = "A788899-C";"
  <Catalog>
    <col0>  static String UWP = A788899-C;</col0>
  </Catalog>
 
"  static int ws;"
  <Catalog>
    <col0>  static int ws;</col0>
  </Catalog>
 
"  boolean error = false;"
  <Catalog>
    <col0>  boolean error = false;</col0>
  </Catalog>
 
"  Color o = Color.blue;"
  <Catalog>
    <col0>  Color o = Color.blue;</col0>
  </Catalog>
 
"  Color be = new Color(0, 128, 255);"
  <Catalog>
    <col0>  Color be = new Color(0, 128, 255);</col0>
  </Catalog>
 
"  Color a = Color.cyan;"
  <Catalog>
    <col0>  Color a = Color.cyan;</col0>
  </Catalog>
 
"  Color fi = new Color(128, 255, 128);"
  <Catalog>
    <col0>  Color fi = new Color(128, 255, 128);</col0>
  </Catalog>
 
"  Color gi = Color.yellow;"
  <Catalog>
    <col0>  Color gi = Color.yellow;</col0>
  </Catalog>
 
"  Color k = Color.orange;"
  <Catalog>
    <col0>  Color k = Color.orange;</col0>
  </Catalog>
 
"  Color m = Color.red;"
  <Catalog>
    <col0>  Color m = Color.red;</col0>
  </Catalog>
 
"  int mix = 0;"
  <Catalog>
    <col0>  int mix = 0;</col0>
  </Catalog>
 
"  int max = 0;"
  <Catalog>
    <col0>  int max = 0;</col0>
  </Catalog>
 
"  int miy = 0;"
  <Catalog>
    <col0>  int miy = 0;</col0>
  </Catalog>
 
"  int may = 0;"
  <Catalog>
    <col0>  int may = 0;</col0>
  </Catalog>
 
"  int stars;"
  <Catalog>
    <col0>  int stars;</col0>
  </Catalog>
 
"  int g = 0;"
  <Catalog>
    <col0>  int g = 0;</col0>
  </Catalog>
 
"  int b = 0;"
  <Catalog>
    <col0>  int b = 0;</col0>
  </Catalog>
 
"  int other = 0;"
  <Catalog>
    <col0>  int other = 0;</col0>
  </Catalog>
 
"  int systems = 0;"
  <Catalog>
    <col0>  int systems = 0;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static int d;"
  <Catalog>
    <col0>  public static int d;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static int min = 0;"
  <Catalog>
    <col0>  public static int min = 0;</col0>
  </Catalog>
 
"  static int left;"
  <Catalog>
    <col0>  static int left;</col0>
  </Catalog>
 
"  static int top;"
  <Catalog>
    <col0>  static int top;</col0>
  </Catalog>
 
"  static BufferedImage bi = new BufferedImage(600, 600,"
  <Catalog>
    <col0>  static BufferedImage bi = new BufferedImage(600, 600,</col0>
  </Catalog>
 
"    BufferedImage.TYPE_3BYTE_BGR);"
  <Catalog>
    <col0>    BufferedImage.TYPE_3BYTE_BGR);</col0>
  </Catalog>
 
"  Properties properties = new Properties();"
  <Catalog>
    <col0>  Properties properties = new Properties();</col0>
  </Catalog>
 
"  String dest = "0000";"
  <Catalog>
    <col0>  String dest = 0000;</col0>
  </Catalog>
 
"  String string = "";"
  <Catalog>
    <col0>  String string = ;</col0>
  </Catalog>
 
"  String gg = "";"
  <Catalog>
    <col0>  String gg = ;</col0>
  </Catalog>
 
"  String bw = "";"
  <Catalog>
    <col0>  String bw = ;</col0>
  </Catalog>
 
"  String dist = null;"
  <Catalog>
    <col0>  String dist = null;</col0>
  </Catalog>
 
"  String[] sats;"
  <Catalog>
    <col0>  String[] sats;</col0>
  </Catalog>
 
"  String[] lets;"
  <Catalog>
    <col0>  String[] lets;</col0>
  </Catalog>
 
"  String mwtype = "";"
  <Catalog>
    <col0>  String mwtype = ;</col0>
  </Catalog>
 
"  String wtype = "";"
  <Catalog>
    <col0>  String wtype = ;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String t;"
  <Catalog>
    <col0>  public static String t;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String s;"
  <Catalog>
    <col0>  public static String s;</col0>
  </Catalog>
 
"  Runtime runtime;"
  <Catalog>
    <col0>  Runtime runtime;</col0>
  </Catalog>
 
"  Process process = null;"
  <Catalog>
    <col0>  Process process = null;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static int orbits = 20;"
  <Catalog>
    <col0>  private static int orbits = 20;</col0>
  </Catalog>
 
"  private static String[] orbit = new String[orbits];"
  <Catalog>
    <col0>  private static String[] orbit = new String[orbits];</col0>
  </Catalog>
 
"  private static boolean[] isEmpty = new boolean[orbits];"
  <Catalog>
    <col0>  private static boolean[] isEmpty = new boolean[orbits];</col0>
  </Catalog>
 
"  private static JPanel jp;"
  <Catalog>
    <col0>  private static JPanel jp;</col0>
  </Catalog>
 
"  private static JFrame jf;"
  <Catalog>
    <col0>  private static JFrame jf;</col0>
  </Catalog>
 
"  private static String[] text;"
  <Catalog>
    <col0>  private static String[] text;</col0>
  </Catalog>
 
"  private static String SDBso = "";"
  <Catalog>
    <col0>  private static String SDBso = ;</col0>
  </Catalog>
 
"  private static String SQUADRONSo;"
  <Catalog>
    <col0>  private static String SQUADRONSo;</col0>
  </Catalog>
 
"  private static String DEFENCEBATTSo;"
  <Catalog>
    <col0>  private static String DEFENCEBATTSo;</col0>
  </Catalog>
 
"  private static String TROOPUNITSo;"
  <Catalog>
    <col0>  private static String TROOPUNITSo;</col0>
  </Catalog>
 
"  private static String[] bits;"
  <Catalog>
    <col0>  private static String[] bits;</col0>
  </Catalog>
 
"  private static int[] len;"
  <Catalog>
    <col0>  private static int[] len;</col0>
  </Catalog>
 
"  private static int startuwp;"
  <Catalog>
    <col0>  private static int startuwp;</col0>
  </Catalog>
 
"  private static int end;"
  <Catalog>
    <col0>  private static int end;</col0>
  </Catalog>
 
"  private static int titleline;"
  <Catalog>
    <col0>  private static int titleline;</col0>
  </Catalog>
 
"  private static int num;"
  <Catalog>
    <col0>  private static int num;</col0>
  </Catalog>
 
"  private static String[] XY;"
  <Catalog>
    <col0>  private static String[] XY;</col0>
  </Catalog>
 
"  private static String[] secs;"
  <Catalog>
    <col0>  private static String[] secs;</col0>
  </Catalog>
 
"  private static String sub;"
  <Catalog>
    <col0>  private static String sub;</col0>
  </Catalog>
 
"  private static Color dark = new Color(51, 51, 51);"
  <Catalog>
    <col0>  private static Color dark = new Color(51, 51, 51);</col0>
  </Catalog>
 
"  private static MouseEvent me;"
  <Catalog>
    <col0>  private static MouseEvent me;</col0>
  </Catalog>
 
"  private static int x;"
  <Catalog>
    <col0>  private static int x;</col0>
  </Catalog>
 
"  private static int y;"
  <Catalog>
    <col0>  private static int y;</col0>
  </Catalog>
 
"  private static int subw;"
  <Catalog>
    <col0>  private static int subw;</col0>
  </Catalog>
 
"  private static int subh;"
  <Catalog>
    <col0>  private static int subh;</col0>
  </Catalog>
 
"  private static String X, Y;"
  <Catalog>
    <col0>  private static String X, Y;</col0>
  </Catalog>
 
"  private static String out = "";"
  <Catalog>
    <col0>  private static String out = ;</col0>
  </Catalog>
 
"  private static String shape = "Hex";"
  <Catalog>
    <col0>  private static String shape = Hex;</col0>
  </Catalog>
 
"  private static DefaultListModel<String> dlm;"
  <Catalog>
    <col0>  private static DefaultListModel<String> dlm;</col0>
  </Catalog>
 
"  private static Color col;"
  <Catalog>
    <col0>  private static Color col;</col0>
  </Catalog>
 
"  private static String Quality;"
  <Catalog>
    <col0>  private static String Quality;</col0>
  </Catalog>
 
"  private static String Yards;"
  <Catalog>
    <col0>  private static String Yards;</col0>
  </Catalog>
 
"  private static String Repairs;"
  <Catalog>
    <col0>  private static String Repairs;</col0>
  </Catalog>
 
"  private static String Fuel;"
  <Catalog>
    <col0>  private static String Fuel;</col0>
  </Catalog>
 
"  private static String Downport;"
  <Catalog>
    <col0>  private static String Downport;</col0>
  </Catalog>
 
"  private static String Highport;"
  <Catalog>
    <col0>  private static String Highport;</col0>
  </Catalog>
 
"  private static String possBases;"
  <Catalog>
    <col0>  private static String possBases;</col0>
  </Catalog>
 
"  private static int refined = 10;"
  <Catalog>
    <col0>  private static int refined = 10;</col0>
  </Catalog>
 
"  private static int cost;"
  <Catalog>
    <col0>  private static int cost;</col0>
  </Catalog>
 
"  private static ChangeEvent ce = null;"
  <Catalog>
    <col0>  private static ChangeEvent ce = null;</col0>
  </Catalog>
 
"  private static File f;"
  <Catalog>
    <col0>  private static File f;</col0>
  </Catalog>
 
"  private static int count = 0;"
  <Catalog>
    <col0>  private static int count = 0;</col0>
  </Catalog>
 
"  private static String Primary;"
  <Catalog>
    <col0>  private static String Primary;</col0>
  </Catalog>
 
"  private static String es0 = "";"
  <Catalog>
    <col0>  private static String es0 = ;</col0>
  </Catalog>
 
"  private static String es1 = "";"
  <Catalog>
    <col0>  private static String es1 = ;</col0>
  </Catalog>
 
"  private static String es2 = "";"
  <Catalog>
    <col0>  private static String es2 = ;</col0>
  </Catalog>
 
"  private static String es3 = "";"
  <Catalog>
    <col0>  private static String es3 = ;</col0>
  </Catalog>
 
"  private static int orbitnum = 0;"
  <Catalog>
    <col0>  private static int orbitnum = 0;</col0>
  </Catalog>
 
"  private static int eo1 = 0;"
  <Catalog>
    <col0>  private static int eo1 = 0;</col0>
  </Catalog>
 
"  private static int eo2 = 0;"
  <Catalog>
    <col0>  private static int eo2 = 0;</col0>
  </Catalog>
 
"  private static int eo3 = 0;"
  <Catalog>
    <col0>  private static int eo3 = 0;</col0>
  </Catalog>
 
"  private static String[] Stars;"
  <Catalog>
    <col0>  private static String[] Stars;</col0>
  </Catalog>
 
"  private static int habz;"
  <Catalog>
    <col0>  private static int habz;</col0>
  </Catalog>
 
"  private static String HZ = "";"
  <Catalog>
    <col0>  private static String HZ = ;</col0>
  </Catalog>
 
"  private static String HZVar = "";"
  <Catalog>
    <col0>  private static String HZVar = ;</col0>
  </Catalog>
 
"  private static String Climate = "";"
  <Catalog>
    <col0>  private static String Climate = ;</col0>
  </Catalog>
 
"  private static String[] args = {"NO"};"
  <Catalog>
    <col0>  private static String[] args = {NO};</col0>
  </Catalog>
 
"  private static final String trav = "http://travellermap.com/";"
  <Catalog>
    <col0>  private static final String trav = http://travellermap.com/;</col0>
  </Catalog>
 
"  private static final String api = trav + "api";"
  <Catalog>
    <col0>  private static final String api = trav  api;</col0>
  </Catalog>
 
"  private static final String dat = trav + "data";"
  <Catalog>
    <col0>  private static final String dat = trav  data;</col0>
  </Catalog>
 
"  private static String fname = "Spinward%20Marches";"
  <Catalog>
    <col0>  private static String fname = Spinward%20Marches;</col0>
  </Catalog>
 
"  private static String webpath = dat + "/" + fname;"
  <Catalog>
    <col0>  private static String webpath = dat  /  fname;</col0>
  </Catalog>
 
"  private static final String C = "C:/";"
  <Catalog>
    <col0>  private static final String C = C:/;</col0>
  </Catalog>
 
"  private static final String home = "/T5/";"
  <Catalog>
    <col0>  private static final String home = /T5/;</col0>
  </Catalog>
 
"  private static String hdpath = C + home;"
  <Catalog>
    <col0>  private static String hdpath = C  home;</col0>
  </Catalog>
 
"  private static DefaultComboBoxModel<String> dcbm;"
  <Catalog>
    <col0>  private static DefaultComboBoxModel<String> dcbm;</col0>
  </Catalog>
 
"  private JTextArea jta;"
  <Catalog>
    <col0>  private JTextArea jta;</col0>
  </Catalog>
 
"  private File dir;"
  <Catalog>
    <col0>  private File dir;</col0>
  </Catalog>
 
"  private File file;"
  <Catalog>
    <col0>  private File file;</col0>
  </Catalog>
 
"  public static int world1;"
  <Catalog>
    <col0>  public static int world1;</col0>
  </Catalog>
 
"  private int rings = 0;"
  <Catalog>
    <col0>  private int rings = 0;</col0>
  </Catalog>
 
"  private int moons;"
  <Catalog>
    <col0>  private int moons;</col0>
  </Catalog>
 
"  private URL url;"
  <Catalog>
    <col0>  private URL url;</col0>
  </Catalog>
 
"  private int hz;"
  <Catalog>
    <col0>  private int hz;</col0>
  </Catalog>
 
"  private ComboBoxModel<String> cbm;"
  <Catalog>
    <col0>  private ComboBoxModel<String> cbm;</col0>
  </Catalog>
 
"  private ActionEvent ae;"
  <Catalog>
    <col0>  private ActionEvent ae;</col0>
  </Catalog>
 
"  private int jump;"
  <Catalog>
    <col0>  private int jump;</col0>
  </Catalog>
 
"  private String atmo;"
  <Catalog>
    <col0>  private String atmo;</col0>
  </Catalog>
 
"  private int selected = 0;"
  <Catalog>
    <col0>  private int selected = 0;</col0>
  </Catalog>
 
"  private String[] liness;"
  <Catalog>
    <col0>  private String[] liness;</col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Hab">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Hab></col0>
  </Catalog>
 
"  /*"
  <Catalog>
    <col0>  /*</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static final String[] Hab = new String[]{"
  <Catalog>
    <col0>  public static final String[] Hab = new String[]{</col0>
  </Catalog>
 
"    "12","
  <Catalog>
    <col0>    12</col0>
  </Catalog>
 
"    "Sp/Si", "A0-A3", "A4-A8", "A9-F1", "F2-F6", "F7-G1", "G2-G8", "G9-K3", "K4-K8", "K9-M3", "M4-M8", "M9","
  <Catalog>
    <col0>    Sp/Si, A0-A3, A4-A8, A9-F1, F2-F6, F7-G1, G2-G8, G9-K3, K4-K8, K9-M3, M4-M8, M9</col0>
  </Catalog>
 
"    "Ia", "12", "12", "12", "12", "11", "12", "12", "12", "12", "12", "12","
  <Catalog>
    <col0>    Ia, 12, 12, 12, 12, 11, 12, 12, 12, 12, 12, 12</col0>
  </Catalog>
 
"    "Ib", "11", "11", "10", "10", "10", "10", "10", "10", "10", "11", "11","
  <Catalog>
    <col0>    Ib, 11, 11, 10, 10, 10, 10, 10, 10, 10, 11, 11</col0>
  </Catalog>
 
"    "II", "9", "9", "8", "8", "8", "8", "8", "9", "9", "10", "11","
  <Catalog>
    <col0>    II, 9, 9, 8, 8, 8, 8, 8, 9, 9, 10, 11</col0>
  </Catalog>
 
"    "III", "8", "8", "7", "6", "6", "6", "7", "7", "8", "8", "9","
  <Catalog>
    <col0>    III, 8, 8, 7, 6, 6, 6, 7, 7, 8, 8, 9</col0>
  </Catalog>
 
"    "IV", "7", "7", "6", "6", "5", "5", "5", "-1", "-1", "-1", "-1","
  <Catalog>
    <col0>    IV, 7, 7, 6, 6, 5, 5, 5, -1, -1, -1, -1</col0>
  </Catalog>
 
"    "V", "7", "7", "6", "5", "4", "3", "2", "2", "0", "0", "0","
  <Catalog>
    <col0>    V, 7, 7, 6, 5, 4, 3, 2, 2, 0, 0, 0</col0>
  </Catalog>
 
"    "VI", "-1", "-1", "-1", "3", "3", "2", "1", "0", "0", "0", "0","
  <Catalog>
    <col0>    VI, -1, -1, -1, 3, 3, 2, 1, 0, 0, 0, 0</col0>
  </Catalog>
 
"    "VII", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0","
  <Catalog>
    <col0>    VII, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0</col0>
  </Catalog>
 
"    "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0""
  <Catalog>
    <col0>    D, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Size">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Size></col0>
  </Catalog>
 
"  public static String[] Size = {"
  <Catalog>
    <col0>  public static String[] Size = {</col0>
  </Catalog>
 
"    //Size = 2D-2"
  <Catalog>
    <col0>    //Size = 2D-2</col0>
  </Catalog>
 
"    //if 10, reroll 1D+9"
  <Catalog>
    <col0>    //if 10, reroll 1D9</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "Dia(mi)", "Dia(km)","
  <Catalog>
    <col0>    Digit, Dia(mi), Dia(km)</col0>
  </Catalog>
 
"    "0", "Asteroid Belt", "varies","
  <Catalog>
    <col0>    0, Asteroid Belt, varies</col0>
  </Catalog>
 
"    "1", "1,000", "1,600","
  <Catalog>
    <col0>    1, 1,000, 1,600</col0>
  </Catalog>
 
"    "2", "2,000", "3,200","
  <Catalog>
    <col0>    2, 2,000, 3,200</col0>
  </Catalog>
 
"    "3", "3,000", "4,800","
  <Catalog>
    <col0>    3, 3,000, 4,800</col0>
  </Catalog>
 
"    "4", "4,000", "6,400","
  <Catalog>
    <col0>    4, 4,000, 6,400</col0>
  </Catalog>
 
"    "5", "5,000", "8,000","
  <Catalog>
    <col0>    5, 5,000, 8,000</col0>
  </Catalog>
 
"    "6", "6,000", "9,600","
  <Catalog>
    <col0>    6, 6,000, 9,600</col0>
  </Catalog>
 
"    "7", "7,000", "12,200","
  <Catalog>
    <col0>    7, 7,000, 12,200</col0>
  </Catalog>
 
"    "8", "8,000", "13,800","
  <Catalog>
    <col0>    8, 8,000, 13,800</col0>
  </Catalog>
 
"    "9", "9,000", "14,400","
  <Catalog>
    <col0>    9, 9,000, 14,400</col0>
  </Catalog>
 
"    "A", "10,000", "16,000","
  <Catalog>
    <col0>    A, 10,000, 16,000</col0>
  </Catalog>
 
"    "B", "11,000", "17,600","
  <Catalog>
    <col0>    B, 11,000, 17,600</col0>
  </Catalog>
 
"    "C", "12,000", "19,200","
  <Catalog>
    <col0>    C, 12,000, 19,200</col0>
  </Catalog>
 
"    "D", "13,000", "20,800","
  <Catalog>
    <col0>    D, 13,000, 20,800</col0>
  </Catalog>
 
"    "E", "14,000", "22,400","
  <Catalog>
    <col0>    E, 14,000, 22,400</col0>
  </Catalog>
 
"    "F", "15,000", "24,000""
  <Catalog>
    <col0>    F, 15,000, 24,000</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Placement">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Placement></col0>
  </Catalog>
 
"  /*"
  <Catalog>
    <col0>  /*</col0>
  </Catalog>
 
"   2D LGG SGG IG Belt World1 World2"
  <Catalog>
    <col0>   2D LGG SGG IG Belt World1 World2</col0>
  </Catalog>
 
"   GG and Belt placement is based on the HZ."
  <Catalog>
    <col0>   GG and Belt placement is based on the HZ.</col0>
  </Catalog>
 
"   World placement is based on Orbit."
  <Catalog>
    <col0>   World placement is based on Orbit.</col0>
  </Catalog>
 
"   If an orbits is duplicated or precluded, adjust to"
  <Catalog>
    <col0>   If an orbits is duplicated or precluded, adjust to</col0>
  </Catalog>
 
"   an adjacent or the closest possible orbits."
  <Catalog>
    <col0>   an adjacent or the closest possible orbits.</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static final String[] Placement = new String[]{"
  <Catalog>
    <col0>  public static final String[] Placement = new String[]{</col0>
  </Catalog>
 
"    "7","
  <Catalog>
    <col0>    7</col0>
  </Catalog>
 
"    "2D", "LGG", "SGG", "IG", "Belt", "World1", "World2","
  <Catalog>
    <col0>    2D, LGG, SGG, IG, Belt, World1, World2</col0>
  </Catalog>
 
"    "2", "-3", "-2", "+1", "-1", "10", "17","
  <Catalog>
    <col0>    2, -3, -2, 1, -1, 10, 17</col0>
  </Catalog>
 
"    "3", "-2", "-1", "+2", "0", "8", "16","
  <Catalog>
    <col0>    3, -2, -1, 2, 0, 8, 16</col0>
  </Catalog>
 
"    "4", "-1", "0", "+3", "+1", "6", "15","
  <Catalog>
    <col0>    4, -1, 0, 3, 1, 6, 15</col0>
  </Catalog>
 
"    "5", "+0", "+1", "+4", "+2", "4", "14","
  <Catalog>
    <col0>    5, 0, 1, 4, 2, 4, 14</col0>
  </Catalog>
 
"    "6", "+1", "+2", "+5", "+3", "2", "13","
  <Catalog>
    <col0>    6, 1, 2, 5, 3, 2, 13</col0>
  </Catalog>
 
"    "7", "+2", "+3", "+6", "+4", "0", "12","
  <Catalog>
    <col0>    7, 2, 3, 6, 4, 0, 12</col0>
  </Catalog>
 
"    "8", "+3", "+4", "+7", "+5", "1", "11","
  <Catalog>
    <col0>    8, 3, 4, 7, 5, 1, 11</col0>
  </Catalog>
 
"    "9", "+4", "+5", "+8", "+6", "3", "10","
  <Catalog>
    <col0>    9, 4, 5, 8, 6, 3, 10</col0>
  </Catalog>
 
"    "10", "+5", "+6", "+9", "+7", "5", "9","
  <Catalog>
    <col0>    10, 5, 6, 9, 7, 5, 9</col0>
  </Catalog>
 
"    "11", "+6", "+7", "+10", "+8", "7", "8","
  <Catalog>
    <col0>    11, 6, 7, 10, 8, 7, 8</col0>
  </Catalog>
 
"    "12", "+7", "+8", "+11", "+9", "10", "7""
  <Catalog>
    <col0>    12, 7, 8, 11, 9, 10, 7</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] GGs">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] GGs></col0>
  </Catalog>
 
"  public static String[] GGs = {"
  <Catalog>
    <col0>  public static String[] GGs = {</col0>
  </Catalog>
 
"    "5","
  <Catalog>
    <col0>    5</col0>
  </Catalog>
 
"    "2D", "Size", "WSize", "Dia", "Type","
  <Catalog>
    <col0>    2D, Size, WSize, Dia, Type</col0>
  </Catalog>
 
"    "1", "L", "20", "20,000", "","
  <Catalog>
    <col0>    1, L, 20, 20,000, </col0>
  </Catalog>
 
"    "2", "M", "21", "30,000", "Neptune","
  <Catalog>
    <col0>    2, M, 21, 30,000, Neptune</col0>
  </Catalog>
 
"    "3", "N", "22", "40,000", "","
  <Catalog>
    <col0>    3, N, 22, 40,000, </col0>
  </Catalog>
 
"    "4", "P", "23", "50,000", "","
  <Catalog>
    <col0>    4, P, 23, 50,000, </col0>
  </Catalog>
 
"    "5", "Q", "24", "60,000", "","
  <Catalog>
    <col0>    5, Q, 24, 60,000, </col0>
  </Catalog>
 
"    "6", "R", "25", "70,000", "Saturn","
  <Catalog>
    <col0>    6, R, 25, 70,000, Saturn</col0>
  </Catalog>
 
"    "7", "S", "26", "80,000", "","
  <Catalog>
    <col0>    7, S, 26, 80,000, </col0>
  </Catalog>
 
"    "8", "T", "27", "90,000", "Jupiter","
  <Catalog>
    <col0>    8, T, 27, 90,000, Jupiter</col0>
  </Catalog>
 
"    "9", "U", "28", "125,000", "2Mj","
  <Catalog>
    <col0>    9, U, 28, 125,000, 2Mj</col0>
  </Catalog>
 
"    "10", "V", "29", "180,000", "4Mj","
  <Catalog>
    <col0>    10, V, 29, 180,000, 4Mj</col0>
  </Catalog>
 
"    "11", "W", "30", "220,000", "6Mj","
  <Catalog>
    <col0>    11, W, 30, 220,000, 6Mj</col0>
  </Catalog>
 
"    "12", "X", "31", "250,000", "8Mj""
  <Catalog>
    <col0>    12, X, 31, 250,000, 8Mj</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] StarColor">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] StarColor></col0>
  </Catalog>
 
"  public static String[] StarColor = {"
  <Catalog>
    <col0>  public static String[] StarColor = {</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Code", "Description", "Temperature (K)","
  <Catalog>
    <col0>    Code, Description, Temperature (K)</col0>
  </Catalog>
 
"    "O", "Blue", ">33,000","
  <Catalog>
    <col0>    O, Blue, >33,000</col0>
  </Catalog>
 
"    "B", "Blue-White", "10,000-33,000","
  <Catalog>
    <col0>    B, Blue-White, 10,000-33,000</col0>
  </Catalog>
 
"    "A", "Blue-White", "7,500-10,000","
  <Catalog>
    <col0>    A, Blue-White, 7,500-10,000</col0>
  </Catalog>
 
"    "F", "Yellow-White", "6,000-7,500","
  <Catalog>
    <col0>    F, Yellow-White, 6,000-7,500</col0>
  </Catalog>
 
"    "G", "Yellow", "5,200-6,000","
  <Catalog>
    <col0>    G, Yellow, 5,200-6,000</col0>
  </Catalog>
 
"    "K", "Orange", "3,700-5,200","
  <Catalog>
    <col0>    K, Orange, 3,700-5,200</col0>
  </Catalog>
 
"    "M", "Red", "2,000-3,700""
  <Catalog>
    <col0>    M, Red, 2,000-3,700</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] StarSize">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] StarSize></col0>
  </Catalog>
 
"  public static String[] StarSize = {"
  <Catalog>
    <col0>  public static String[] StarSize = {</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Code", "Description", "Diameter (Sol = 1)","
  <Catalog>
    <col0>    Code, Description, Diameter (Sol = 1)</col0>
  </Catalog>
 
"    "Ia", "Bright Supergiant", "52 - 3500","
  <Catalog>
    <col0>    Ia, Bright Supergiant, 52 - 3500</col0>
  </Catalog>
 
"    "Ib", "Weak Supergiant", "30 - 3000","
  <Catalog>
    <col0>    Ib, Weak Supergiant, 30 - 3000</col0>
  </Catalog>
 
"    "II", "Bright Giant", "14 - 1000","
  <Catalog>
    <col0>    II, Bright Giant, 14 - 1000</col0>
  </Catalog>
 
"    "III", "Normal Giant", "4.6 - 360","
  <Catalog>
    <col0>    III, Normal Giant, 4.6 - 360</col0>
  </Catalog>
 
"    "IV", "Subgiant", "3.3 - 13","
  <Catalog>
    <col0>    IV, Subgiant, 3.3 - 13</col0>
  </Catalog>
 
"    "V", "Main Sequence Star", "0.2 - 10","
  <Catalog>
    <col0>    V, Main Sequence Star, 0.2 - 10</col0>
  </Catalog>
 
"    "VI", "Subdwarf", "0.1 - 1.2","
  <Catalog>
    <col0>    VI, Subdwarf, 0.1 - 1.2</col0>
  </Catalog>
 
"    "VII", "White Dwarf", "0.006 - 0.018","
  <Catalog>
    <col0>    VII, White Dwarf, 0.006 - 0.018</col0>
  </Catalog>
 
"    "D", "White Dwarf", "0.006 - 0.018""
  <Catalog>
    <col0>    D, White Dwarf, 0.006 - 0.018</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] OtherWorld">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] OtherWorld></col0>
  </Catalog>
 
"  public String[] OtherWorld = {"
  <Catalog>
    <col0>  public String[] OtherWorld = {</col0>
  </Catalog>
 
"    "Hospitable", "Planetoid", "IceWorld", "RadWorld", "Inferno","
  <Catalog>
    <col0>    Hospitable, Planetoid, IceWorld, RadWorld, Inferno</col0>
  </Catalog>
 
"    "BigWorld", "Worldlet", "InnerWorld", "StormWorld""
  <Catalog>
    <col0>    BigWorld, Worldlet, InnerWorld, StormWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] InnerSats">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] InnerSats></col0>
  </Catalog>
 
"  public String[] InnerSats = {"
  <Catalog>
    <col0>  public String[] InnerSats = {</col0>
  </Catalog>
 
"    "Worldlet", "Worldlet", "Inferno","
  <Catalog>
    <col0>    Worldlet, Worldlet, Inferno</col0>
  </Catalog>
 
"    "InnerWorld", "StormWorld", "RadWorld", "BigWorld""
  <Catalog>
    <col0>    InnerWorld, StormWorld, RadWorld, BigWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] OuterSats">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] OuterSats></col0>
  </Catalog>
 
"  public String[] OuterSats = {"
  <Catalog>
    <col0>  public String[] OuterSats = {</col0>
  </Catalog>
 
"    "Worldlet", "Worldlet", "IceWorld","
  <Catalog>
    <col0>    Worldlet, Worldlet, IceWorld</col0>
  </Catalog>
 
"    "OuterWorld", "StormWorld", "RadWorld", "BigWorld""
  <Catalog>
    <col0>    OuterWorld, StormWorld, RadWorld, BigWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] HospitableSats">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] HospitableSats></col0>
  </Catalog>
 
"  public String[] HospitableSats = new String[]{"
  <Catalog>
    <col0>  public String[] HospitableSats = new String[]{</col0>
  </Catalog>
 
"    "Worldlet", "Worldlet", "Inferno","
  <Catalog>
    <col0>    Worldlet, Worldlet, Inferno</col0>
  </Catalog>
 
"    "Hospitable", "StormWorld", "RadWorld", "BigWorld""
  <Catalog>
    <col0>    Hospitable, StormWorld, RadWorld, BigWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] MainworldType">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] MainworldType></col0>
  </Catalog>
 
"  public static String[] MainworldType = {"
  <Catalog>
    <col0>  public static String[] MainworldType = {</col0>
  </Catalog>
 
"    "5","
  <Catalog>
    <col0>    5</col0>
  </Catalog>
 
"    "Flux", "World", "HZ Var", "Close", "Far","
  <Catalog>
    <col0>    Flux, World, HZ Var, Close, Far</col0>
  </Catalog>
 
"    "-6", "Close Satellite", "-2", "A", "N","
  <Catalog>
    <col0>    -6, Close Satellite, -2, A, N</col0>
  </Catalog>
 
"    "-5", "Far Satellite", "-1", "B", "O","
  <Catalog>
    <col0>    -5, Far Satellite, -1, B, O</col0>
  </Catalog>
 
"    "-4", "Far Satellite", "-1", "C", "P","
  <Catalog>
    <col0>    -4, Far Satellite, -1, C, P</col0>
  </Catalog>
 
"    "-3", "Close Satellite", "-1", "D", "Q","
  <Catalog>
    <col0>    -3, Close Satellite, -1, D, Q</col0>
  </Catalog>
 
"    "-2", "World", "0", "E", "R","
  <Catalog>
    <col0>    -2, World, 0, E, R</col0>
  </Catalog>
 
"    "-1", "World", "0", "F", "S","
  <Catalog>
    <col0>    -1, World, 0, F, S</col0>
  </Catalog>
 
"    "0", "World", "0", "G", "T","
  <Catalog>
    <col0>    0, World, 0, G, T</col0>
  </Catalog>
 
"    "1", "World", "0", "H", "U","
  <Catalog>
    <col0>    1, World, 0, H, U</col0>
  </Catalog>
 
"    "2", "World", "0", "I", "V","
  <Catalog>
    <col0>    2, World, 0, I, V</col0>
  </Catalog>
 
"    "3", "World", "1", "J", "W","
  <Catalog>
    <col0>    3, World, 1, J, W</col0>
  </Catalog>
 
"    "4", "World", "1", "K", "X","
  <Catalog>
    <col0>    4, World, 1, K, X</col0>
  </Catalog>
 
"    "5", "World", "1", "L", "Y","
  <Catalog>
    <col0>    5, World, 1, L, Y</col0>
  </Catalog>
 
"    "6", "World", "2", "M", "Z""
  <Catalog>
    <col0>    6, World, 2, M, Z</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] InnerWorlds">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] InnerWorlds></col0>
  </Catalog>
 
"  public String[] InnerWorlds = {"
  <Catalog>
    <col0>  public String[] InnerWorlds = {</col0>
  </Catalog>
 
"    "Worldlet", "Inferno", "InnerWorld", "BigWorld", "StormWorld", "RadWorld""
  <Catalog>
    <col0>    Worldlet, Inferno, InnerWorld, BigWorld, StormWorld, RadWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] OuterWorlds">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] OuterWorlds></col0>
  </Catalog>
 
"  public String[] OuterWorlds = {"
  <Catalog>
    <col0>  public String[] OuterWorlds = {</col0>
  </Catalog>
 
"    "Worldlet", "IceWorld", "IceWorld", "BigWorld", "IceWorld", "RadWorld""
  <Catalog>
    <col0>    Worldlet, IceWorld, IceWorld, BigWorld, IceWorld, RadWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] HospitableWorlds">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] HospitableWorlds></col0>
  </Catalog>
 
"  public String[] HospitableWorlds = new String[]{"
  <Catalog>
    <col0>  public String[] HospitableWorlds = new String[]{</col0>
  </Catalog>
 
"    "Worldlet", "Inferno", "Hospitable", "BigWorld", "StormWorld", "RadWorld""
  <Catalog>
    <col0>    Worldlet, Inferno, Hospitable, BigWorld, StormWorld, RadWorld</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] D10Limit">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] D10Limit></col0>
  </Catalog>
 
"  public static final String[] D10Limit = {"
  <Catalog>
    <col0>  public static final String[] D10Limit = {</col0>
  </Catalog>
 
"    "9","
  <Catalog>
    <col0>    9</col0>
  </Catalog>
 
"    "TD", "Ia", "Ib", "II", "III", "IV", "V", "VI", "D","
  <Catalog>
    <col0>    TD, Ia, Ib, II, III, IV, V, VI, D</col0>
  </Catalog>
 
"    "A0", "7", "5", "4", "1", "1", "0", "-1", "-1","
  <Catalog>
    <col0>    A0, 7, 5, 4, 1, 1, 0, -1, -1</col0>
  </Catalog>
 
"    "A5", "7", "5", "3", "1", "0", "-1", "-1", "-1","
  <Catalog>
    <col0>    A5, 7, 5, 3, 1, 0, -1, -1, -1</col0>
  </Catalog>
 
"    "F0", "7", "6", "3", "1", "0", "-1", "-1", "-1","
  <Catalog>
    <col0>    F0, 7, 6, 3, 1, 0, -1, -1, -1</col0>
  </Catalog>
 
"    "F5", "7", "6", "4", "1", "0", "-1", "-1", "-1","
  <Catalog>
    <col0>    F5, 7, 6, 4, 1, 0, -1, -1, -1</col0>
  </Catalog>
 
"    "G0", "8", "6", "4", "1", "0", "-1", "-1", "-1","
  <Catalog>
    <col0>    G0, 8, 6, 4, 1, 0, -1, -1, -1</col0>
  </Catalog>
 
"    "G5", "9", "7", "5", "3", "0", "-1", "-1", "-1","
  <Catalog>
    <col0>    G5, 9, 7, 5, 3, 0, -1, -1, -1</col0>
  </Catalog>
 
"    "K0", "10", "7", "6", "3", "0", "-1", "-1", "-1","
  <Catalog>
    <col0>    K0, 10, 7, 6, 3, 0, -1, -1, -1</col0>
  </Catalog>
 
"    "K5", "10", "8", "7", "5", "-2", "-1", "-1", "-1","
  <Catalog>
    <col0>    K5, 10, 8, 7, 5, -2, -1, -1, -1</col0>
  </Catalog>
 
"    "M0", "11", "10", "8", "6", "-2", "-1", "-1", "-1","
  <Catalog>
    <col0>    M0, 11, 10, 8, 6, -2, -1, -1, -1</col0>
  </Catalog>
 
"    "M5", "11", "11", "9", "8", "-2", "-1", "-1", "-1","
  <Catalog>
    <col0>    M5, 11, 11, 9, 8, -2, -1, -1, -1</col0>
  </Catalog>
 
"    "M9", "12", "11", "10", "8", "-2", "-1", "-1", "-1""
  <Catalog>
    <col0>    M9, 12, 11, 10, 8, -2, -1, -1, -1</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] D100Limit">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] D100Limit></col0>
  </Catalog>
 
"  public static final String[] D100Limit = {"
  <Catalog>
    <col0>  public static final String[] D100Limit = {</col0>
  </Catalog>
 
"    "9","
  <Catalog>
    <col0>    9</col0>
  </Catalog>
 
"    "TD", "Ia", "Ib", "II", "III", "IV", "V", "VI", "D","
  <Catalog>
    <col0>    TD, Ia, Ib, II, III, IV, V, VI, D</col0>
  </Catalog>
 
"    "A0", "10", "9", "7", "6", "5", "5", "-2", "-1","
  <Catalog>
    <col0>    A0, 10, 9, 7, 6, 5, 5, -2, -1</col0>
  </Catalog>
 
"    "A5", "10", "9", "7", "5", "4", "4", "-2", "-1","
  <Catalog>
    <col0>    A5, 10, 9, 7, 5, 4, 4, -2, -1</col0>
  </Catalog>
 
"    "F0", "11", "9", "7", "5", "4", "3", "-2", "-1","
  <Catalog>
    <col0>    F0, 11, 9, 7, 5, 4, 3, -2, -1</col0>
  </Catalog>
 
"    "F5", "11", "9", "7", "5", "4", "3", "3", "-1","
  <Catalog>
    <col0>    F5, 11, 9, 7, 5, 4, 3, 3, -1</col0>
  </Catalog>
 
"    "G0", "11", "10", "8", "6", "4", "2", "2", "-1","
  <Catalog>
    <col0>    G0, 11, 10, 8, 6, 4, 2, 2, -1</col0>
  </Catalog>
 
"    "G5", "12", "10", "8", "7", "4", "2", "1", "-1","
  <Catalog>
    <col0>    G5, 12, 10, 8, 7, 4, 2, 1, -1</col0>
  </Catalog>
 
"    "K0", "12", "11", "9", "7", "5", "2", "0", "-1","
  <Catalog>
    <col0>    K0, 12, 11, 9, 7, 5, 2, 0, -1</col0>
  </Catalog>
 
"    "K5", "13", "12", "10", "9", "-2", "1", "0", "-1","
  <Catalog>
    <col0>    K5, 13, 12, 10, 9, -2, 1, 0, -1</col0>
  </Catalog>
 
"    "M0", "14", "13", "11", "9", "-2", "1", "0", "-1","
  <Catalog>
    <col0>    M0, 14, 13, 11, 9, -2, 1, 0, -1</col0>
  </Catalog>
 
"    "M5", "15", "14", "13", "11", "-2", "0", "-1", "-1","
  <Catalog>
    <col0>    M5, 15, 14, 13, 11, -2, 0, -1, -1</col0>
  </Catalog>
 
"    "M9", "15", "15", "13", "12", "-2", "-1", "-1", "-1""
  <Catalog>
    <col0>    M9, 15, 15, 13, 12, -2, -1, -1, -1</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] D1000Limit">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] D1000Limit></col0>
  </Catalog>
 
"  public static final String[] D1000Limit = {"
  <Catalog>
    <col0>  public static final String[] D1000Limit = {</col0>
  </Catalog>
 
"    "9","
  <Catalog>
    <col0>    9</col0>
  </Catalog>
 
"    "TD", "Ia", "Ib", "II", "III", "IV", "V", "VI", "D","
  <Catalog>
    <col0>    TD, Ia, Ib, II, III, IV, V, VI, D</col0>
  </Catalog>
 
"    "A0", "13", "12", "11", "9", "9", "8", "-2", "-1","
  <Catalog>
    <col0>    A0, 13, 12, 11, 9, 9, 8, -2, -1</col0>
  </Catalog>
 
"    "A5", "14", "12", "10", "9", "8", "7", "-2", "-1","
  <Catalog>
    <col0>    A5, 14, 12, 10, 9, 8, 7, -2, -1</col0>
  </Catalog>
 
"    "F0", "14", "12", "10", "9", "8", "7", "-2", "-1","
  <Catalog>
    <col0>    F0, 14, 12, 10, 9, 8, 7, -2, -1</col0>
  </Catalog>
 
"    "F5", "14", "12", "11", "9", "8", "7", "7", "-1","
  <Catalog>
    <col0>    F5, 14, 12, 11, 9, 8, 7, 7, -1</col0>
  </Catalog>
 
"    "G0", "15", "13", "11", "9", "8", "6", "6", "-1","
  <Catalog>
    <col0>    G0, 15, 13, 11, 9, 8, 6, 6, -1</col0>
  </Catalog>
 
"    "G5", "15", "14", "12", "10", "8", "6", "5", "-1","
  <Catalog>
    <col0>    G5, 15, 14, 12, 10, 8, 6, 5, -1</col0>
  </Catalog>
 
"    "K0", "16", "14", "12", "10", "8", "6", "5", "-1","
  <Catalog>
    <col0>    K0, 16, 14, 12, 10, 8, 6, 5, -1</col0>
  </Catalog>
 
"    "K5", "16", "15", "13", "12", "-2", "6", "5", "-1","
  <Catalog>
    <col0>    K5, 16, 15, 13, 12, -2, 6, 5, -1</col0>
  </Catalog>
 
"    "M0", "17", "16", "14", "12", "-2", "5", "4", "-1","
  <Catalog>
    <col0>    M0, 17, 16, 14, 12, -2, 5, 4, -1</col0>
  </Catalog>
 
"    "M5", "18", "17", "16", "14", "-2", "5", "2", "-1","
  <Catalog>
    <col0>    M5, 18, 17, 16, 14, -2, 5, 2, -1</col0>
  </Catalog>
 
"    "M9", "18", "18", "16", "15", "-2", "4", "1", "-1""
  <Catalog>
    <col0>    M9, 18, 18, 16, 15, -2, 4, 1, -1</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] EHex">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] EHex></col0>
  </Catalog>
 
"  public String[] EHex = {"
  <Catalog>
    <col0>  public String[] EHex = {</col0>
  </Catalog>
 
"    "2","
  <Catalog>
    <col0>    2</col0>
  </Catalog>
 
"    "eHex", "Decimal","
  <Catalog>
    <col0>    eHex, Decimal</col0>
  </Catalog>
 
"    "0", "0","
  <Catalog>
    <col0>    0, 0</col0>
  </Catalog>
 
"    "1", "1","
  <Catalog>
    <col0>    1, 1</col0>
  </Catalog>
 
"    "2", "2","
  <Catalog>
    <col0>    2, 2</col0>
  </Catalog>
 
"    "3", "3","
  <Catalog>
    <col0>    3, 3</col0>
  </Catalog>
 
"    "4", "4","
  <Catalog>
    <col0>    4, 4</col0>
  </Catalog>
 
"    "5", "5","
  <Catalog>
    <col0>    5, 5</col0>
  </Catalog>
 
"    "6", "6","
  <Catalog>
    <col0>    6, 6</col0>
  </Catalog>
 
"    "7", "7","
  <Catalog>
    <col0>    7, 7</col0>
  </Catalog>
 
"    "8", "8","
  <Catalog>
    <col0>    8, 8</col0>
  </Catalog>
 
"    "9", "9","
  <Catalog>
    <col0>    9, 9</col0>
  </Catalog>
 
"    "A", "10","
  <Catalog>
    <col0>    A, 10</col0>
  </Catalog>
 
"    "B", "11","
  <Catalog>
    <col0>    B, 11</col0>
  </Catalog>
 
"    "C", "12","
  <Catalog>
    <col0>    C, 12</col0>
  </Catalog>
 
"    "D", "13","
  <Catalog>
    <col0>    D, 13</col0>
  </Catalog>
 
"    "E", "14","
  <Catalog>
    <col0>    E, 14</col0>
  </Catalog>
 
"    "F", "15","
  <Catalog>
    <col0>    F, 15</col0>
  </Catalog>
 
"    "G", "16","
  <Catalog>
    <col0>    G, 16</col0>
  </Catalog>
 
"    "H", "17","
  <Catalog>
    <col0>    H, 17</col0>
  </Catalog>
 
"    "J", "18","
  <Catalog>
    <col0>    J, 18</col0>
  </Catalog>
 
"    "K", "19","
  <Catalog>
    <col0>    K, 19</col0>
  </Catalog>
 
"    "L", "20","
  <Catalog>
    <col0>    L, 20</col0>
  </Catalog>
 
"    "M", "21","
  <Catalog>
    <col0>    M, 21</col0>
  </Catalog>
 
"    "N", "22","
  <Catalog>
    <col0>    N, 22</col0>
  </Catalog>
 
"    "P", "23","
  <Catalog>
    <col0>    P, 23</col0>
  </Catalog>
 
"    "Q", "24","
  <Catalog>
    <col0>    Q, 24</col0>
  </Catalog>
 
"    "R", "25","
  <Catalog>
    <col0>    R, 25</col0>
  </Catalog>
 
"    "S", "26","
  <Catalog>
    <col0>    S, 26</col0>
  </Catalog>
 
"    "T", "27","
  <Catalog>
    <col0>    T, 27</col0>
  </Catalog>
 
"    "U", "28","
  <Catalog>
    <col0>    U, 28</col0>
  </Catalog>
 
"    "V", "29","
  <Catalog>
    <col0>    V, 29</col0>
  </Catalog>
 
"    "W", "30","
  <Catalog>
    <col0>    W, 30</col0>
  </Catalog>
 
"    "X", "31*","
  <Catalog>
    <col0>    X, 31*</col0>
  </Catalog>
 
"    "Y", "32*","
  <Catalog>
    <col0>    Y, 32*</col0>
  </Catalog>
 
"    "Z", "33*""
  <Catalog>
    <col0>    Z, 33*</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Atmo">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Atmo></col0>
  </Catalog>
 
"  public static String[] Atmo = {"
  <Catalog>
    <col0>  public static String[] Atmo = {</col0>
  </Catalog>
 
"    //Atmo = Flux + Size"
  <Catalog>
    <col0>    //Atmo = Flux  Size</col0>
  </Catalog>
 
"    //if Atmo<0 or Size=0 then Atmo=0"
  <Catalog>
    <col0>    //if Atmo<0 or Size=0 then Atmo=0</col0>
  </Catalog>
 
"    //if Atmo>F then Atmo=F"
  <Catalog>
    <col0>    //if Atmo>F then Atmo=F</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "Description", "Effects","
  <Catalog>
    <col0>    Digit, Description, Effects</col0>
  </Catalog>
 
"    "0", "Vacuum", "S3","
  <Catalog>
    <col0>    0, Vacuum, S3</col0>
  </Catalog>
 
"    "1", "Trace", "S3","
  <Catalog>
    <col0>    1, Trace, S3</col0>
  </Catalog>
 
"    "2", "VThin, Tainted", "P1, S2","
  <Catalog>
    <col0>    2, VThin, Tainted, P1, S2</col0>
  </Catalog>
 
"    "3", "VThin", "S2","
  <Catalog>
    <col0>    3, VThin, S2</col0>
  </Catalog>
 
"    "4", "Thin, Tainted", "P1, S1","
  <Catalog>
    <col0>    4, Thin, Tainted, P1, S1</col0>
  </Catalog>
 
"    "5", "This", "S1","
  <Catalog>
    <col0>    5, This, S1</col0>
  </Catalog>
 
"    "6", "Standard", "","
  <Catalog>
    <col0>    6, Standard, </col0>
  </Catalog>
 
"    "7", "Standard, Tainted", "P1","
  <Catalog>
    <col0>    7, Standard, Tainted, P1</col0>
  </Catalog>
 
"    "8", "Dense", "","
  <Catalog>
    <col0>    8, Dense, </col0>
  </Catalog>
 
"    "9", "Dense, Tainted", "P1","
  <Catalog>
    <col0>    9, Dense, Tainted, P1</col0>
  </Catalog>
 
"    "A", "Exotic", "P1","
  <Catalog>
    <col0>    A, Exotic, P1</col0>
  </Catalog>
 
"    "B", "Corrosive", "C1 P1","
  <Catalog>
    <col0>    B, Corrosive, C1 P1</col0>
  </Catalog>
 
"    "C", "Insidious", "C2 P1","
  <Catalog>
    <col0>    C, Insidious, C2 P1</col0>
  </Catalog>
 
"    "D", "Dense, High", "varies","
  <Catalog>
    <col0>    D, Dense, High, varies</col0>
  </Catalog>
 
"    "E", "Ellipsoid", "varies","
  <Catalog>
    <col0>    E, Ellipsoid, varies</col0>
  </Catalog>
 
"    "F", "Thin, Low", "varies""
  <Catalog>
    <col0>    F, Thin, Low, varies</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Hydro">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Hydro></col0>
  </Catalog>
 
"  public static String[] Hydro = {"
  <Catalog>
    <col0>  public static String[] Hydro = {</col0>
  </Catalog>
 
"    //Hydro = Flux + Atmo"
  <Catalog>
    <col0>    //Hydro = Flux  Atmo</col0>
  </Catalog>
 
"    //Max = A"
  <Catalog>
    <col0>    //Max = A</col0>
  </Catalog>
 
"    //if Siz < 2 then Hyd = 0"
  <Catalog>
    <col0>    //if Siz < 2 then Hyd = 0</col0>
  </Catalog>
 
"    //if Atm < 2 or Atm > 9 then Atmo DM-4"
  <Catalog>
    <col0>    //if Atm < 2 or Atm > 9 then Atmo DM-4</col0>
  </Catalog>
 
"    //if Hyd <0 then 0"
  <Catalog>
    <col0>    //if Hyd <0 then 0</col0>
  </Catalog>
 
"    //if Hyd > A then A"
  <Catalog>
    <col0>    //if Hyd > A then A</col0>
  </Catalog>
 
"    "2","
  <Catalog>
    <col0>    2</col0>
  </Catalog>
 
"    "Digit", "Description","
  <Catalog>
    <col0>    Digit, Description</col0>
  </Catalog>
 
"    "0", "Desert World","
  <Catalog>
    <col0>    0, Desert World</col0>
  </Catalog>
 
"    "1", "10%","
  <Catalog>
    <col0>    1, 10%</col0>
  </Catalog>
 
"    "2", "20%","
  <Catalog>
    <col0>    2, 20%</col0>
  </Catalog>
 
"    "3", "30%","
  <Catalog>
    <col0>    3, 30%</col0>
  </Catalog>
 
"    "4", "40%","
  <Catalog>
    <col0>    4, 40%</col0>
  </Catalog>
 
"    "5", "50%","
  <Catalog>
    <col0>    5, 50%</col0>
  </Catalog>
 
"    "6", "60%","
  <Catalog>
    <col0>    6, 60%</col0>
  </Catalog>
 
"    "7", "70%","
  <Catalog>
    <col0>    7, 70%</col0>
  </Catalog>
 
"    "8", "80%","
  <Catalog>
    <col0>    8, 80%</col0>
  </Catalog>
 
"    "9", "90%","
  <Catalog>
    <col0>    9, 90%</col0>
  </Catalog>
 
"    "A", "Water World""
  <Catalog>
    <col0>    A, Water World</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Pop">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Pop></col0>
  </Catalog>
 
"  public static String[] Pop = {"
  <Catalog>
    <col0>  public static String[] Pop = {</col0>
  </Catalog>
 
"    //pop = 2D-2"
  <Catalog>
    <col0>    //pop = 2D-2</col0>
  </Catalog>
 
"    //if 10, reroll 9 + 1D"
  <Catalog>
    <col0>    //if 10, reroll 9  1D</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "Description", "Value","
  <Catalog>
    <col0>    Digit, Description, Value</col0>
  </Catalog>
 
"    "0", "Unpopulated", "","
  <Catalog>
    <col0>    0, Unpopulated, </col0>
  </Catalog>
 
"    "1", "Tens", "0","
  <Catalog>
    <col0>    1, Tens, 0</col0>
  </Catalog>
 
"    "2", "Hundred", "00","
  <Catalog>
    <col0>    2, Hundred, 00</col0>
  </Catalog>
 
"    "3", "Thousand", ",000","
  <Catalog>
    <col0>    3, Thousand, ,000</col0>
  </Catalog>
 
"    "4", "Ten thousand", "0,000","
  <Catalog>
    <col0>    4, Ten thousand, 0,000</col0>
  </Catalog>
 
"    "5", "Hundred thousand", "00,000","
  <Catalog>
    <col0>    5, Hundred thousand, 00,000</col0>
  </Catalog>
 
"    "6", "Million", ",000,000","
  <Catalog>
    <col0>    6, Million, ,000,000</col0>
  </Catalog>
 
"    "7", "Ten million", "0,000,000","
  <Catalog>
    <col0>    7, Ten million, 0,000,000</col0>
  </Catalog>
 
"    "8", "Hundred million", "00,000,000","
  <Catalog>
    <col0>    8, Hundred million, 00,000,000</col0>
  </Catalog>
 
"    "9", "Billion", ",000,000,000","
  <Catalog>
    <col0>    9, Billion, ,000,000,000</col0>
  </Catalog>
 
"    "A", "Ten billion", "0,000,000,000","
  <Catalog>
    <col0>    A, Ten billion, 0,000,000,000</col0>
  </Catalog>
 
"    "B", "Hundred billion", "00,000,000,000","
  <Catalog>
    <col0>    B, Hundred billion, 00,000,000,000</col0>
  </Catalog>
 
"    "C", "Trillion", ",000,000,000,000","
  <Catalog>
    <col0>    C, Trillion, ,000,000,000,000</col0>
  </Catalog>
 
"    "D", "Ten trillion", "0,000,000,000,000","
  <Catalog>
    <col0>    D, Ten trillion, 0,000,000,000,000</col0>
  </Catalog>
 
"    "E", "Hundred trillion", "00,000,000,000,0000","
  <Catalog>
    <col0>    E, Hundred trillion, 00,000,000,000,0000</col0>
  </Catalog>
 
"    "F", "Quadrillion", ",000,000,000,000,000""
  <Catalog>
    <col0>    F, Quadrillion, ,000,000,000,000,000</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Govt">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Govt></col0>
  </Catalog>
 
"  public static String[] Govt = {"
  <Catalog>
    <col0>  public static String[] Govt = {</col0>
  </Catalog>
 
"    //Gov = Flux + Pop, if Gov > F then Gov = F"
  <Catalog>
    <col0>    //Gov = Flux  Pop, if Gov > F then Gov = F</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "Description", "Note","
  <Catalog>
    <col0>    Digit, Description, Note</col0>
  </Catalog>
 
"    "0", "No Government Structure", "Family bonds predominate","
  <Catalog>
    <col0>    0, No Government Structure, Family bonds predominate</col0>
  </Catalog>
 
"    "1", "Company/Corporation", "Rule by a managerial elite","
  <Catalog>
    <col0>    1, Company/Corporation, Rule by a managerial elite</col0>
  </Catalog>
 
"    "2", "Participating Democracy", "Rule by popular vote","
  <Catalog>
    <col0>    2, Participating Democracy, Rule by popular vote</col0>
  </Catalog>
 
"    "3", "Self-Perpetuating Oligarchy", "Rule by a restricted minority with ""
  <Catalog>
    <col0>    3, Self-Perpetuating Oligarchy, Rule by a restricted minority with </col0>
  </Catalog>
 
"    + "little or no input from the masses","
  <Catalog>
    <col0>     little or no input from the masses</col0>
  </Catalog>
 
"    "4", "Representative Democracy", "Government by proxy","
  <Catalog>
    <col0>    4, Representative Democracy, Government by proxy</col0>
  </Catalog>
 
"    "5", "Feudal Technocracy", "Governmental relationships based on mutually ""
  <Catalog>
    <col0>    5, Feudal Technocracy, Governmental relationships based on mutually </col0>
  </Catalog>
 
"    + "beneficial technical activities","
  <Catalog>
    <col0>     beneficial technical activities</col0>
  </Catalog>
 
"    "6", "Captive Government/Colony", "Rule by a leadership answerable to an ""
  <Catalog>
    <col0>    6, Captive Government/Colony, Rule by a leadership answerable to an </col0>
  </Catalog>
 
"    + "outside group","
  <Catalog>
    <col0>     outside group</col0>
  </Catalog>
 
"    "7", "Balkanization", "Rival governments continually compete for control ""
  <Catalog>
    <col0>    7, Balkanization, Rival governments continually compete for control </col0>
  </Catalog>
 
"    + "of the world","
  <Catalog>
    <col0>     of the world</col0>
  </Catalog>
 
"    "8", "Civil Service Bureaucracy", "Rule by agencies employing ""
  <Catalog>
    <col0>    8, Civil Service Bureaucracy, Rule by agencies employing </col0>
  </Catalog>
 
"    + "individuals selected by merit","
  <Catalog>
    <col0>     individuals selected by merit</col0>
  </Catalog>
 
"    "9", "Impersonal Bureaucracy", "Impersonal agencies rule","
  <Catalog>
    <col0>    9, Impersonal Bureaucracy, Impersonal agencies rule</col0>
  </Catalog>
 
"    "A", "Charismatic Dictatorship", "Government by a single leader ""
  <Catalog>
    <col0>    A, Charismatic Dictatorship, Government by a single leader </col0>
  </Catalog>
 
"    + "enjoying the confidence of the citizens","
  <Catalog>
    <col0>     enjoying the confidence of the citizens</col0>
  </Catalog>
 
"    "B", "Non-Charismatic Dictatorship", "Government by the successor ""
  <Catalog>
    <col0>    B, Non-Charismatic Dictatorship, Government by the successor </col0>
  </Catalog>
 
"    + "to a charismatic dictator","
  <Catalog>
    <col0>     to a charismatic dictator</col0>
  </Catalog>
 
"    "C", "Charismatic Oligarchy", "Government by a select religious, ""
  <Catalog>
    <col0>    C, Charismatic Oligarchy, Government by a select religious, </col0>
  </Catalog>
 
"    + "mystic, or psionic group, organization, or class enjoying the ""
  <Catalog>
    <col0>     mystic, or psionic group, organization, or class enjoying the </col0>
  </Catalog>
 
"    + "overwhelming confidence of the citizenry","
  <Catalog>
    <col0>     overwhelming confidence of the citizenry</col0>
  </Catalog>
 
"    "D", "Religious Dictatorship", "With little or no regard for the needs ""
  <Catalog>
    <col0>    D, Religious Dictatorship, With little or no regard for the needs </col0>
  </Catalog>
 
"    + "of the citizenry","
  <Catalog>
    <col0>     of the citizenry</col0>
  </Catalog>
 
"    "E", "Religious Autocracy", "Government by a single religious, mystic, ""
  <Catalog>
    <col0>    E, Religious Autocracy, Government by a single religious, mystic, </col0>
  </Catalog>
 
"    + "or psionic leader weilding absolute power","
  <Catalog>
    <col0>     or psionic leader weilding absolute power</col0>
  </Catalog>
 
"    "F", "Totalitarian Oligarchy", "Government by an all powerfule minority ""
  <Catalog>
    <col0>    F, Totalitarian Oligarchy, Government by an all powerfule minority </col0>
  </Catalog>
 
"    + "which maintains absolute control through widespread coercion and ""
  <Catalog>
    <col0>     which maintains absolute control through widespread coercion and </col0>
  </Catalog>
 
"    + "oppression""
  <Catalog>
    <col0>     oppression</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Law">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Law></col0>
  </Catalog>
 
"  public static String[] Law = {"
  <Catalog>
    <col0>  public static String[] Law = {</col0>
  </Catalog>
 
"    //Law = Flux + Go"
  <Catalog>
    <col0>    //Law = Flux  Go</col0>
  </Catalog>
 
"    //if Law > J then Law = J"
  <Catalog>
    <col0>    //if Law > J then Law = J</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "Description", "Note","
  <Catalog>
    <col0>    Digit, Description, Note</col0>
  </Catalog>
 
"    "0", "No Law", "No prohibitions","
  <Catalog>
    <col0>    0, No Law, No prohibitions</col0>
  </Catalog>
 
"    "1", "Low Law", "Prohibition of WMD, Psi weapons","
  <Catalog>
    <col0>    1, Low Law, Prohibition of WMD, Psi weapons</col0>
  </Catalog>
 
"    "2", "Low Law", "Prohibition of 'portable' weapons","
  <Catalog>
    <col0>    2, Low Law, Prohibition of 'portable' weapons</col0>
  </Catalog>
 
"    "3", "Low Law", "Prohibition of Acid, Fire, Gas weapons","
  <Catalog>
    <col0>    3, Low Law, Prohibition of Acid, Fire, Gas weapons</col0>
  </Catalog>
 
"    "4", "Moderate Law", "Laser, Beam weapons prohibited","
  <Catalog>
    <col0>    4, Moderate Law, Laser, Beam weapons prohibited</col0>
  </Catalog>
 
"    "5", "Moderate Law", "Shock, EMP, Rad, Mag, Grav weapons prohibited","
  <Catalog>
    <col0>    5, Moderate Law, Shock, EMP, Rad, Mag, Grav weapons prohibited</col0>
  </Catalog>
 
"    "6", "Moderate Law", "Pohibition of Machineguns","
  <Catalog>
    <col0>    6, Moderate Law, Pohibition of Machineguns</col0>
  </Catalog>
 
"    "7", "Moderate Law", "Prohibition of Pistols","
  <Catalog>
    <col0>    7, Moderate Law, Prohibition of Pistols</col0>
  </Catalog>
 
"    "8", "High Law", "Open display of weapons prohibited","
  <Catalog>
    <col0>    8, High Law, Open display of weapons prohibited</col0>
  </Catalog>
 
"    "9", "High Law", "Weapons outside the home prohibited","
  <Catalog>
    <col0>    9, High Law, Weapons outside the home prohibited</col0>
  </Catalog>
 
"    "A", "Extreme Law", "Weapon possession prohibited","
  <Catalog>
    <col0>    A, Extreme Law, Weapon possession prohibited</col0>
  </Catalog>
 
"    "B", "Extreme Law", "Continental passports required","
  <Catalog>
    <col0>    B, Extreme Law, Continental passports required</col0>
  </Catalog>
 
"    "C", "Extreme Law", "Unrestricted invasion of privacy","
  <Catalog>
    <col0>    C, Extreme Law, Unrestricted invasion of privacy</col0>
  </Catalog>
 
"    "D", "Extreme Law", "Paramilitary law enforcement","
  <Catalog>
    <col0>    D, Extreme Law, Paramilitary law enforcement</col0>
  </Catalog>
 
"    "E", "Extreme Law", "Full-fledged police state","
  <Catalog>
    <col0>    E, Extreme Law, Full-fledged police state</col0>
  </Catalog>
 
"    "F", "Extreme Law", "Daily life rigidly controlled","
  <Catalog>
    <col0>    F, Extreme Law, Daily life rigidly controlled</col0>
  </Catalog>
 
"    "G", "Extreme Law", "Disproportionate punishments","
  <Catalog>
    <col0>    G, Extreme Law, Disproportionate punishments</col0>
  </Catalog>
 
"    "H", "Extreme Law", "Legalized oppressive practices","
  <Catalog>
    <col0>    H, Extreme Law, Legalized oppressive practices</col0>
  </Catalog>
 
"    "J", "Extreme Law", "Routinely oppressive and restrictive""
  <Catalog>
    <col0>    J, Extreme Law, Routinely oppressive and restrictive</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Tech">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Tech></col0>
  </Catalog>
 
"  public static String[] Tech = {"
  <Catalog>
    <col0>  public static String[] Tech = {</col0>
  </Catalog>
 
"    //Starport A = +6"
  <Catalog>
    <col0>    //Starport A = 6</col0>
  </Catalog>
 
"    //B = +4"
  <Catalog>
    <col0>    //B = 4</col0>
  </Catalog>
 
"    //C = +2"
  <Catalog>
    <col0>    //C = 2</col0>
  </Catalog>
 
"    //F = +1"
  <Catalog>
    <col0>    //F = 1</col0>
  </Catalog>
 
"    //X = -4"
  <Catalog>
    <col0>    //X = -4</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "", "","
  <Catalog>
    <col0>    Digit, , </col0>
  </Catalog>
 
"    "0", "", "","
  <Catalog>
    <col0>    0, , </col0>
  </Catalog>
 
"    "1", "", "","
  <Catalog>
    <col0>    1, , </col0>
  </Catalog>
 
"    "2", "", "","
  <Catalog>
    <col0>    2, , </col0>
  </Catalog>
 
"    "3", "", "","
  <Catalog>
    <col0>    3, , </col0>
  </Catalog>
 
"    "4", "", "","
  <Catalog>
    <col0>    4, , </col0>
  </Catalog>
 
"    "5", "", "","
  <Catalog>
    <col0>    5, , </col0>
  </Catalog>
 
"    "6", "", "","
  <Catalog>
    <col0>    6, , </col0>
  </Catalog>
 
"    "7", "", "","
  <Catalog>
    <col0>    7, , </col0>
  </Catalog>
 
"    "8", "", "","
  <Catalog>
    <col0>    8, , </col0>
  </Catalog>
 
"    "9", "", "","
  <Catalog>
    <col0>    9, , </col0>
  </Catalog>
 
"    "A", "", "","
  <Catalog>
    <col0>    A, , </col0>
  </Catalog>
 
"    "B", "", "","
  <Catalog>
    <col0>    B, , </col0>
  </Catalog>
 
"    "C", "", "","
  <Catalog>
    <col0>    C, , </col0>
  </Catalog>
 
"    "D", "", "","
  <Catalog>
    <col0>    D, , </col0>
  </Catalog>
 
"    "E", "", "","
  <Catalog>
    <col0>    E, , </col0>
  </Catalog>
 
"    "F", "", """
  <Catalog>
    <col0>    F, , </col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Remarks">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Remarks></col0>
  </Catalog>
 
"  public static String[] Remarks = {"
  <Catalog>
    <col0>  public static String[] Remarks = {</col0>
  </Catalog>
 
"    "9","
  <Catalog>
    <col0>    9</col0>
  </Catalog>
 
"    "Code", "Siz", "Atm", "Hyd", "Pop", "Govt", "Law", "Definition", "Formula","
  <Catalog>
    <col0>    Code, Siz, Atm, Hyd, Pop, Govt, Law, Definition, Formula</col0>
  </Catalog>
 
"    //---------------------------------PLANETARY"
  <Catalog>
    <col0>    //---------------------------------PLANETARY</col0>
  </Catalog>
 
"    "As", "0", "0", "0", "", "", "", "Asteroid", "","
  <Catalog>
    <col0>    As, 0, 0, 0, , , , Asteroid, </col0>
  </Catalog>
 
"    "De", "23456789", "0", "", "", "", "", "Desert", "","
  <Catalog>
    <col0>    De, 23456789, 0, , , , , Desert, </col0>
  </Catalog>
 
"    "Fl", "", "ABC", "123456789A", "", "", "", "Fluid", "","
  <Catalog>
    <col0>    Fl, , ABC, 123456789A, , , , Fluid, </col0>
  </Catalog>
 
"    "Ga", "678", "568", "567", "", "", "", "Garden World", "","
  <Catalog>
    <col0>    Ga, 678, 568, 567, , , , Garden World, </col0>
  </Catalog>
 
"    "He", "3459ABC", "2479ABC", "012", "", "", "", "Hell World", "","
  <Catalog>
    <col0>    He, 3459ABC, 2479ABC, 012, , , , Hell World, </col0>
  </Catalog>
 
"    "Ic", "", "01", "123456789A", "", "", "", "Ice Capped", "","
  <Catalog>
    <col0>    Ic, , 01, 123456789A, , , , Ice Capped, </col0>
  </Catalog>
 
"    "Oc", "ABC", "", "A", "", "", "", "Ocean World", "","
  <Catalog>
    <col0>    Oc, ABC, , A, , , , Ocean World, </col0>
  </Catalog>
 
"    "Va", "", "0", "", "", "", "", "Vacuum", "","
  <Catalog>
    <col0>    Va, , 0, , , , , Vacuum, </col0>
  </Catalog>
 
"    "Wa", "56789", "", "A", "", "", "", "Water World", "","
  <Catalog>
    <col0>    Wa, 56789, , A, , , , Water World, </col0>
  </Catalog>
 
"    //---------------------------------POPULATION"
  <Catalog>
    <col0>    //---------------------------------POPULATION</col0>
  </Catalog>
 
"    "Di", "", "", "", "0", "0", "0", "Dieback (000-T)", "","
  <Catalog>
    <col0>    Di, , , , 0, 0, 0, Dieback (000-T), </col0>
  </Catalog>
 
"    "Ba", "", "", "", "0", "0", "0", "Barren", "","
  <Catalog>
    <col0>    Ba, , , , 0, 0, 0, Barren, </col0>
  </Catalog>
 
"    "Lo", "", "", "", "123", "", "", "Low Population", "","
  <Catalog>
    <col0>    Lo, , , , 123, , , Low Population, </col0>
  </Catalog>
 
"    "Ni", "", "", "", "456", "", "", "Non Industrial", "","
  <Catalog>
    <col0>    Ni, , , , 456, , , Non Industrial, </col0>
  </Catalog>
 
"    "Ph", "", "", "", "8", "", "", "Pre High", "","
  <Catalog>
    <col0>    Ph, , , , 8, , , Pre High, </col0>
  </Catalog>
 
"    "Hi", "", "", "", "9ABC", "", "", "High Population", "","
  <Catalog>
    <col0>    Hi, , , , 9ABC, , , High Population, </col0>
  </Catalog>
 
"    //---------------------------------ECONOMIC"
  <Catalog>
    <col0>    //---------------------------------ECONOMIC</col0>
  </Catalog>
 
"    "Pa", "", "456789", "45678", "48", "", "", "Pre Agricultural", "","
  <Catalog>
    <col0>    Pa, , 456789, 45678, 48, , , Pre Agricultural, </col0>
  </Catalog>
 
"    "Ag", "", "456789", "45678", "567", "", "", "Agricultural", "","
  <Catalog>
    <col0>    Ag, , 456789, 45678, 567, , , Agricultural, </col0>
  </Catalog>
 
"    "Na", "", "0123", "0123", "6789ABC", "", "", "Non Agricultural", "","
  <Catalog>
    <col0>    Na, , 0123, 0123, 6789ABC, , , Non Agricultural, </col0>
  </Catalog>
 
"    "Pi", "", "012479", "", "78", "", "", "Pre Industrial", "","
  <Catalog>
    <col0>    Pi, , 012479, , 78, , , Pre Industrial, </col0>
  </Catalog>
 
"    "In", "", "012479", "", "9ABC", "", "", "industrial", "","
  <Catalog>
    <col0>    In, , 012479, , 9ABC, , , industrial, </col0>
  </Catalog>
 
"    "Po", "", "2345", "0123", "", "", "", "Poor", "","
  <Catalog>
    <col0>    Po, , 2345, 0123, , , , Poor, </col0>
  </Catalog>
 
"    "Pr", "", "68", "", "59", "", "", "Pre Rich", "","
  <Catalog>
    <col0>    Pr, , 68, , 59, , , Pre Rich, </col0>
  </Catalog>
 
"    "Ri", "", "68", "", "678", "", "", "Rich", "","
  <Catalog>
    <col0>    Ri, , 68, , 678, , , Rich, </col0>
  </Catalog>
 
"    //---------------------------------CLIMATE"
  <Catalog>
    <col0>    //---------------------------------CLIMATE</col0>
  </Catalog>
 
"    "Fr", "23456789", "", "123456789A", "", "", "", "Frozen", "HZ +2 or outer","
  <Catalog>
    <col0>    Fr, 23456789, , 123456789A, , , , Frozen, HZ 2 or outer</col0>
  </Catalog>
 
"    "Ho", "", "", "", "", "", "", "Hot", "HZ -1","
  <Catalog>
    <col0>    Ho, , , , , , , Hot, HZ -1</col0>
  </Catalog>
 
"    "Co", "", "", "", "", "", "", "Cold", "HZ +1","
  <Catalog>
    <col0>    Co, , , , , , , Cold, HZ 1</col0>
  </Catalog>
 
"    "Lk", "", "", "", "", "", "", "Locked", "Close Satellite","
  <Catalog>
    <col0>    Lk, , , , , , , Locked, Close Satellite</col0>
  </Catalog>
 
"    "Tr", "6789", "456789", "34567", "", "", "", "Tropic", "HZ -1","
  <Catalog>
    <col0>    Tr, 6789, 456789, 34567, , , , Tropic, HZ -1</col0>
  </Catalog>
 
"    "Tu", "6789", "456789", "34567", "", "", "", "Tundra", "HZ +1","
  <Catalog>
    <col0>    Tu, 6789, 456789, 34567, , , , Tundra, HZ 1</col0>
  </Catalog>
 
"    "Tz", "", "", "", "", "", "", "Twilight Zone", "Orbit 0-1","
  <Catalog>
    <col0>    Tz, , , , , , , Twilight Zone, Orbit 0-1</col0>
  </Catalog>
 
"    //---------------------------------SECONDARY"
  <Catalog>
    <col0>    //---------------------------------SECONDARY</col0>
  </Catalog>
 
"    "Fa", "", "456789", "45678", "23456", "", "", "Farming", "Not MainWorld.  HZ","
  <Catalog>
    <col0>    Fa, , 456789, 45678, 23456, , , Farming, Not MainWorld.  HZ</col0>
  </Catalog>
 
"    "Mi", "", "", "", "23456", "", "", "Mining", "Not MainWorld.  MainWorld=In","
  <Catalog>
    <col0>    Mi, , , , 23456, , , Mining, Not MainWorld.  MainWorld=In</col0>
  </Catalog>
 
"    "Mr", "", "", "", "", "", "", "Military Rule by Regional Power", "","
  <Catalog>
    <col0>    Mr, , , , , , , Military Rule by Regional Power, </col0>
  </Catalog>
 
"    "Px", "", "23AB", "12345", "3456", "", "6789", "Prison.  Exile Camp", "","
  <Catalog>
    <col0>    Px, , 23AB, 12345, 3456, , 6789, Prison.  Exile Camp, </col0>
  </Catalog>
 
"    "Pe", "", "23AB", "12345", "3456", "6", "6789", "Penal Colony", "","
  <Catalog>
    <col0>    Pe, , 23AB, 12345, 3456, 6, 6789, Penal Colony, </col0>
  </Catalog>
 
"    "Re", "", "", "", "1234", "6", "45", "Reserve", "","
  <Catalog>
    <col0>    Re, , , , 1234, 6, 45, Reserve, </col0>
  </Catalog>
 
"    //---------------------------------POLITICAL"
  <Catalog>
    <col0>    //---------------------------------POLITICAL</col0>
  </Catalog>
 
"    "Cp", "", "", "", "", "", "", "Subsector Capital", "Imperial","
  <Catalog>
    <col0>    Cp, , , , , , , Subsector Capital, Imperial</col0>
  </Catalog>
 
"    "Cs", "", "", "", "", "", "", "Client State", "Imperial","
  <Catalog>
    <col0>    Cs, , , , , , , Client State, Imperial</col0>
  </Catalog>
 
"    "Cx", "", "", "", "", "", "", "Sector Capital", "Imperial","
  <Catalog>
    <col0>    Cx, , , , , , , Sector Capital, Imperial</col0>
  </Catalog>
 
"    "Cy", "", "", "", "", "", "", "Colony", "O:xxyy (p434)","
  <Catalog>
    <col0>    Cy, , , , , , , Colony, O:xxyy (p434)</col0>
  </Catalog>
 
"    //---------------------------------SPECIAL"
  <Catalog>
    <col0>    //---------------------------------SPECIAL</col0>
  </Catalog>
 
"    "Sa", "", "", "", "", "", "", "Satellite", "","
  <Catalog>
    <col0>    Sa, , , , , , , Satellite, </col0>
  </Catalog>
 
"    "Fo", "", "", "", "", "", "", "Forbidden", "Red Zone","
  <Catalog>
    <col0>    Fo, , , , , , , Forbidden, Red Zone</col0>
  </Catalog>
 
"    "Pz", "", "", "", "789ABC", "", "", "Puzzle", "Amber Zone","
  <Catalog>
    <col0>    Pz, , , , 789ABC, , , Puzzle, Amber Zone</col0>
  </Catalog>
 
"    "Da", "", "", "", "0123456", "", "", "Dangerous", "Amber Zone","
  <Catalog>
    <col0>    Da, , , , 0123456, , , Dangerous, Amber Zone</col0>
  </Catalog>
 
"    "Ab", "", "", "", "", "", "", "Data Repository", "","
  <Catalog>
    <col0>    Ab, , , , , , , Data Repository, </col0>
  </Catalog>
 
"    "An", "", "", "", "", "", "", "Ancient Site", "","
  <Catalog>
    <col0>    An, , , , , , , Ancient Site, </col0>
  </Catalog>
 
"    "Rs", "", "", "", "", "", "", "Research Station", "","
  <Catalog>
    <col0>    Rs, , , , , , , Research Station, </col0>
  </Catalog>
 
"    "RsA", "", "", "", "", "", "", "Research Station Alpha", "","
  <Catalog>
    <col0>    RsA, , , , , , , Research Station Alpha, </col0>
  </Catalog>
 
"    "RsB", "", "", "", "", "", "", "Research Station Beta", "","
  <Catalog>
    <col0>    RsB, , , , , , , Research Station Beta, </col0>
  </Catalog>
 
"    //    "", "", "", "", "", "", "", "", "","
  <Catalog>
    <col0>    //    , , , , , , , , </col0>
  </Catalog>
 
"    "RsD", "", "", "", "", "", "", "Research Station Delta", """
  <Catalog>
    <col0>    RsD, , , , , , , Research Station Delta, </col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] NIL">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] NIL></col0>
  </Catalog>
 
"  public static String[] NIL = {"
  <Catalog>
    <col0>  public static String[] NIL = {</col0>
  </Catalog>
 
"    "5","
  <Catalog>
    <col0>    5</col0>
  </Catalog>
 
"    "Pop", "Atm", "TL", "Comment", "Note","
  <Catalog>
    <col0>    Pop, Atm, TL, Comment, Note</col0>
  </Catalog>
 
"    "7+", "2-9", "1+", "Intelligent life evolved on this world", "Natives","
  <Catalog>
    <col0>    7, 2-9, 1, Intelligent life evolved on this world, Natives</col0>
  </Catalog>
 
"    "7+", "A+", "1+", "Local intelligent life incompatible with human enviroments", "Exotics","
  <Catalog>
    <col0>    7, A, 1, Local intelligent life incompatible with human enviroments, Exotics</col0>
  </Catalog>
 
"    "7+", "0-1", "1+", "Sophonts evolved elsewhere and settled here years ago", "Transplants","
  <Catalog>
    <col0>    7, 0-1, 1, Sophonts evolved elsewhere and settled here years ago, Transplants</col0>
  </Catalog>
 
"    "0", "2+", "1+", "Intelligent life evolved on this world, but is now extinct", "Extinct","
  <Catalog>
    <col0>    0, 2, 1, Intelligent life evolved on this world, but is now extinct, Extinct</col0>
  </Catalog>
 
"    "0", "0-1", "1+", "Evidence of Transplants, but are no longer present", "Vanished","
  <Catalog>
    <col0>    0, 0-1, 1, Evidence of Transplants, but are no longer present, Vanished</col0>
  </Catalog>
 
"    "1-3", "", "", "Non permanent commercial or scientific activity", "Transients","
  <Catalog>
    <col0>    1-3, , , Non permanent commercial or scientific activity, Transients</col0>
  </Catalog>
 
"    "4-6", "", "", "The initial steps of creating a colony", "Settlers""
  <Catalog>
    <col0>    4-6, , , The initial steps of creating a colony, Settlers</col0>
  </Catalog>
 
"  //  if Gov == 1   Locals are company employees"
  <Catalog>
    <col0>  //  if Gov == 1   Locals are company employees</col0>
  </Catalog>
 
"  //  if Gov == 6   Locals are colonists from a nearby world"
  <Catalog>
    <col0>  //  if Gov == 6   Locals are colonists from a nearby world</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] N">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] N></col0>
  </Catalog>
 
"  public static String[] N = {"
  <Catalog>
    <col0>  public static String[] N = {</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Code", "Rank", "TC","
  <Catalog>
    <col0>    Code, Rank, TC</col0>
  </Catalog>
 
"    "A", "Gentleman", "Peer","
  <Catalog>
    <col0>    A, Gentleman, Peer</col0>
  </Catalog>
 
"    "B", "Knight", "any","
  <Catalog>
    <col0>    B, Knight, any</col0>
  </Catalog>
 
"    "c", "Baronet", "Pa Pr","
  <Catalog>
    <col0>    c, Baronet, Pa Pr</col0>
  </Catalog>
 
"    "C", "Baron", "Ag Ri","
  <Catalog>
    <col0>    C, Baron, Ag Ri</col0>
  </Catalog>
 
"    "D", "Marquis", "Pi","
  <Catalog>
    <col0>    D, Marquis, Pi</col0>
  </Catalog>
 
"    "e", "Viscount", "Ph","
  <Catalog>
    <col0>    e, Viscount, Ph</col0>
  </Catalog>
 
"    "E", "Count", "Hi","
  <Catalog>
    <col0>    E, Count, Hi</col0>
  </Catalog>
 
"    "f", "Duke", "In","
  <Catalog>
    <col0>    f, Duke, In</col0>
  </Catalog>
 
"    "F", "Duke", "In","
  <Catalog>
    <col0>    F, Duke, In</col0>
  </Catalog>
 
"    "G", "Archduke", "","
  <Catalog>
    <col0>    G, Archduke, </col0>
  </Catalog>
 
"    "H", "Emperor", """
  <Catalog>
    <col0>    H, Emperor, </col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] B">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] B></col0>
  </Catalog>
 
"  public static String[] B = {"
  <Catalog>
    <col0>  public static String[] B = {</col0>
  </Catalog>
 
"    "3","
  <Catalog>
    <col0>    3</col0>
  </Catalog>
 
"    "Digit", "Description", "Alleg","
  <Catalog>
    <col0>    Digit, Description, Alleg</col0>
  </Catalog>
 
"    "C", "Corsair Base", "Vargr","
  <Catalog>
    <col0>    C, Corsair Base, Vargr</col0>
  </Catalog>
 
"    "D", "Naval Depot", "Any","
  <Catalog>
    <col0>    D, Naval Depot, Any</col0>
  </Catalog>
 
"    "K", "Naval Base", "Any","
  <Catalog>
    <col0>    K, Naval Base, Any</col0>
  </Catalog>
 
"    "M", "Military Base", "Any","
  <Catalog>
    <col0>    M, Military Base, Any</col0>
  </Catalog>
 
"    "N", "Naval Base", "Imperial","
  <Catalog>
    <col0>    N, Naval Base, Imperial</col0>
  </Catalog>
 
"    "R", "Clan Base", "Aslan","
  <Catalog>
    <col0>    R, Clan Base, Aslan</col0>
  </Catalog>
 
"    "S", "Scout Base", "Imperial","
  <Catalog>
    <col0>    S, Scout Base, Imperial</col0>
  </Catalog>
 
"    "T", "Tlaukhu Base", "Aslan","
  <Catalog>
    <col0>    T, Tlaukhu Base, Aslan</col0>
  </Catalog>
 
"    "V", "Exploration Base", "Any","
  <Catalog>
    <col0>    V, Exploration Base, Any</col0>
  </Catalog>
 
"    "W", "Scout Way Station", "Imperial","
  <Catalog>
    <col0>    W, Scout Way Station, Imperial</col0>
  </Catalog>
 
"    "X", "Relay Station", "Zhodani""
  <Catalog>
    <col0>    X, Relay Station, Zhodani</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Zones">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Zones></col0>
  </Catalog>
 
"  public static String[] Zones = {"
  <Catalog>
    <col0>  public static String[] Zones = {</col0>
  </Catalog>
 
"    "2","
  <Catalog>
    <col0>    2</col0>
  </Catalog>
 
"    "Code", "Description","
  <Catalog>
    <col0>    Code, Description</col0>
  </Catalog>
 
"    "R", "Red - Interdicted. Dangerous.  Prohibited.  Imperial.","
  <Catalog>
    <col0>    R, Red - Interdicted. Dangerous.  Prohibited.  Imperial.</col0>
  </Catalog>
 
"    "A", "Amber - Potentially dangerous.  Caution advised.  Imperial.","
  <Catalog>
    <col0>    A, Amber - Potentially dangerous.  Caution advised.  Imperial.</col0>
  </Catalog>
 
"    "-", "Green - Unrestricted.  Imperial.","
  <Catalog>
    <col0>    -, Green - Unrestricted.  Imperial.</col0>
  </Catalog>
 
"    "G", "Green - Unrestricted.  Imperial.","
  <Catalog>
    <col0>    G, Green - Unrestricted.  Imperial.</col0>
  </Catalog>
 
"    "B", "Blue - Technologically Elevated Dicatorship.  TNE (circa 1202).","
  <Catalog>
    <col0>    B, Blue - Technologically Elevated Dicatorship.  TNE (circa 1202).</col0>
  </Catalog>
 
"    "F", "Forbidden - Access prohibited.  Zhodani.","
  <Catalog>
    <col0>    F, Forbidden - Access prohibited.  Zhodani.</col0>
  </Catalog>
 
"    "U", "Unabsorbed - Access restricted.  Zhodani.""
  <Catalog>
    <col0>    U, Unabsorbed - Access restricted.  Zhodani.</col0>
  </Catalog>
 
"  };"
  <Catalog>
    <col0>  };</col0>
  </Catalog>
 
"//</editor-fold>"
  <Catalog>
    <col0>//</editor-fold></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="String[] Alleg">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=String[] Alleg></col0>
  </Catalog>
 
"  public static String[] Alleg = {"
  <Catalog>
    <col0>  public static String[] Alleg = {</col0>
  </Catalog>
 
"    "2","
  <Catalog>
    <col0>    2</col0>
  </Catalog>
 
"    "Code", "Description","
  <Catalog>
    <col0>    Code, Description</col0>
  </Catalog>
 
"    "AnTC", "Anubian Trade Coalition","
  <Catalog>
    <col0>    AnTC, Anubian Trade Coalition</col0>
  </Catalog>
 
"    "AsIf", "Iyeaao'fte (Tlaukhu client state)","
  <Catalog>
    <col0>    AsIf, Iyeaao'fte (Tlaukhu client state)</col0>
  </Catalog>
 
"    "AsMw", "Aslan Hierate, single multiple-world clan dominates","
  <Catalog>
    <col0>    AsMw, Aslan Hierate, single multiple-world clan dominates</col0>
  </Catalog>
 
"    "AsOf", "Oleaiy'fte (Tlaukhu client state)","
  <Catalog>
    <col0>    AsOf, Oleaiy'fte (Tlaukhu client state)</col0>
  </Catalog>
 
"    "AsSc", "Aslan Hierate, multiple clans split control","
  <Catalog>
    <col0>    AsSc, Aslan Hierate, multiple clans split control</col0>
  </Catalog>
 
"    "AsSF", "Aslan Hierate, small facility (temporary)","
  <Catalog>
    <col0>    AsSF, Aslan Hierate, small facility (temporary)</col0>
  </Catalog>
 
"    "AsT0", "Aslan Hierate, Tlaukhu control, Yerlyaruiwo (1), Hrawoao (13), Eisohiyw (14), Ferekhearl (19)","
  <Catalog>
    <col0>    AsT0, Aslan Hierate, Tlaukhu control, Yerlyaruiwo (1), Hrawoao (13), Eisohiyw (14), Ferekhearl (19)</col0>
  </Catalog>
 
"    "AsT1", "Aslan Hierate, Tlaukhu control, Khauleairl (2), Estoieie' (16), Toaseilwi (22)","
  <Catalog>
    <col0>    AsT1, Aslan Hierate, Tlaukhu control, Khauleairl (2), Estoieie' (16), Toaseilwi (22)</col0>
  </Catalog>
 
"    "AsT2", "Aslan Hierate, Tlaukhu control, Syoisuis (3)","
  <Catalog>
    <col0>    AsT2, Aslan Hierate, Tlaukhu control, Syoisuis (3)</col0>
  </Catalog>
 
"    "AsT3", "Aslan Hierate, Tlaukhu control, Tralyeaeawi (4), Yulraleh (12), Aiheilar (25), Riyhalaei (28)","
  <Catalog>
    <col0>    AsT3, Aslan Hierate, Tlaukhu control, Tralyeaeawi (4), Yulraleh (12), Aiheilar (25), Riyhalaei (28)</col0>
  </Catalog>
 
"    "AsT4", "Aslan Hierate, Tlaukhu control, Eakhtiyho (5), Eteawyolei' (11), Fteweyeakh (23)","
  <Catalog>
    <col0>    AsT4, Aslan Hierate, Tlaukhu control, Eakhtiyho (5), Eteawyolei' (11), Fteweyeakh (23)</col0>
  </Catalog>
 
"    "AsT5", "Aslan Hierate, Tlaukhu control, Hlyueawi (6), Isoitiyro (15)","
  <Catalog>
    <col0>    AsT5, Aslan Hierate, Tlaukhu control, Hlyueawi (6), Isoitiyro (15)</col0>
  </Catalog>
 
"    "AsT6", "Aslan Hierate, Tlaukhu control, Uiktawa (7), Iykyasea (17), Faowaou (27)","
  <Catalog>
    <col0>    AsT6, Aslan Hierate, Tlaukhu control, Uiktawa (7), Iykyasea (17), Faowaou (27)</col0>
  </Catalog>
 
"    "AsT7", "Aslan Hierate, Tlaukhu control, Ikhtealyo (8), Tlerfearlyo (20), Yehtahikh (24)","
  <Catalog>
    <col0>    AsT7, Aslan Hierate, Tlaukhu control, Ikhtealyo (8), Tlerfearlyo (20), Yehtahikh (24)</col0>
  </Catalog>
 
"    "AsT8", "Aslan Hierate, Tlaukhu control, Seieakh (9), Akatoiloh (18), We'okunir (29)","
  <Catalog>
    <col0>    AsT8, Aslan Hierate, Tlaukhu control, Seieakh (9), Akatoiloh (18), We'okunir (29)</col0>
  </Catalog>
 
"    "AsT9", "Aslan Hierate, Tlaukhu control, Aokhalte (10), Sahao' (21), Ouokhoi (26)","
  <Catalog>
    <col0>    AsT9, Aslan Hierate, Tlaukhu control, Aokhalte (10), Sahao' (21), Ouokhoi (26)</col0>
  </Catalog>
 
"    "AsTv", "Aslan Hierate, Tlaukhu vassal clan dominates","
  <Catalog>
    <col0>    AsTv, Aslan Hierate, Tlaukhu vassal clan dominates</col0>
  </Catalog>
 
"    "AsTz", "Aslan Hierate, Zodia clan (Tralyeaeawi vassal)","
  <Catalog>
    <col0>    AsTz, Aslan Hierate, Zodia clan (Tralyeaeawi vassal)</col0>
  </Catalog>
 
"    "AsVc", "Aslan Hierate, vassal clan dominates","
  <Catalog>
    <col0>    AsVc, Aslan Hierate, vassal clan dominates</col0>
  </Catalog>
 
"    "AsWc", "Aslan Hierate, single one-world clan dominates","
  <Catalog>
    <col0>    AsWc, Aslan Hierate, single one-world clan dominates</col0>
  </Catalog>
 
"    "AsXX", "Aslan Hierate, unknown","
  <Catalog>
    <col0>    AsXX, Aslan Hierate, unknown</col0>
  </Catalog>
 
"    "BlSo", "Belgardian Sojurnate","
  <Catalog>
    <col0>    BlSo, Belgardian Sojurnate</col0>
  </Catalog>
 
"    "CaAs", "Carrillian Assembly","
  <Catalog>
    <col0>    CaAs, Carrillian Assembly</col0>
  </Catalog>
 
"    "CaPr", "Principality of Caledon","
  <Catalog>
    <col0>    CaPr, Principality of Caledon</col0>
  </Catalog>
 
"    "CaTe", "Carter Technocracy","
  <Catalog>
    <col0>    CaTe, Carter Technocracy</col0>
  </Catalog>
 
"    "CoLp", "Council of Leh Perash","
  <Catalog>
    <col0>    CoLp, Council of Leh Perash</col0>
  </Catalog>
 
"    "CsCa", "Client State, Principality of Caledon","
  <Catalog>
    <col0>    CsCa, Client State, Principality of Caledon</col0>
  </Catalog>
 
"    "CsIm", "Client State, Third Imperium","
  <Catalog>
    <col0>    CsIm, Client State, Third Imperium</col0>
  </Catalog>
 
"    "CsZh", "Client State, Zhodani Consulate","
  <Catalog>
    <col0>    CsZh, Client State, Zhodani Consulate</col0>
  </Catalog>
 
"    "CyUn", "Cytralin Unity","
  <Catalog>
    <col0>    CyUn, Cytralin Unity</col0>
  </Catalog>
 
"    "DaCf", "Darrian Confederation","
  <Catalog>
    <col0>    DaCf, Darrian Confederation</col0>
  </Catalog>
 
"    "DuCf", "Confederation of Duncinae","
  <Catalog>
    <col0>    DuCf, Confederation of Duncinae</col0>
  </Catalog>
 
"    "FeHe", "Federation of Heron","
  <Catalog>
    <col0>    FeHe, Federation of Heron</col0>
  </Catalog>
 
"    "FlLe", "Florian League","
  <Catalog>
    <col0>    FlLe, Florian League</col0>
  </Catalog>
 
"    "GaRp", "Gamma Republic","
  <Catalog>
    <col0>    GaRp, Gamma Republic</col0>
  </Catalog>
 
"    "GdMh", "Grand Duchy of Marlheim","
  <Catalog>
    <col0>    GdMh, Grand Duchy of Marlheim</col0>
  </Catalog>
 
"    "GdSt", "Grand Duchy of Stoner","
  <Catalog>
    <col0>    GdSt, Grand Duchy of Stoner</col0>
  </Catalog>
 
"    "GeOr", "Gerontocracy of Ormine","
  <Catalog>
    <col0>    GeOr, Gerontocracy of Ormine</col0>
  </Catalog>
 
"    "GlEm", "Glorious Empire (Aslan independent clan, outcast)","
  <Catalog>
    <col0>    GlEm, Glorious Empire (Aslan independent clan, outcast)</col0>
  </Catalog>
 
"    "GlFe", "Glimmerdrift Federation","
  <Catalog>
    <col0>    GlFe, Glimmerdrift Federation</col0>
  </Catalog>
 
"    "GnCl", "Gniivi Collective","
  <Catalog>
    <col0>    GnCl, Gniivi Collective</col0>
  </Catalog>
 
"    "ImAp", "Third Imperium, Amec Protectorate (Dagu)","
  <Catalog>
    <col0>    ImAp, Third Imperium, Amec Protectorate (Dagu)</col0>
  </Catalog>
 
"    "ImDa", "Third Imperium, Domain of Antares (Anta/Empt/Lish)","
  <Catalog>
    <col0>    ImDa, Third Imperium, Domain of Antares (Anta/Empt/Lish)</col0>
  </Catalog>
 
"    "ImDc", "Third Imperium, Domain of Sylea (Core/Delp/Forn/Mass)","
  <Catalog>
    <col0>    ImDc, Third Imperium, Domain of Sylea (Core/Delp/Forn/Mass)</col0>
  </Catalog>
 
"    "ImDd", "Third Imperium, Domain of Deneb (Dene/Reft/Spin/Troj)","
  <Catalog>
    <col0>    ImDd, Third Imperium, Domain of Deneb (Dene/Reft/Spin/Troj)</col0>
  </Catalog>
 
"    "ImDg", "Third Imperium, Domain of Gateway (Glim/Hint/Ley)","
  <Catalog>
    <col0>    ImDg, Third Imperium, Domain of Gateway (Glim/Hint/Ley)</col0>
  </Catalog>
 
"    "ImDi", "Third Imperium, Domain of Ilelish (Daib/Ilel/Reav/Verg/Zaru)","
  <Catalog>
    <col0>    ImDi, Third Imperium, Domain of Ilelish (Daib/Ilel/Reav/Verg/Zaru)</col0>
  </Catalog>
 
"    "ImDs", "Third Imperium, Domain of Sol (Alph/Dias/Magy/Olde/Solo)","
  <Catalog>
    <col0>    ImDs, Third Imperium, Domain of Sol (Alph/Dias/Magy/Olde/Solo)</col0>
  </Catalog>
 
"    "ImDv", "Third Imperium, Domain of Vland (Corr/Dagu/Gush/Reft/Vlan)","
  <Catalog>
    <col0>    ImDv, Third Imperium, Domain of Vland (Corr/Dagu/Gush/Reft/Vlan)</col0>
  </Catalog>
 
"    "ImLa", "Third Imperium, League of Antares (Anta)","
  <Catalog>
    <col0>    ImLa, Third Imperium, League of Antares (Anta)</col0>
  </Catalog>
 
"    "ImLu", "Third Imperium, Luriani Cultural Association (Ley/Forn)","
  <Catalog>
    <col0>    ImLu, Third Imperium, Luriani Cultural Association (Ley/Forn)</col0>
  </Catalog>
 
"    "ImSy", "Third Imperium, Sylean Worlds (Core)","
  <Catalog>
    <col0>    ImSy, Third Imperium, Sylean Worlds (Core)</col0>
  </Catalog>
 
"    "ImVd", "Third Imperium, Vegan Autonomous District (Solo)","
  <Catalog>
    <col0>    ImVd, Third Imperium, Vegan Autonomous District (Solo)</col0>
  </Catalog>
 
"    "IsDo", "Islaiat Dominate","
  <Catalog>
    <col0>    IsDo, Islaiat Dominate</col0>
  </Catalog>
 
"    "JuHl", "Julian Protectorate, Hegemony of Lorean","
  <Catalog>
    <col0>    JuHl, Julian Protectorate, Hegemony of Lorean</col0>
  </Catalog>
 
"    "JuPr", "Julian Protectorate, independent","
  <Catalog>
    <col0>    JuPr, Julian Protectorate, independent</col0>
  </Catalog>
 
"    "JuRu", "Julian Protectorate, Rukadukaz Republic","
  <Catalog>
    <col0>    JuRu, Julian Protectorate, Rukadukaz Republic</col0>
  </Catalog>
 
"    "KhLe", "Khuur League","
  <Catalog>
    <col0>    KhLe, Khuur League</col0>
  </Catalog>
 
"    "LnRp", "Loyal Nineworlds Republic","
  <Catalog>
    <col0>    LnRp, Loyal Nineworlds Republic</col0>
  </Catalog>
 
"    "LyCo", "Lanyard Colonies","
  <Catalog>
    <col0>    LyCo, Lanyard Colonies</col0>
  </Catalog>
 
"    "MaEm", "Maskai Empire","
  <Catalog>
    <col0>    MaEm, Maskai Empire</col0>
  </Catalog>
 
"    "NaAs", "Non-Aligned, Aslan-dominated (outside Hierate)","
  <Catalog>
    <col0>    NaAs, Non-Aligned, Aslan-dominated (outside Hierate)</col0>
  </Catalog>
 
"    "NaHu", "Non-Aligned, Human-dominated","
  <Catalog>
    <col0>    NaHu, Non-Aligned, Human-dominated</col0>
  </Catalog>
 
"    "NaVa", "Non-Aligned, Vargr-dominated","
  <Catalog>
    <col0>    NaVa, Non-Aligned, Vargr-dominated</col0>
  </Catalog>
 
"    "NaXX", "Unclaimed","
  <Catalog>
    <col0>    NaXX, Unclaimed</col0>
  </Catalog>
 
"    "OcWs", "Outcasts of the Whispering Sky","
  <Catalog>
    <col0>    OcWs, Outcasts of the Whispering Sky</col0>
  </Catalog>
 
"    "RaRa", "Ral Ranta","
  <Catalog>
    <col0>    RaRa, Ral Ranta</col0>
  </Catalog>
 
"    "SeFo", "Senlis Foederate","
  <Catalog>
    <col0>    SeFo, Senlis Foederate</col0>
  </Catalog>
 
"    "SlLg", "Shukikikar League","
  <Catalog>
    <col0>    SlLg, Shukikikar League</col0>
  </Catalog>
 
"    "SoCf", "Solomani Confederation","
  <Catalog>
    <col0>    SoCf, Solomani Confederation</col0>
  </Catalog>
 
"    "StCl", "Strend Cluster","
  <Catalog>
    <col0>    StCl, Strend Cluster</col0>
  </Catalog>
 
"    "SwCf", "Sword Worlds Confederation","
  <Catalog>
    <col0>    SwCf, Sword Worlds Confederation</col0>
  </Catalog>
 
"    "TeAr", "Tealou Arlaoh (Aslan independent clan, non-outcast)","
  <Catalog>
    <col0>    TeAr, Tealou Arlaoh (Aslan independent clan, non-outcast)</col0>
  </Catalog>
 
"    "UhHa", "Union of Harmony","
  <Catalog>
    <col0>    UhHa, Union of Harmony</col0>
  </Catalog>
 
"    "V40S", "40th Squadron","
  <Catalog>
    <col0>    V40S, 40th Squadron</col0>
  </Catalog>
 
"    "VARC", "Anti-Rukh Coalition","
  <Catalog>
    <col0>    VARC, Anti-Rukh Coalition</col0>
  </Catalog>
 
"    "VAug", "United Followers of Augurgh","
  <Catalog>
    <col0>    VAug, United Followers of Augurgh</col0>
  </Catalog>
 
"    "VCKd", "Commonality of Kedzudh","
  <Catalog>
    <col0>    VCKd, Commonality of Kedzudh</col0>
  </Catalog>
 
"    "VDzF", "Dzarrgh Federate","
  <Catalog>
    <col0>    VDzF, Dzarrgh Federate</col0>
  </Catalog>
 
"    "VPGa", "Pact of Gaerr","
  <Catalog>
    <col0>    VPGa, Pact of Gaerr</col0>
  </Catalog>
 
"    "VRuk", "Worlds of Leader Rukh","
  <Catalog>
    <col0>    VRuk, Worlds of Leader Rukh</col0>
  </Catalog>
 
"    "VSDp", "Seaknouth Dependency","
  <Catalog>
    <col0>    VSDp, Seaknouth Dependency</col0>
  </Catalog>
 
"    "VSEq", "Society of Equals","
  <Catalog>
    <col0>    VSEq, Society of Equals</col0>
  </Catalog>
 
"    "VThE", "Thoengling Empire","
  <Catalog>
    <col0>    VThE, Thoengling Empire</col0>
  </Catalog>
 
"    "VTzE", "Thirz Empire","
  <Catalog>
    <col0>    VTzE, Thirz Empire</col0>
  </Catalog>
 
"    "VUru", "Nation of Urukhu","
  <Catalog>
    <col0>    VUru, Nation of Urukhu</col0>
  </Catalog>
 
"    "XXXX", "Unknown","
  <Catalog>
    <col0>    XXXX, Unknown</col0>
  </Catalog>
 
"    "ZhCo", "Zhodani Consulate",};"
  <Catalog>
    <col0>    ZhCo, Zhodani Consulate,};</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   Parts of line"
  <Catalog>
    <col0>   Parts of line</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="Parts of line">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=Parts of line></col0>
  </Catalog>
 
"  public final int HEX = 0,"
  <Catalog>
    <col0>  public final int HEX = 0,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     NAME = 1,"
  <Catalog>
    <col0>     NAME = 1,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    NAME = 1,"
  <Catalog>
    <col0>    NAME = 1,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     UWPs = 2,"
  <Catalog>
    <col0>     UWPs = 2,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    UWPs = 2,"
  <Catalog>
    <col0>    UWPs = 2,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     TC = 3,"
  <Catalog>
    <col0>     TC = 3,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    TC = 3,"
  <Catalog>
    <col0>    TC = 3,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     IX = 4,"
  <Catalog>
    <col0>     IX = 4,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    IX = 4,"
  <Catalog>
    <col0>    IX = 4,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     EX = 5,"
  <Catalog>
    <col0>     EX = 5,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    EX = 5,"
  <Catalog>
    <col0>    EX = 5,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     CX = 6,"
  <Catalog>
    <col0>     CX = 6,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    CX = 6,"
  <Catalog>
    <col0>    CX = 6,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     Ns = 7,"
  <Catalog>
    <col0>     Ns = 7,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    Ns = 7,"
  <Catalog>
    <col0>    Ns = 7,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     Bs = 8,"
  <Catalog>
    <col0>     Bs = 8,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    Bs = 8,"
  <Catalog>
    <col0>    Bs = 8,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     Z = 9,"
  <Catalog>
    <col0>     Z = 9,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    Z = 9,"
  <Catalog>
    <col0>    Z = 9,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     PBG = 10,"
  <Catalog>
    <col0>     PBG = 10,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    PBG = 10,"
  <Catalog>
    <col0>    PBG = 10,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     W = 11,"
  <Catalog>
    <col0>     W = 11,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    W = 11,"
  <Catalog>
    <col0>    W = 11,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     A = 12,"
  <Catalog>
    <col0>     A = 12,</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    A = 12,"
  <Catalog>
    <col0>    A = 12,</col0>
  </Catalog>
 
"    /**"
  <Catalog>
    <col0>    /**</col0>
  </Catalog>
 
"     STELLAR = 13;"
  <Catalog>
    <col0>     STELLAR = 13;</col0>
  </Catalog>
 
"     */"
  <Catalog>
    <col0>     */</col0>
  </Catalog>
 
"    STELLAR = 13;"
  <Catalog>
    <col0>    STELLAR = 13;</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
"  static int worlds;"
  <Catalog>
    <col0>  static int worlds;</col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static Clipboard cb;"
  <Catalog>
    <col0>  public static Clipboard cb;</col0>
  </Catalog>
 
"  //</editor-fold>"
  <Catalog>
    <col0>  //</editor-fold></col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param args strings to start"
  <Catalog>
    <col0>   @param args strings to start</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  @Annotation4T5(note = "Main entry", ref = "main(String[] args)", line = 167)"
  <Catalog>
    <col0>  @Annotation4T5(note = Main entry, ref = main(String[] args), line = 167)</col0>
  </Catalog>
 
"  public static void main(String[] args) {"
  <Catalog>
    <col0>  public static void main(String[] args) {</col0>
  </Catalog>
 
"    jp = new Panel4T5Locator();"
  <Catalog>
    <col0>    jp = new Panel4T5Locator();</col0>
  </Catalog>
 
"    jf = new Frame4(jp);"
  <Catalog>
    <col0>    jf = new Frame4(jp);</col0>
  </Catalog>
 
"    jf.setBounds(180, 0, 620, 1000);"
  <Catalog>
    <col0>    jf.setBounds(180, 0, 620, 1000);</col0>
  </Catalog>
 
"    jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);"
  <Catalog>
    <col0>    jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   Creates new form Panel4T5View"
  <Catalog>
    <col0>   Creates new form Panel4T5View</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public Panel4T5Locator() {"
  <Catalog>
    <col0>  public Panel4T5Locator() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IFD">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IFD></col0>
  </Catalog>
 
"    {"
  <Catalog>
    <col0>    {</col0>
  </Catalog>
 
"      String s = "";"
  <Catalog>
    <col0>      String s = ;</col0>
  </Catalog>
 
"      boolean DEBUG = true;"
  <Catalog>
    <col0>      boolean DEBUG = true;</col0>
  </Catalog>
 
"      //DEBUG = false;"
  <Catalog>
    <col0>      //DEBUG = false;</col0>
  </Catalog>
 
"      if (DEBUG) { // true or false"
  <Catalog>
    <col0>      if (DEBUG) { // true or false</col0>
  </Catalog>
 
"        s += GlobalMethods.comment("=", 80) + CRLF;"
  <Catalog>
    <col0>        s = GlobalMethods.comment(=, 80)  CRLF;</col0>
  </Catalog>
 
"        s += "\t" + getClass() + "-" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>        s = \t  getClass()  -  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"          .getMethodName() + CRLF;"
  <Catalog>
    <col0>          .getMethodName()  CRLF;</col0>
  </Catalog>
 
"        JTextArea jta = new JTextArea(s, 20, 20);"
  <Catalog>
    <col0>        JTextArea jta = new JTextArea(s, 20, 20);</col0>
  </Catalog>
 
"        JScrollPane jsp = new JScrollPane(jta);"
  <Catalog>
    <col0>        JScrollPane jsp = new JScrollPane(jta);</col0>
  </Catalog>
 
"        System.out.println(s);"
  <Catalog>
    <col0>        System.out.println(s);</col0>
  </Catalog>
 
"//        JOptionPane.showMessageDialog(jf, jsp);"
  <Catalog>
    <col0>//        JOptionPane.showMessageDialog(jf, jsp);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    Thread t = Thread.currentThread();"
  <Catalog>
    <col0>    Thread t = Thread.currentThread();</col0>
  </Catalog>
 
"    System.out.println("t" + " = " + t);"
  <Catalog>
    <col0>    System.out.println(t   =   t);</col0>
  </Catalog>
 
"    t5Check();"
  <Catalog>
    <col0>    t5Check();</col0>
  </Catalog>
 
"    initComponents();"
  <Catalog>
    <col0>    initComponents();</col0>
  </Catalog>
 
"    cbm = jcb4All.getModel();"
  <Catalog>
    <col0>    cbm = jcb4All.getModel();</col0>
  </Catalog>
 
"    addSectors();"
  <Catalog>
    <col0>    addSectors();</col0>
  </Catalog>
 
"    addSubsectors();"
  <Catalog>
    <col0>    addSubsectors();</col0>
  </Catalog>
 
"    addSecListeners();"
  <Catalog>
    <col0>    addSecListeners();</col0>
  </Catalog>
 
"    addSubListeners();"
  <Catalog>
    <col0>    addSubListeners();</col0>
  </Catalog>
 
"    addSysListeners();"
  <Catalog>
    <col0>    addSysListeners();</col0>
  </Catalog>
 
"    setSecTips();"
  <Catalog>
    <col0>    setSecTips();</col0>
  </Catalog>
 
"    setSubTips();"
  <Catalog>
    <col0>    setSubTips();</col0>
  </Catalog>
 
"    setLocation("Efate");"
  <Catalog>
    <col0>    setLocation(Efate);</col0>
  </Catalog>
 
"    calcCost();"
  <Catalog>
    <col0>    calcCost();</col0>
  </Catalog>
 
"    js4DistStateChanged(ce);"
  <Catalog>
    <col0>    js4DistStateChanged(ce);</col0>
  </Catalog>
 
"    jcb4All.setSelectedItem("jta4Orb");"
  <Catalog>
    <col0>    jcb4All.setSelectedItem(jta4Orb);</col0>
  </Catalog>
 
"    ConsoleWindow.setLocation(800, 150);"
  <Catalog>
    <col0>    ConsoleWindow.setLocation(800, 150);</col0>
  </Catalog>
 
"    ConsoleWindow.setSize(200, 850);"
  <Catalog>
    <col0>    ConsoleWindow.setSize(200, 850);</col0>
  </Catalog>
 
"    ConsoleWindow.getOutput();"
  <Catalog>
    <col0>    ConsoleWindow.getOutput();</col0>
  </Catalog>
 
"    cb = Toolkit.getDefaultToolkit().getSystemClipboard();"
  <Catalog>
    <col0>    cb = Toolkit.getDefaultToolkit().getSystemClipboard();</col0>
  </Catalog>
 
"    running = true;"
  <Catalog>
    <col0>    running = true;</col0>
  </Catalog>
 
"    jcb4Options.setSelectedItem("Counter");"
  <Catalog>
    <col0>    jcb4Options.setSelectedItem(Counter);</col0>
  </Catalog>
 
"    jcb4Options.setSelectedItem("Troops");"
  <Catalog>
    <col0>    jcb4Options.setSelectedItem(Troops);</col0>
  </Catalog>
 
"    jcb4Options.setSelectedItem("Squadrons");"
  <Catalog>
    <col0>    jcb4Options.setSelectedItem(Squadrons);</col0>
  </Catalog>
 
"    jcb4Options.setSelectedItem("Scripting");"
  <Catalog>
    <col0>    jcb4Options.setSelectedItem(Scripting);</col0>
  </Catalog>
 
"//    Panel4T5CounterMaker.jf.setVisible(false);"
  <Catalog>
    <col0>//    Panel4T5CounterMaker.jf.setVisible(false);</col0>
  </Catalog>
 
"//    Panel4T5CounterMaker.il.setVisible(false);"
  <Catalog>
    <col0>//    Panel4T5CounterMaker.il.setVisible(false);</col0>
  </Catalog>
 
"//    Panel4T5Troop.jf.setVisible(false);"
  <Catalog>
    <col0>//    Panel4T5Troop.jf.setVisible(false);</col0>
  </Catalog>
 
"//    Panel4T5Squadron.jf.setVisible(false);"
  <Catalog>
    <col0>//    Panel4T5Squadron.jf.setVisible(false);</col0>
  </Catalog>
 
"//    Panel4T5Scripting.jf.setVisible(false);"
  <Catalog>
    <col0>//    Panel4T5Scripting.jf.setVisible(false);</col0>
  </Catalog>
 
"    linkpictext.Panel4LPT.main(args);"
  <Catalog>
    <col0>    linkpictext.Panel4LPT.main(args);</col0>
  </Catalog>
 
"//    jcb4Options.setSelectedItem("XML");"
  <Catalog>
    <col0>//    jcb4Options.setSelectedItem(XML);</col0>
  </Catalog>
 
"    jcb4Options.setSelectedItem("LPT");"
  <Catalog>
    <col0>    jcb4Options.setSelectedItem(LPT);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param g Graphics"
  <Catalog>
    <col0>   @param g Graphics</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  @Override"
  <Catalog>
    <col0>  @Override</col0>
  </Catalog>
 
"  public void paintComponent(Graphics g) {"
  <Catalog>
    <col0>  public void paintComponent(Graphics g) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//</editor-fold>"
  <Catalog>
    <col0>//</editor-fold></col0>
  </Catalog>
 
"    super.paintComponent(g);"
  <Catalog>
    <col0>    super.paintComponent(g);</col0>
  </Catalog>
 
"    createSubPic();"
  <Catalog>
    <col0>    createSubPic();</col0>
  </Catalog>
 
"//    createWorldPic();"
  <Catalog>
    <col0>//    createWorldPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public static final boolean isRunning() {"
  <Catalog>
    <col0>  public static final boolean isRunning() {</col0>
  </Catalog>
 
"    if (running) {"
  <Catalog>
    <col0>    if (running) {</col0>
  </Catalog>
 
"      MultiText.sec = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>      MultiText.sec = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"      MultiText.sub = jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>      MultiText.sub = jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"      MultiText.sys = jcb4Sys.getSelectedItem().toString();"
  <Catalog>
    <col0>      MultiText.sys = jcb4Sys.getSelectedItem().toString();</col0>
  </Catalog>
 
"      return true;"
  <Catalog>
    <col0>      return true;</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      return false;"
  <Catalog>
    <col0>      return false;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
"  //private JTextArea jta4Sub;"
  <Catalog>
    <col0>  //private JTextArea jta4Sub;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param hex location"
  <Catalog>
    <col0>   @param hex location</col0>
  </Catalog>
 
"   @return bit number set to true from xy location"
  <Catalog>
    <col0>   @return bit number set to true from xy location</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public int getBit(String hex) {"
  <Catalog>
    <col0>  public int getBit(String hex) {</col0>
  </Catalog>
 
"    int i = 0;"
  <Catalog>
    <col0>    int i = 0;</col0>
  </Catalog>
 
"    String[] partso = new String[2];"
  <Catalog>
    <col0>    String[] partso = new String[2];</col0>
  </Catalog>
 
"    partso[0] = hex.substring(0, 2);"
  <Catalog>
    <col0>    partso[0] = hex.substring(0, 2);</col0>
  </Catalog>
 
"    partso[1] = hex.substring(2);"
  <Catalog>
    <col0>    partso[1] = hex.substring(2);</col0>
  </Catalog>
 
"    int x;"
  <Catalog>
    <col0>    int x;</col0>
  </Catalog>
 
"    int y;"
  <Catalog>
    <col0>    int y;</col0>
  </Catalog>
 
"    x = ((Integer.parseInt(partso[0]) - 1) * 40);"
  <Catalog>
    <col0>    x = ((Integer.parseInt(partso[0]) - 1) * 40);</col0>
  </Catalog>
 
"    y = ((Integer.parseInt(partso[1]) - 1) % 40);"
  <Catalog>
    <col0>    y = ((Integer.parseInt(partso[1]) - 1) % 40);</col0>
  </Catalog>
 
"    return x + y;"
  <Catalog>
    <col0>    return x  y;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param bit part of BitSet"
  <Catalog>
    <col0>   @param bit part of BitSet</col0>
  </Catalog>
 
"   @return xy location from bit number"
  <Catalog>
    <col0>   @return xy location from bit number</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public String getHex(int bit) {"
  <Catalog>
    <col0>  public String getHex(int bit) {</col0>
  </Catalog>
 
"    String y = "" + (1 + (bit % 40));"
  <Catalog>
    <col0>    String y =   (1  (bit % 40));</col0>
  </Catalog>
 
"    String x = "" + (1 + (bit / 40));"
  <Catalog>
    <col0>    String x =   (1  (bit / 40));</col0>
  </Catalog>
 
"    if (x.length() == 1) {"
  <Catalog>
    <col0>    if (x.length() == 1) {</col0>
  </Catalog>
 
"      x = "0" + x;"
  <Catalog>
    <col0>      x = 0  x;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (y.length() == 1) {"
  <Catalog>
    <col0>    if (y.length() == 1) {</col0>
  </Catalog>
 
"      y = "0" + y;"
  <Catalog>
    <col0>      y = 0  y;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return x + y;"
  <Catalog>
    <col0>    return x  y;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param hex to convert"
  <Catalog>
    <col0>   @param hex to convert</col0>
  </Catalog>
 
"   @return get x and y coords from string"
  <Catalog>
    <col0>   @return get x and y coords from string</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public int[] getXY(String hex) {"
  <Catalog>
    <col0>  public int[] getXY(String hex) {</col0>
  </Catalog>
 
"    int[] xy = new int[2];"
  <Catalog>
    <col0>    int[] xy = new int[2];</col0>
  </Catalog>
 
"    String X = hex.substring(0, 2);"
  <Catalog>
    <col0>    String X = hex.substring(0, 2);</col0>
  </Catalog>
 
"    String Y = hex.substring(2);"
  <Catalog>
    <col0>    String Y = hex.substring(2);</col0>
  </Catalog>
 
"    xy[0] = Integer.parseInt(X);"
  <Catalog>
    <col0>    xy[0] = Integer.parseInt(X);</col0>
  </Catalog>
 
"    xy[1] = Integer.parseInt(Y);"
  <Catalog>
    <col0>    xy[1] = Integer.parseInt(Y);</col0>
  </Catalog>
 
"    return xy;"
  <Catalog>
    <col0>    return xy;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param bit to convert to Hex"
  <Catalog>
    <col0>   @param bit to convert to Hex</col0>
  </Catalog>
 
"   @return hex location from selected bit"
  <Catalog>
    <col0>   @return hex location from selected bit</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public String getHexNum(int bit) {"
  <Catalog>
    <col0>  public String getHexNum(int bit) {</col0>
  </Catalog>
 
"    String res = getHex(bit);"
  <Catalog>
    <col0>    String res = getHex(bit);</col0>
  </Catalog>
 
"    return res;"
  <Catalog>
    <col0>    return res;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @return the hdpath"
  <Catalog>
    <col0>   @return the hdpath</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String getHdpath() {"
  <Catalog>
    <col0>  public static String getHdpath() {</col0>
  </Catalog>
 
"    return hdpath;"
  <Catalog>
    <col0>    return hdpath;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param aHdpath the hdpath to set"
  <Catalog>
    <col0>   @param aHdpath the hdpath to set</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static void setHdpath(String aHdpath) {"
  <Catalog>
    <col0>  public static void setHdpath(String aHdpath) {</col0>
  </Catalog>
 
"    hdpath = aHdpath;"
  <Catalog>
    <col0>    hdpath = aHdpath;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  @Override"
  <Catalog>
    <col0>  @Override</col0>
  </Catalog>
 
"  public String toString() {"
  <Catalog>
    <col0>  public String toString() {</col0>
  </Catalog>
 
"    return new ObjectAnalyzer().toString(this);"
  <Catalog>
    <col0>    return new ObjectAnalyzer().toString(this);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @return the jta"
  <Catalog>
    <col0>   @return the jta</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public JTextArea getJta() {"
  <Catalog>
    <col0>  public JTextArea getJta() {</col0>
  </Catalog>
 
"    return jta;"
  <Catalog>
    <col0>    return jta;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param jta the jta to set"
  <Catalog>
    <col0>   @param jta the jta to set</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public void setJta(JTextArea jta) {"
  <Catalog>
    <col0>  public void setJta(JTextArea jta) {</col0>
  </Catalog>
 
"    this.jta = jta;"
  <Catalog>
    <col0>    this.jta = jta;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @return the liness"
  <Catalog>
    <col0>   @return the liness</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public String[] getLiness() {"
  <Catalog>
    <col0>  public String[] getLiness() {</col0>
  </Catalog>
 
"    return liness;"
  <Catalog>
    <col0>    return liness;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param liness the liness to set"
  <Catalog>
    <col0>   @param liness the liness to set</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public void setLiness(String[] liness) {"
  <Catalog>
    <col0>  public void setLiness(String[] liness) {</col0>
  </Catalog>
 
"    this.liness = liness;"
  <Catalog>
    <col0>    this.liness = liness;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @return path of system"
  <Catalog>
    <col0>   @return path of system</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String getSysPath() {"
  <Catalog>
    <col0>  public static String getSysPath() {</col0>
  </Catalog>
 
"    String str = getSubPath() + FS + jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    String str = getSubPath()  FS  jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    return str;"
  <Catalog>
    <col0>    return str;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   saveSystemPic"
  <Catalog>
    <col0>   saveSystemPic</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public void saveSystemPic() {"
  <Catalog>
    <col0>  public void saveSystemPic() {</col0>
  </Catalog>
 
"    File f = new File(Panel4T5Locator.getWorldPath().substring(0,"
  <Catalog>
    <col0>    File f = new File(Panel4T5Locator.getWorldPath().substring(0,</col0>
  </Catalog>
 
"      Panel4T5Locator.getWorldPath().lastIndexOf(FS) + 5) + "-System.gif");"
  <Catalog>
    <col0>      Panel4T5Locator.getWorldPath().lastIndexOf(FS)  5)  -System.gif);</col0>
  </Catalog>
 
"    BufferedImage bi = new BufferedImage(200, 200, BufferedImage.TYPE_INT_ARGB);"
  <Catalog>
    <col0>    BufferedImage bi = new BufferedImage(200, 200, BufferedImage.TYPE_INT_ARGB);</col0>
  </Catalog>
 
"    Graphics g = bi.createGraphics();"
  <Catalog>
    <col0>    Graphics g = bi.createGraphics();</col0>
  </Catalog>
 
"    String sp = "" + Panel4T5Locator.UWP.substring(0, 1);"
  <Catalog>
    <col0>    String sp =   Panel4T5Locator.UWP.substring(0, 1);</col0>
  </Catalog>
 
"    String base = Panel4T5Locator.data[8].substring(4);"
  <Catalog>
    <col0>    String base = Panel4T5Locator.data[8].substring(4);</col0>
  </Catalog>
 
"    String tl = "" + Panel4T5Locator.UWP.substring(8);"
  <Catalog>
    <col0>    String tl =   Panel4T5Locator.UWP.substring(8);</col0>
  </Catalog>
 
"    String sdbs = Panel4T5Locator.sdbs1.getText();"
  <Catalog>
    <col0>    String sdbs = Panel4T5Locator.sdbs1.getText();</col0>
  </Catalog>
 
"    String h20 = Panel4T5Locator.UWP.substring(3, 4);"
  <Catalog>
    <col0>    String h20 = Panel4T5Locator.UWP.substring(3, 4);</col0>
  </Catalog>
 
"    String def = Panel4T5Locator.defbats.getText();"
  <Catalog>
    <col0>    String def = Panel4T5Locator.defbats.getText();</col0>
  </Catalog>
 
"    String rons = Panel4T5Locator.squadrons.getText();"
  <Catalog>
    <col0>    String rons = Panel4T5Locator.squadrons.getText();</col0>
  </Catalog>
 
"    String troops = Panel4T5Locator.troopunits.getText();"
  <Catalog>
    <col0>    String troops = Panel4T5Locator.troopunits.getText();</col0>
  </Catalog>
 
"    String namen = Panel4T5Locator.jcb4Sys.getSelectedItem().toString();"
  <Catalog>
    <col0>    String namen = Panel4T5Locator.jcb4Sys.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String zone = Panel4T5Locator.data[9].substring(Panel4T5Locator.data[9]"
  <Catalog>
    <col0>    String zone = Panel4T5Locator.data[9].substring(Panel4T5Locator.data[9]</col0>
  </Catalog>
 
"      .length() - 1);"
  <Catalog>
    <col0>      .length() - 1);</col0>
  </Catalog>
 
"    switch (zone.toLowerCase()) {"
  <Catalog>
    <col0>    switch (zone.toLowerCase()) {</col0>
  </Catalog>
 
"      case "r": {"
  <Catalog>
    <col0>      case r: {</col0>
  </Catalog>
 
"        g.setColor(Color.red);"
  <Catalog>
    <col0>        g.setColor(Color.red);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "a": {"
  <Catalog>
    <col0>      case a: {</col0>
  </Catalog>
 
"        g.setColor(Color.orange);"
  <Catalog>
    <col0>        g.setColor(Color.orange);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "g":"
  <Catalog>
    <col0>      case g:</col0>
  </Catalog>
 
"      case "-":"
  <Catalog>
    <col0>      case -:</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        g.setColor(Color.green);"
  <Catalog>
    <col0>        g.setColor(Color.green);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    g.fillRect(0, 0, 200, 200);"
  <Catalog>
    <col0>    g.fillRect(0, 0, 200, 200);</col0>
  </Catalog>
 
"    atmo = "" + Panel4T5Locator.UWP.substring(2, 3);"
  <Catalog>
    <col0>    atmo =   Panel4T5Locator.UWP.substring(2, 3);</col0>
  </Catalog>
 
"    switch (atmo.toLowerCase()) {"
  <Catalog>
    <col0>    switch (atmo.toLowerCase()) {</col0>
  </Catalog>
 
"      case "5":"
  <Catalog>
    <col0>      case 5:</col0>
  </Catalog>
 
"      case "6":"
  <Catalog>
    <col0>      case 6:</col0>
  </Catalog>
 
"      case "8":"
  <Catalog>
    <col0>      case 8:</col0>
  </Catalog>
 
"      case "normal": {"
  <Catalog>
    <col0>      case normal: {</col0>
  </Catalog>
 
"        g.setColor(Color.cyan);"
  <Catalog>
    <col0>        g.setColor(Color.cyan);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "0":"
  <Catalog>
    <col0>      case 0:</col0>
  </Catalog>
 
"      case "1":"
  <Catalog>
    <col0>      case 1:</col0>
  </Catalog>
 
"      case "vaccuum": {"
  <Catalog>
    <col0>      case vaccuum: {</col0>
  </Catalog>
 
"        g.setColor(Color.black);"
  <Catalog>
    <col0>        g.setColor(Color.black);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "tainted":"
  <Catalog>
    <col0>      case tainted:</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        g.setColor(Color.lightGray);"
  <Catalog>
    <col0>        g.setColor(Color.lightGray);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    g.fillRect(25, 25, 150, 150);"
  <Catalog>
    <col0>    g.fillRect(25, 25, 150, 150);</col0>
  </Catalog>
 
"    int w = bi.getWidth();"
  <Catalog>
    <col0>    int w = bi.getWidth();</col0>
  </Catalog>
 
"    int h = bi.getHeight();"
  <Catalog>
    <col0>    int h = bi.getHeight();</col0>
  </Catalog>
 
"    g.fillRect(w / 10, h / 10, (int) (w * 0.8), (int) (h * 0.8));"
  <Catalog>
    <col0>    g.fillRect(w / 10, h / 10, (int) (w * 0.8), (int) (h * 0.8));</col0>
  </Catalog>
 
"    int s = GlobalMethods.fromHex(getsize());"
  <Catalog>
    <col0>    int s = GlobalMethods.fromHex(getsize());</col0>
  </Catalog>
 
"    if (s > 10) {"
  <Catalog>
    <col0>    if (s > 10) {</col0>
  </Catalog>
 
"      s = 10;"
  <Catalog>
    <col0>      s = 10;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (s == 0) {"
  <Catalog>
    <col0>    if (s == 0) {</col0>
  </Catalog>
 
"      g.setColor(Color.gray);"
  <Catalog>
    <col0>      g.setColor(Color.gray);</col0>
  </Catalog>
 
"      g.drawOval(w / 4, w / 4, (int) (w * 0.5), (int) (w * 0.5));"
  <Catalog>
    <col0>      g.drawOval(w / 4, w / 4, (int) (w * 0.5), (int) (w * 0.5));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int c = w / 2;"
  <Catalog>
    <col0>    int c = w / 2;</col0>
  </Catalog>
 
"    int d = (int) ((w * 0.8));"
  <Catalog>
    <col0>    int d = (int) ((w * 0.8));</col0>
  </Catalog>
 
"    int dm = d * s / 10;"
  <Catalog>
    <col0>    int dm = d * s / 10;</col0>
  </Catalog>
 
"    g.setColor(Color.green);"
  <Catalog>
    <col0>    g.setColor(Color.green);</col0>
  </Catalog>
 
"    g.fillOval(c - (dm / 2), c - (dm / 2), dm, dm);"
  <Catalog>
    <col0>    g.fillOval(c - (dm / 2), c - (dm / 2), dm, dm);</col0>
  </Catalog>
 
"    int hy = GlobalMethods.fromHex(gethydro());"
  <Catalog>
    <col0>    int hy = GlobalMethods.fromHex(gethydro());</col0>
  </Catalog>
 
"    int hm = hy * dm / 10;"
  <Catalog>
    <col0>    int hm = hy * dm / 10;</col0>
  </Catalog>
 
"    g.setColor(Color.blue);"
  <Catalog>
    <col0>    g.setColor(Color.blue);</col0>
  </Catalog>
 
"    g.fillOval(c - (hm / 2), c - (hm / 2), hm, hm);"
  <Catalog>
    <col0>    g.fillOval(c - (hm / 2), c - (hm / 2), hm, hm);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    if (atmo.toLowerCase().equals("0") | atmo.toLowerCase().equals("1")) {"
  <Catalog>
    <col0>    if (atmo.toLowerCase().equals(0) | atmo.toLowerCase().equals(1)) {</col0>
  </Catalog>
 
"      g.setColor(Color.white);"
  <Catalog>
    <col0>      g.setColor(Color.white);</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      g.setColor(Color.black);"
  <Catalog>
    <col0>      g.setColor(Color.black);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    g.drawString("SP", 35, 40);"
  <Catalog>
    <col0>    g.drawString(SP, 35, 40);</col0>
  </Catalog>
 
"    g.drawString("Base", 85, 40);"
  <Catalog>
    <col0>    g.drawString(Base, 85, 40);</col0>
  </Catalog>
 
"    g.drawString("TL", 140, 40);"
  <Catalog>
    <col0>    g.drawString(TL, 140, 40);</col0>
  </Catalog>
 
"    g.drawString(sp, 35, 55);"
  <Catalog>
    <col0>    g.drawString(sp, 35, 55);</col0>
  </Catalog>
 
"    g.drawString(base, 85, 55);"
  <Catalog>
    <col0>    g.drawString(base, 85, 55);</col0>
  </Catalog>
 
"    g.drawString(tl, 140, 55);"
  <Catalog>
    <col0>    g.drawString(tl, 140, 55);</col0>
  </Catalog>
 
"    g.drawString("SDBs", 35, 80);"
  <Catalog>
    <col0>    g.drawString(SDBs, 35, 80);</col0>
  </Catalog>
 
"    g.drawString("HYD", 85, 80);"
  <Catalog>
    <col0>    g.drawString(HYD, 85, 80);</col0>
  </Catalog>
 
"    g.drawString("DEF CF", 130, 80);"
  <Catalog>
    <col0>    g.drawString(DEF CF, 130, 80);</col0>
  </Catalog>
 
"    g.drawString(sdbs, 35, 95);"
  <Catalog>
    <col0>    g.drawString(sdbs, 35, 95);</col0>
  </Catalog>
 
"    g.drawString(h20 + "0%", 85, 95);"
  <Catalog>
    <col0>    g.drawString(h20  0%, 85, 95);</col0>
  </Catalog>
 
"    g.drawString(def, 130, 95);"
  <Catalog>
    <col0>    g.drawString(def, 130, 95);</col0>
  </Catalog>
 
"    g.drawString("Max Rons", 35, 120);"
  <Catalog>
    <col0>    g.drawString(Max Rons, 35, 120);</col0>
  </Catalog>
 
"    g.drawString("Troops", 130, 120);"
  <Catalog>
    <col0>    g.drawString(Troops, 130, 120);</col0>
  </Catalog>
 
"    g.drawString(rons, 35, 135);"
  <Catalog>
    <col0>    g.drawString(rons, 35, 135);</col0>
  </Catalog>
 
"    g.drawString(troops, 130, 135);"
  <Catalog>
    <col0>    g.drawString(troops, 130, 135);</col0>
  </Catalog>
 
"    g.drawString(namen, 65, 160);"
  <Catalog>
    <col0>    g.drawString(namen, 65, 160);</col0>
  </Catalog>
 
"    g.drawString(UWP, 65, 180);"
  <Catalog>
    <col0>    g.drawString(UWP, 65, 180);</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex1) {"
  <Catalog>
    <col0>    } catch (IOException ex1) {</col0>
  </Catalog>
 
"//      System.out.println("6315" + " = " + ex1);"
  <Catalog>
    <col0>//      System.out.println(6315   =   ex1);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @return string from clipboard"
  <Catalog>
    <col0>   @return string from clipboard</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String paste() {"
  <Catalog>
    <col0>  public static String paste() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println(cb.getContents(null));"
  <Catalog>
    <col0>      System.out.println(cb.getContents(null));</col0>
  </Catalog>
 
"      System.out.println(cb.getAvailableDataFlavors());"
  <Catalog>
    <col0>      System.out.println(cb.getAvailableDataFlavors());</col0>
  </Catalog>
 
"//      System.out.println(cb.getData(DataFlavor.getTextPlainUnicodeFlavor()));"
  <Catalog>
    <col0>//      System.out.println(cb.getData(DataFlavor.getTextPlainUnicodeFlavor()));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    return cb.getContents("").toString();"
  <Catalog>
    <col0>    return cb.getContents().toString();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param s string in Panel4T5Locator jcombobox"
  <Catalog>
    <col0>   @param s string in Panel4T5Locator jcombobox</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static void createCounters(String s) {"
  <Catalog>
    <col0>  public static void createCounters(String s) {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createCounter(s);"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createCounter(s);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param star star in system"
  <Catalog>
    <col0>   @param star star in system</col0>
  </Catalog>
 
"   @return text details of star"
  <Catalog>
    <col0>   @return text details of star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String getStarDetail(String star) {"
  <Catalog>
    <col0>  public static String getStarDetail(String star) {</col0>
  </Catalog>
 
"    String txt = "";"
  <Catalog>
    <col0>    String txt = ;</col0>
  </Catalog>
 
"    if (!star.contains("BD")) {"
  <Catalog>
    <col0>    if (!star.contains(BD)) {</col0>
  </Catalog>
 
"      String type = null;"
  <Catalog>
    <col0>      String type = null;</col0>
  </Catalog>
 
"      int dec = 0;"
  <Catalog>
    <col0>      int dec = 0;</col0>
  </Catalog>
 
"      String size = null;"
  <Catalog>
    <col0>      String size = null;</col0>
  </Catalog>
 
"      type = star.substring(0, 1);"
  <Catalog>
    <col0>      type = star.substring(0, 1);</col0>
  </Catalog>
 
"      dec = Integer.parseInt(star.substring(1, 2));"
  <Catalog>
    <col0>      dec = Integer.parseInt(star.substring(1, 2));</col0>
  </Catalog>
 
"      size = star.substring(3);"
  <Catalog>
    <col0>      size = star.substring(3);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    txt += getStarData(star);"
  <Catalog>
    <col0>    txt = getStarData(star);</col0>
  </Catalog>
 
"    int d10Limit = getD10Limit(star);"
  <Catalog>
    <col0>    int d10Limit = getD10Limit(star);</col0>
  </Catalog>
 
"    int d100Limit = getD100Limit(star);"
  <Catalog>
    <col0>    int d100Limit = getD100Limit(star);</col0>
  </Catalog>
 
"    int d1000Limit = getD1000Limit(star);"
  <Catalog>
    <col0>    int d1000Limit = getD1000Limit(star);</col0>
  </Catalog>
 
"    txt += "\td10Limit" + " = " + d10Limit + CRLF;"
  <Catalog>
    <col0>    txt = \td10Limit   =   d10Limit  CRLF;</col0>
  </Catalog>
 
"    txt += "\td100Limit" + " = " + d100Limit + CRLF;"
  <Catalog>
    <col0>    txt = \td100Limit   =   d100Limit  CRLF;</col0>
  </Catalog>
 
"    txt += "\td1000Limit" + " = " + d1000Limit + CRLF;"
  <Catalog>
    <col0>    txt = \td1000Limit   =   d1000Limit  CRLF;</col0>
  </Catalog>
 
"    txt += "\tMin Orbit = " + getMinOrbit(star) + CRLF;"
  <Catalog>
    <col0>    txt = \tMin Orbit =   getMinOrbit(star)  CRLF;</col0>
  </Catalog>
 
"    txt += "\tMax Orbit =  " + getMaxOrbit(0) + CRLF;"
  <Catalog>
    <col0>    txt = \tMax Orbit =    getMaxOrbit(0)  CRLF;</col0>
  </Catalog>
 
"    txt += "\tHZ =  " + GlobalMethods.getHZ(star);"
  <Catalog>
    <col0>    txt = \tHZ =    GlobalMethods.getHZ(star);</col0>
  </Catalog>
 
"    return txt;"
  <Catalog>
    <col0>    return txt;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"   @param starnum index of star"
  <Catalog>
    <col0>   @param starnum index of star</col0>
  </Catalog>
 
"   @param orb     orbit of star"
  <Catalog>
    <col0>   @param orb     orbit of star</col0>
  </Catalog>
 
"   @return maximum orbit for star"
  <Catalog>
    <col0>   @return maximum orbit for star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static int getMaxOrbit(int starnum, int orb) {"
  <Catalog>
    <col0>  public static int getMaxOrbit(int starnum, int orb) {</col0>
  </Catalog>
 
"    int r;"
  <Catalog>
    <col0>    int r;</col0>
  </Catalog>
 
"    switch (starnum) {"
  <Catalog>
    <col0>    switch (starnum) {</col0>
  </Catalog>
 
"      case 0: {"
  <Catalog>
    <col0>      case 0: {</col0>
  </Catalog>
 
"        r = orbit.length;"
  <Catalog>
    <col0>        r = orbit.length;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        r = orb - 3;"
  <Catalog>
    <col0>        r = orb - 3;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return r;"
  <Catalog>
    <col0>    return r;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param st star bc"
  <Catalog>
    <col0>   @param st star bc</col0>
  </Catalog>
 
"   @return minimum orbit for star"
  <Catalog>
    <col0>   @return minimum orbit for star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String getMinOrbit(String st) {"
  <Catalog>
    <col0>  public static String getMinOrbit(String st) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    setStarData(st);"
  <Catalog>
    <col0>    setStarData(st);</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      switch (s) {"
  <Catalog>
    <col0>      switch (s) {</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="case ("Ia")">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=case (Ia)></col0>
  </Catalog>
 
"        case ("Ia"): {"
  <Catalog>
    <col0>        case (Ia): {</col0>
  </Catalog>
 
"          //SIZE Ia"
  <Catalog>
    <col0>          //SIZE Ia</col0>
  </Catalog>
 
"          ////A0-F5 = 2"
  <Catalog>
    <col0>          ////A0-F5 = 2</col0>
  </Catalog>
 
"          if (t.equals("A")) {"
  <Catalog>
    <col0>          if (t.equals(A)) {</col0>
  </Catalog>
 
"            min = 2;"
  <Catalog>
    <col0>            min = 2;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          if (t.equals("F") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(F) & d == 0) {</col0>
  </Catalog>
 
"            min = 2;"
  <Catalog>
    <col0>            min = 2;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////G0 = 3"
  <Catalog>
    <col0>          ////G0 = 3</col0>
  </Catalog>
 
"          if (t.equals("F") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(F) & d == 5) {</col0>
  </Catalog>
 
"            min = 3;"
  <Catalog>
    <col0>            min = 3;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          if (t.equals("G") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(G) & d == 0) {</col0>
  </Catalog>
 
"            min = 3;"
  <Catalog>
    <col0>            min = 3;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////G5-K0 = 4"
  <Catalog>
    <col0>          ////G5-K0 = 4</col0>
  </Catalog>
 
"          if (t.equals("G") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(G) & d == 5) {</col0>
  </Catalog>
 
"            min = 4;"
  <Catalog>
    <col0>            min = 4;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 0) {</col0>
  </Catalog>
 
"            min = 4;"
  <Catalog>
    <col0>            min = 4;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////K5 = 5"
  <Catalog>
    <col0>          ////K5 = 5</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 5) {</col0>
  </Catalog>
 
"            min = 5;"
  <Catalog>
    <col0>            min = 5;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M0 =6"
  <Catalog>
    <col0>          ////M0 =6</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 0) {</col0>
  </Catalog>
 
"            min = 6;"
  <Catalog>
    <col0>            min = 6;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M5-M9 = 7"
  <Catalog>
    <col0>          ////M5-M9 = 7</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 5) {</col0>
  </Catalog>
 
"            min = 7;"
  <Catalog>
    <col0>            min = 7;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="case ("Ib")">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=case (Ib)></col0>
  </Catalog>
 
"        case ("Ib"): {"
  <Catalog>
    <col0>        case (Ib): {</col0>
  </Catalog>
 
"          //SIZE Ib"
  <Catalog>
    <col0>          //SIZE Ib</col0>
  </Catalog>
 
"          ////A0=0"
  <Catalog>
    <col0>          ////A0=0</col0>
  </Catalog>
 
"          if (t.equals("A") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(A) & d == 0) {</col0>
  </Catalog>
 
"            min = 0;"
  <Catalog>
    <col0>            min = 0;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////A5-G0 = 1"
  <Catalog>
    <col0>          ////A5-G0 = 1</col0>
  </Catalog>
 
"          if (t.equals("A") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(A) & d == 5) {</col0>
  </Catalog>
 
"            min = 1;"
  <Catalog>
    <col0>            min = 1;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          if (t.equals("G") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(G) & d == 0) {</col0>
  </Catalog>
 
"            min = 1;"
  <Catalog>
    <col0>            min = 1;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////G5 = 2"
  <Catalog>
    <col0>          ////G5 = 2</col0>
  </Catalog>
 
"          if (t.equals("A") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(A) & d == 5) {</col0>
  </Catalog>
 
"            min = 2;"
  <Catalog>
    <col0>            min = 2;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////K0 = 3"
  <Catalog>
    <col0>          ////K0 = 3</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 0) {</col0>
  </Catalog>
 
"            min = 3;"
  <Catalog>
    <col0>            min = 3;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////K5 = 4"
  <Catalog>
    <col0>          ////K5 = 4</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 5) {</col0>
  </Catalog>
 
"            min = 4;"
  <Catalog>
    <col0>            min = 4;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M0 = 5"
  <Catalog>
    <col0>          ////M0 = 5</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 0) {</col0>
  </Catalog>
 
"            min = 5;"
  <Catalog>
    <col0>            min = 5;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M5-M9 = 6"
  <Catalog>
    <col0>          ////M5-M9 = 6</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 5) {</col0>
  </Catalog>
 
"            min = 6;"
  <Catalog>
    <col0>            min = 6;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="case ("II")">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=case (II)></col0>
  </Catalog>
 
"        case ("II"): {"
  <Catalog>
    <col0>        case (II): {</col0>
  </Catalog>
 
"          //SIZE II"
  <Catalog>
    <col0>          //SIZE II</col0>
  </Catalog>
 
"          ////A0-F5 = 0"
  <Catalog>
    <col0>          ////A0-F5 = 0</col0>
  </Catalog>
 
"          if (t.equals("A") | t.equals("F") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(A) | t.equals(F) & d == 0) {</col0>
  </Catalog>
 
"            min = 0;"
  <Catalog>
    <col0>            min = 0;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////G0-G5 = 0"
  <Catalog>
    <col0>          ////G0-G5 = 0</col0>
  </Catalog>
 
"          if (t.equals("G")) {"
  <Catalog>
    <col0>          if (t.equals(G)) {</col0>
  </Catalog>
 
"            min = 0;"
  <Catalog>
    <col0>            min = 0;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////K0 = 1"
  <Catalog>
    <col0>          ////K0 = 1</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 0) {</col0>
  </Catalog>
 
"            min = 1;"
  <Catalog>
    <col0>            min = 1;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////K5 = 2"
  <Catalog>
    <col0>          ////K5 = 2</col0>
  </Catalog>
 
"          if (t.equals("K") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(K) & d == 5) {</col0>
  </Catalog>
 
"            min = 2;"
  <Catalog>
    <col0>            min = 2;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M0 = 3"
  <Catalog>
    <col0>          ////M0 = 3</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 0) {</col0>
  </Catalog>
 
"            min = 3;"
  <Catalog>
    <col0>            min = 3;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M5 = 4"
  <Catalog>
    <col0>          ////M5 = 4</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 5) {</col0>
  </Catalog>
 
"            min = 4;"
  <Catalog>
    <col0>            min = 4;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M9 = 5"
  <Catalog>
    <col0>          ////M9 = 5</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 9) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 9) {</col0>
  </Catalog>
 
"            min = 5;"
  <Catalog>
    <col0>            min = 5;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="case ("III")">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=case (III)></col0>
  </Catalog>
 
"        case ("III"): {"
  <Catalog>
    <col0>        case (III): {</col0>
  </Catalog>
 
"          //SIZE III"
  <Catalog>
    <col0>          //SIZE III</col0>
  </Catalog>
 
"          ////A0-K0 = 0"
  <Catalog>
    <col0>          ////A0-K0 = 0</col0>
  </Catalog>
 
"          ////K5 = 0"
  <Catalog>
    <col0>          ////K5 = 0</col0>
  </Catalog>
 
"          if (t.equals("A") | t.equals("F") | t.equals("G") | t.equals("K")) {"
  <Catalog>
    <col0>          if (t.equals(A) | t.equals(F) | t.equals(G) | t.equals(K)) {</col0>
  </Catalog>
 
"            min = 0;"
  <Catalog>
    <col0>            min = 0;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M0 = 1"
  <Catalog>
    <col0>          ////M0 = 1</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 0) {</col0>
  </Catalog>
 
"            min = 1;"
  <Catalog>
    <col0>            min = 1;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M5 = 3"
  <Catalog>
    <col0>          ////M5 = 3</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 5) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 5) {</col0>
  </Catalog>
 
"            min = 3;"
  <Catalog>
    <col0>            min = 3;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          ////M9 = 4"
  <Catalog>
    <col0>          ////M9 = 4</col0>
  </Catalog>
 
"          if (t.equals("M") & d == 0) {"
  <Catalog>
    <col0>          if (t.equals(M) & d == 0) {</col0>
  </Catalog>
 
"            min = 4;"
  <Catalog>
    <col0>            min = 4;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="default">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=default></col0>
  </Catalog>
 
"        default: {"
  <Catalog>
    <col0>        default: {</col0>
  </Catalog>
 
"          min = 0;"
  <Catalog>
    <col0>          min = 0;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("6470" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(6470   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      System.out.println("st" + " = " + st);"
  <Catalog>
    <col0>      System.out.println(st   =   st);</col0>
  </Catalog>
 
"      System.out.println("t" + " = " + t);"
  <Catalog>
    <col0>      System.out.println(t   =   t);</col0>
  </Catalog>
 
"      System.out.println("d" + " = " + d);"
  <Catalog>
    <col0>      System.out.println(d   =   d);</col0>
  </Catalog>
 
"      System.out.println("s" + " = " + s);"
  <Catalog>
    <col0>      System.out.println(s   =   s);</col0>
  </Catalog>
 
"      System.out.println("min" + " = " + min);"
  <Catalog>
    <col0>      System.out.println(min   =   min);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    return "" + min;"
  <Catalog>
    <col0>    return   min;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param i index of star"
  <Catalog>
    <col0>   @param i index of star</col0>
  </Catalog>
 
"   @return minimum orbit for star"
  <Catalog>
    <col0>   @return minimum orbit for star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static String getMinOrbit(int i) {"
  <Catalog>
    <col0>  public static String getMinOrbit(int i) {</col0>
  </Catalog>
 
"    return getMinOrbit(test.OrbitDetail.stardata[i]);"
  <Catalog>
    <col0>    return getMinOrbit(test.OrbitDetail.stardata[i]);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //////////////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>  //////////////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"  static String getSpaceInfo(String string) {"
  <Catalog>
    <col0>  static String getSpaceInfo(String string) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("string" + " = " + string);"
  <Catalog>
    <col0>      System.out.println(string   =   string);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    bits = string.split(" ");"
  <Catalog>
    <col0>    bits = string.split( );</col0>
  </Catalog>
 
"    len = new int[bits.length];"
  <Catalog>
    <col0>    len = new int[bits.length];</col0>
  </Catalog>
 
"    startuwp = 0;"
  <Catalog>
    <col0>    startuwp = 0;</col0>
  </Catalog>
 
"    for (int i = 0; i < bits.length; i++) {"
  <Catalog>
    <col0>    for (int i = 0; i < bits.length; i) {</col0>
  </Catalog>
 
"      len[i] = bits[i].length();"
  <Catalog>
    <col0>      len[i] = bits[i].length();</col0>
  </Catalog>
 
"      end = startuwp + bits[i].length();"
  <Catalog>
    <col0>      end = startuwp  bits[i].length();</col0>
  </Catalog>
 
"      startuwp += bits[i].length() + 1;"
  <Catalog>
    <col0>      startuwp = bits[i].length()  1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return string;"
  <Catalog>
    <col0>    return string;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getStarData(String star) {"
  <Catalog>
    <col0>  static String getStarData(String star) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("star" + " = " + star);"
  <Catalog>
    <col0>      System.out.println(star   =   star);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (star.length() == 2) {"
  <Catalog>
    <col0>    if (star.length() == 2) {</col0>
  </Catalog>
 
"      return "White Dwarf";"
  <Catalog>
    <col0>      return White Dwarf;</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      String data = "";"
  <Catalog>
    <col0>      String data = ;</col0>
  </Catalog>
 
"      String find = star.substring(0, 1);"
  <Catalog>
    <col0>      String find = star.substring(0, 1);</col0>
  </Catalog>
 
"      data += GlobalMethods.getLinesFromTable(StarColor, find, true);"
  <Catalog>
    <col0>      data = GlobalMethods.getLinesFromTable(StarColor, find, true);</col0>
  </Catalog>
 
"      find = jcb4Star.getSelectedItem().toString().substring(2).trim();"
  <Catalog>
    <col0>      find = jcb4Star.getSelectedItem().toString().substring(2).trim();</col0>
  </Catalog>
 
"      data += GlobalMethods.getLinesFromTable(StarSize, find, true);"
  <Catalog>
    <col0>      data = GlobalMethods.getLinesFromTable(StarSize, find, true);</col0>
  </Catalog>
 
"      return data;"
  <Catalog>
    <col0>      return data;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static void clearTexts() {"
  <Catalog>
    <col0>  static void clearTexts() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.clearTexts();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.clearTexts();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static void printText(Graphics g) {"
  <Catalog>
    <col0>  static void printText(Graphics g) {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.printText(g);"
  <Catalog>
    <col0>    Panel4T5CounterMaker.printText(g);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String addZeros(String substring) {"
  <Catalog>
    <col0>  static String addZeros(String substring) {</col0>
  </Catalog>
 
"    String s = "";"
  <Catalog>
    <col0>    String s = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < Integer.parseInt(substring); j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < Integer.parseInt(substring); j) {</col0>
  </Catalog>
 
"      s += "0";"
  <Catalog>
    <col0>      s = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return s;"
  <Catalog>
    <col0>    return s;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static void saveCounter(File dir) {"
  <Catalog>
    <col0>  static void saveCounter(File dir) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("dir" + " = " + dir);"
  <Catalog>
    <col0>      System.out.println(dir   =   dir);</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    JFileChooser jfc = dbviewer.DBPublic.CBView();"
  <Catalog>
    <col0>    JFileChooser jfc = dbviewer.DBPublic.CBView();</col0>
  </Catalog>
 
"//    jfc.setAccessory(new ImagePreviewer(jfc));"
  <Catalog>
    <col0>//    jfc.setAccessory(new ImagePreviewer(jfc));</col0>
  </Catalog>
 
"    jfc.setCurrentDirectory(dir);"
  <Catalog>
    <col0>    jfc.setCurrentDirectory(dir);</col0>
  </Catalog>
 
"    jfc.setFileFilter(new FileFilter() {"
  <Catalog>
    <col0>    jfc.setFileFilter(new FileFilter() {</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      @Override"
  <Catalog>
    <col0>      @Override</col0>
  </Catalog>
 
"      public boolean accept(File f) {"
  <Catalog>
    <col0>      public boolean accept(File f) {</col0>
  </Catalog>
 
"        return (f.toString().endsWith(".gif"));"
  <Catalog>
    <col0>        return (f.toString().endsWith(.gif));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      @Override"
  <Catalog>
    <col0>      @Override</col0>
  </Catalog>
 
"      public String getDescription() {"
  <Catalog>
    <col0>      public String getDescription() {</col0>
  </Catalog>
 
"        return "GIF pictures";"
  <Catalog>
    <col0>        return GIF pictures;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"    s = Panel4T5CounterMaker.fc[0].trim() + " " + Panel4T5CounterMaker.bc[0]"
  <Catalog>
    <col0>    s = Panel4T5CounterMaker.fc[0].trim()     Panel4T5CounterMaker.bc[0]</col0>
  </Catalog>
 
"      .trim() + " " + Panel4T5CounterMaker.Folder.getSelectedItem().toString() + ".gif";"
  <Catalog>
    <col0>      .trim()     Panel4T5CounterMaker.Folder.getSelectedItem().toString()  .gif;</col0>
  </Catalog>
 
"    if (" .gif".equals(s)) {"
  <Catalog>
    <col0>    if ( .gif.equals(s)) {</col0>
  </Catalog>
 
"      s = "Blank.gif";"
  <Catalog>
    <col0>      s = Blank.gif;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (".gif".equals(s)) {"
  <Catalog>
    <col0>    if (.gif.equals(s)) {</col0>
  </Catalog>
 
"      s = "Blank?.gif";"
  <Catalog>
    <col0>      s = Blank?.gif;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if ("".equals(s)) {"
  <Catalog>
    <col0>    if (.equals(s)) {</col0>
  </Catalog>
 
"      s = "RenameMe.gif";"
  <Catalog>
    <col0>      s = RenameMe.gif;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jfc.setSelectedFile(new File(jfc.getCurrentDirectory() + FS + s.trim()));"
  <Catalog>
    <col0>    jfc.setSelectedFile(new File(jfc.getCurrentDirectory()  FS  s.trim()));</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      Robot r = new Robot();"
  <Catalog>
    <col0>      Robot r = new Robot();</col0>
  </Catalog>
 
"      bi = r.createScreenCapture(new Rectangle("
  <Catalog>
    <col0>      bi = r.createScreenCapture(new Rectangle(</col0>
  </Catalog>
 
"        panel4Pic.getLocationOnScreen().x,"
  <Catalog>
    <col0>        panel4Pic.getLocationOnScreen().x,</col0>
  </Catalog>
 
"        panel4Pic.getLocationOnScreen().y,"
  <Catalog>
    <col0>        panel4Pic.getLocationOnScreen().y,</col0>
  </Catalog>
 
"        panel4Pic.getWidth(),"
  <Catalog>
    <col0>        panel4Pic.getWidth(),</col0>
  </Catalog>
 
"        panel4Pic.getHeight()));"
  <Catalog>
    <col0>        panel4Pic.getHeight()));</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", jfc.getSelectedFile());"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, jfc.getSelectedFile());</col0>
  </Catalog>
 
"    } catch (IOException ex1) {"
  <Catalog>
    <col0>    } catch (IOException ex1) {</col0>
  </Catalog>
 
"      System.out.println("9432" + " = " + ex1);"
  <Catalog>
    <col0>      System.out.println(9432   =   ex1);</col0>
  </Catalog>
 
"    } catch (AWTException ex) {"
  <Catalog>
    <col0>    } catch (AWTException ex) {</col0>
  </Catalog>
 
"      System.out.println("9434" + " = " + 9434);"
  <Catalog>
    <col0>      System.out.println(9434   =   9434);</col0>
  </Catalog>
 
"      Logger"
  <Catalog>
    <col0>      Logger</col0>
  </Catalog>
 
"        .getLogger(Panel4T5Locator.class"
  <Catalog>
    <col0>        .getLogger(Panel4T5Locator.class</col0>
  </Catalog>
 
"          .getName()).log(Level.SEVERE, null, ex);"
  <Catalog>
    <col0>          .getName()).log(Level.SEVERE, null, ex);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getPath() {"
  <Catalog>
    <col0>  static String getPath() {</col0>
  </Catalog>
 
"    String s = T5 + FS + jcb4Sec.getSelectedItem().toString() + FS"
  <Catalog>
    <col0>    String s = T5  FS  jcb4Sec.getSelectedItem().toString()  FS</col0>
  </Catalog>
 
"      + jcb4Sub.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sub.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim() + ".txt";"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim()  .txt;</col0>
  </Catalog>
 
"    return s;"
  <Catalog>
    <col0>    return s;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getWorldPath() {"
  <Catalog>
    <col0>  static String getWorldPath() {</col0>
  </Catalog>
 
"    String s = T5 + FS + jcb4Sec.getSelectedItem().toString() + FS"
  <Catalog>
    <col0>    String s = T5  FS  jcb4Sec.getSelectedItem().toString()  FS</col0>
  </Catalog>
 
"      + jcb4Sub.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sub.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    return s;"
  <Catalog>
    <col0>    return s;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getsize() {"
  <Catalog>
    <col0>  static String getsize() {</col0>
  </Catalog>
 
"    return UWP.substring(1, 2);"
  <Catalog>
    <col0>    return UWP.substring(1, 2);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getatmo() {"
  <Catalog>
    <col0>  static String getatmo() {</col0>
  </Catalog>
 
"    return UWP.substring(2, 3);"
  <Catalog>
    <col0>    return UWP.substring(2, 3);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String gethydro() {"
  <Catalog>
    <col0>  static String gethydro() {</col0>
  </Catalog>
 
"    return UWP.substring(3, 4);"
  <Catalog>
    <col0>    return UWP.substring(3, 4);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getpop() {"
  <Catalog>
    <col0>  static String getpop() {</col0>
  </Catalog>
 
"    return UWP.substring(4, 5);"
  <Catalog>
    <col0>    return UWP.substring(4, 5);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getgov() {"
  <Catalog>
    <col0>  static String getgov() {</col0>
  </Catalog>
 
"    return UWP.substring(5, 6);"
  <Catalog>
    <col0>    return UWP.substring(5, 6);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getll() {"
  <Catalog>
    <col0>  static String getll() {</col0>
  </Catalog>
 
"    return UWP.substring(6, 7);"
  <Catalog>
    <col0>    return UWP.substring(6, 7);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String gettl() {"
  <Catalog>
    <col0>  static String gettl() {</col0>
  </Catalog>
 
"    return UWP.substring(8, 9);"
  <Catalog>
    <col0>    return UWP.substring(8, 9);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getTecL() {"
  <Catalog>
    <col0>  static String getTecL() {</col0>
  </Catalog>
 
"    return UWP.substring(8, 9);"
  <Catalog>
    <col0>    return UWP.substring(8, 9);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String worldupdate(String txt) {"
  <Catalog>
    <col0>  static String worldupdate(String txt) {</col0>
  </Catalog>
 
"    switch (txt) {"
  <Catalog>
    <col0>    switch (txt) {</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="SDBs">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=SDBs></col0>
  </Catalog>
 
"      case "SDBs": {"
  <Catalog>
    <col0>      case SDBs: {</col0>
  </Catalog>
 
"        int t, p;"
  <Catalog>
    <col0>        int t, p;</col0>
  </Catalog>
 
"        t = GlobalMethods.fromHex(UWP.substring(8, 9));"
  <Catalog>
    <col0>        t = GlobalMethods.fromHex(UWP.substring(8, 9));</col0>
  </Catalog>
 
"        p = GlobalMethods.fromHex(UWP.substring(4, 5));"
  <Catalog>
    <col0>        p = GlobalMethods.fromHex(UWP.substring(4, 5));</col0>
  </Catalog>
 
"        if (t > 6 & p > 6) {"
  <Catalog>
    <col0>        if (t > 6 & p > 6) {</col0>
  </Catalog>
 
"          SDBso = Panel4Squadron.getFromTable(2, getpop(), gettl());"
  <Catalog>
    <col0>          SDBso = Panel4Squadron.getFromTable(2, getpop(), gettl());</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          SDBso = "X";"
  <Catalog>
    <col0>          SDBso = X;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        createSDBPic();"
  <Catalog>
    <col0>        createSDBPic();</col0>
  </Catalog>
 
"        return SDBso;"
  <Catalog>
    <col0>        return SDBso;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="SQUADRONS">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=SQUADRONS></col0>
  </Catalog>
 
"      case "SQUADRONS": {"
  <Catalog>
    <col0>      case SQUADRONS: {</col0>
  </Catalog>
 
"        //TL8+ SDBs"
  <Catalog>
    <col0>        //TL8 SDBs</col0>
  </Catalog>
 
"        int t, sdbs;"
  <Catalog>
    <col0>        int t, sdbs;</col0>
  </Catalog>
 
"        t = GlobalMethods.fromHex("
  <Catalog>
    <col0>        t = GlobalMethods.fromHex(</col0>
  </Catalog>
 
"          UWP.substring(8, 9));"
  <Catalog>
    <col0>          UWP.substring(8, 9));</col0>
  </Catalog>
 
"        try {"
  <Catalog>
    <col0>        try {</col0>
  </Catalog>
 
"          sdbs = GlobalMethods.fromHex(SDBso);"
  <Catalog>
    <col0>          sdbs = GlobalMethods.fromHex(SDBso);</col0>
  </Catalog>
 
"        } catch (Exception e) {"
  <Catalog>
    <col0>        } catch (Exception e) {</col0>
  </Catalog>
 
"          sdbs = 0;"
  <Catalog>
    <col0>          sdbs = 0;</col0>
  </Catalog>
 
"          System.out.println("3961" + " = " + e.toString());"
  <Catalog>
    <col0>          System.out.println(3961   =   e.toString());</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (t > 8 & sdbs > 9) {"
  <Catalog>
    <col0>        if (t > 8 & sdbs > 9) {</col0>
  </Catalog>
 
"          SQUADRONSo = Panel4Squadron.getFromTable(7, getTecL(), SDBso);"
  <Catalog>
    <col0>          SQUADRONSo = Panel4Squadron.getFromTable(7, getTecL(), SDBso);</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          SQUADRONSo = "X";"
  <Catalog>
    <col0>          SQUADRONSo = X;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        createSquadronPic();"
  <Catalog>
    <col0>        createSquadronPic();</col0>
  </Catalog>
 
"        return SQUADRONSo;"
  <Catalog>
    <col0>        return SQUADRONSo;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEFENCEBATTS">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEFENCEBATTS></col0>
  </Catalog>
 
"      case "DEFENCEBATTS": {"
  <Catalog>
    <col0>      case DEFENCEBATTS: {</col0>
  </Catalog>
 
"        String p;"
  <Catalog>
    <col0>        String p;</col0>
  </Catalog>
 
"        String t;"
  <Catalog>
    <col0>        String t;</col0>
  </Catalog>
 
"        p = UWP.substring(4, 5);"
  <Catalog>
    <col0>        p = UWP.substring(4, 5);</col0>
  </Catalog>
 
"        t = UWP.substring(8, 9);"
  <Catalog>
    <col0>        t = UWP.substring(8, 9);</col0>
  </Catalog>
 
"        if (GlobalMethods.fromHex(p) > 5 & GlobalMethods.fromHex(t) > 5) {"
  <Catalog>
    <col0>        if (GlobalMethods.fromHex(p) > 5 & GlobalMethods.fromHex(t) > 5) {</col0>
  </Catalog>
 
"          DEFENCEBATTSo = Panel4Squadron.getFromTable(8, p, t);"
  <Catalog>
    <col0>          DEFENCEBATTSo = Panel4Squadron.getFromTable(8, p, t);</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          DEFENCEBATTSo = "X";"
  <Catalog>
    <col0>          DEFENCEBATTSo = X;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        createDefBatPic();"
  <Catalog>
    <col0>        createDefBatPic();</col0>
  </Catalog>
 
"        return DEFENCEBATTSo;"
  <Catalog>
    <col0>        return DEFENCEBATTSo;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="TROOPUNITS">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=TROOPUNITS></col0>
  </Catalog>
 
"      case "TROOPUNITS": {"
  <Catalog>
    <col0>      case TROOPUNITS: {</col0>
  </Catalog>
 
"        int p, t;"
  <Catalog>
    <col0>        int p, t;</col0>
  </Catalog>
 
"        p = GlobalMethods.fromHex("
  <Catalog>
    <col0>        p = GlobalMethods.fromHex(</col0>
  </Catalog>
 
"          UWP.substring(4, 5));"
  <Catalog>
    <col0>          UWP.substring(4, 5));</col0>
  </Catalog>
 
"        t = GlobalMethods.fromHex("
  <Catalog>
    <col0>        t = GlobalMethods.fromHex(</col0>
  </Catalog>
 
"          UWP.substring(8, 9));"
  <Catalog>
    <col0>          UWP.substring(8, 9));</col0>
  </Catalog>
 
"        if (p > 6 & t > 6) {"
  <Catalog>
    <col0>        if (p > 6 & t > 6) {</col0>
  </Catalog>
 
"          TROOPUNITSo = Panel4Squadron.getFromTable(10, getpop(), getTecL());"
  <Catalog>
    <col0>          TROOPUNITSo = Panel4Squadron.getFromTable(10, getpop(), getTecL());</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          TROOPUNITSo = "X";"
  <Catalog>
    <col0>          TROOPUNITSo = X;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        createTroopPic();"
  <Catalog>
    <col0>        createTroopPic();</col0>
  </Catalog>
 
"        return TROOPUNITSo;"
  <Catalog>
    <col0>        return TROOPUNITSo;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return null;"
  <Catalog>
    <col0>    return null;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getsp() {"
  <Catalog>
    <col0>  static String getsp() {</col0>
  </Catalog>
 
"    return UWP.substring(0, 1);"
  <Catalog>
    <col0>    return UWP.substring(0, 1);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static Color getTASColor() {"
  <Catalog>
    <col0>  static Color getTASColor() {</col0>
  </Catalog>
 
"    Color col = Color.black;"
  <Catalog>
    <col0>    Color col = Color.black;</col0>
  </Catalog>
 
"    switch (data[9].toLowerCase().substring(4)) {"
  <Catalog>
    <col0>    switch (data[9].toLowerCase().substring(4)) {</col0>
  </Catalog>
 
"      case "r": {"
  <Catalog>
    <col0>      case r: {</col0>
  </Catalog>
 
"        col = Color.red;"
  <Catalog>
    <col0>        col = Color.red;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "a": {"
  <Catalog>
    <col0>      case a: {</col0>
  </Catalog>
 
"        col = Color.orange;"
  <Catalog>
    <col0>        col = Color.orange;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        col = Color.green;"
  <Catalog>
    <col0>        col = Color.green;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return col;"
  <Catalog>
    <col0>    return col;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param txt string to copy"
  <Catalog>
    <col0>   @param txt string to copy</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static void txt2cb(String txt) {"
  <Catalog>
    <col0>  public static void txt2cb(String txt) {</col0>
  </Catalog>
 
"    if (running) {"
  <Catalog>
    <col0>    if (running) {</col0>
  </Catalog>
 
"      if (txt != null) {"
  <Catalog>
    <col0>      if (txt != null) {</col0>
  </Catalog>
 
"        StringSelection sel = new StringSelection(txt.trim() + CRLF);"
  <Catalog>
    <col0>        StringSelection sel = new StringSelection(txt.trim()  CRLF);</col0>
  </Catalog>
 
"        cb.setContents(sel, null);"
  <Catalog>
    <col0>        cb.setContents(sel, null);</col0>
  </Catalog>
 
"        System.out.println(txt);"
  <Catalog>
    <col0>        System.out.println(txt);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String getZ() {"
  <Catalog>
    <col0>  static String getZ() {</col0>
  </Catalog>
 
"    out = data[9] + CRLF;"
  <Catalog>
    <col0>    out = data[9]  CRLF;</col0>
  </Catalog>
 
"    String z = data[9].substring(4);"
  <Catalog>
    <col0>    String z = data[9].substring(4);</col0>
  </Catalog>
 
"    out += GlobalMethods.getLinesFromTable(Zones, z, true);"
  <Catalog>
    <col0>    out = GlobalMethods.getLinesFromTable(Zones, z, true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void readWeb(String wp) {"
  <Catalog>
    <col0>  private void readWeb(String wp) {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      webpath = fix(wp);"
  <Catalog>
    <col0>      webpath = fix(wp);</col0>
  </Catalog>
 
"      url = new URL(webpath);"
  <Catalog>
    <col0>      url = new URL(webpath);</col0>
  </Catalog>
 
"      URLConnection myURLConnection = null;"
  <Catalog>
    <col0>      URLConnection myURLConnection = null;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        myURLConnection = url.openConnection();"
  <Catalog>
    <col0>        myURLConnection = url.openConnection();</col0>
  </Catalog>
 
"      } catch (IOException e) {"
  <Catalog>
    <col0>      } catch (IOException e) {</col0>
  </Catalog>
 
"        System.out.println("5692" + " = " + e.toString());"
  <Catalog>
    <col0>        System.out.println(5692   =   e.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      myURLConnection.connect();"
  <Catalog>
    <col0>      myURLConnection.connect();</col0>
  </Catalog>
 
"      URLConnection u;"
  <Catalog>
    <col0>      URLConnection u;</col0>
  </Catalog>
 
"      u = url.openConnection();"
  <Catalog>
    <col0>      u = url.openConnection();</col0>
  </Catalog>
 
"      BufferedReader in;"
  <Catalog>
    <col0>      BufferedReader in;</col0>
  </Catalog>
 
"      in = new BufferedReader(new InputStreamReader(u.getInputStream()));"
  <Catalog>
    <col0>      in = new BufferedReader(new InputStreamReader(u.getInputStream()));</col0>
  </Catalog>
 
"      String inputLine;"
  <Catalog>
    <col0>      String inputLine;</col0>
  </Catalog>
 
"      setJta(new JTextArea());"
  <Catalog>
    <col0>      setJta(new JTextArea());</col0>
  </Catalog>
 
"      while ((inputLine = in.readLine()) != null) {"
  <Catalog>
    <col0>      while ((inputLine = in.readLine()) != null) {</col0>
  </Catalog>
 
"        getJta().append(inputLine + CRLF);"
  <Catalog>
    <col0>        getJta().append(inputLine  CRLF);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        GlobalMethods.saveTextFile(T5 + FS + "_SEC" + FS, fname.replace("%20","
  <Catalog>
    <col0>        GlobalMethods.saveTextFile(T5  FS  _SEC  FS, fname.replace(%20</col0>
  </Catalog>
 
"          " "), ".sec", getJta().getText());"
  <Catalog>
    <col0>           ), .sec, getJta().getText());</col0>
  </Catalog>
 
"//        JOptionPane.showMessageDialog(jf, "");"
  <Catalog>
    <col0>//        JOptionPane.showMessageDialog(jf, );</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        System.out.println("" + " = " + 5706);"
  <Catalog>
    <col0>        System.out.println(   =   5706);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      in.close();"
  <Catalog>
    <col0>      in.close();</col0>
  </Catalog>
 
"    } catch (MalformedURLException e) {"
  <Catalog>
    <col0>    } catch (MalformedURLException e) {</col0>
  </Catalog>
 
"      System.out.println("5710" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(5710   =   e.toString());</col0>
  </Catalog>
 
"    } catch (IOException e) {"
  <Catalog>
    <col0>    } catch (IOException e) {</col0>
  </Catalog>
 
"      System.out.println("5712" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(5712   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  boolean isPopulated() {"
  <Catalog>
    <col0>  boolean isPopulated() {</col0>
  </Catalog>
 
"    String[] lines = GlobalMethods.getLinesFromFile(new File(_SEC + FS"
  <Catalog>
    <col0>    String[] lines = GlobalMethods.getLinesFromFile(new File(_SEC  FS</col0>
  </Catalog>
 
"      + jcb4Sec.getSelectedItem().toString() + ".sec"));"
  <Catalog>
    <col0>       jcb4Sec.getSelectedItem().toString()  .sec));</col0>
  </Catalog>
 
"    for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].contains("---- ")) {"
  <Catalog>
    <col0>      if (lines[j].contains(---- )) {</col0>
  </Catalog>
 
"        return true;"
  <Catalog>
    <col0>        return true;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return false;"
  <Catalog>
    <col0>    return false;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  int countUnused() {"
  <Catalog>
    <col0>  int countUnused() {</col0>
  </Catalog>
 
"    int numun = 0;"
  <Catalog>
    <col0>    int numun = 0;</col0>
  </Catalog>
 
"    for (int j = min; j < orbit.length; j++) {"
  <Catalog>
    <col0>    for (int j = min; j < orbit.length; j) {</col0>
  </Catalog>
 
"      if (orbit[j].equals("")) {"
  <Catalog>
    <col0>      if (orbit[j].equals()) {</col0>
  </Catalog>
 
"        numun += 1;"
  <Catalog>
    <col0>        numun = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return numun;"
  <Catalog>
    <col0>    return numun;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //////////////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>  //////////////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"  private void getWord(MouseEvent evt) {"
  <Catalog>
    <col0>  private void getWord(MouseEvent evt) {</col0>
  </Catalog>
 
"    String word = Panel4WordGen.getWord(me, jcb4Lang.getSelectedItem()"
  <Catalog>
    <col0>    String word = Panel4WordGen.getWord(me, jcb4Lang.getSelectedItem()</col0>
  </Catalog>
 
"      .toString(), null).replace(CRLF, "").replace("\t", "").trim();"
  <Catalog>
    <col0>      .toString(), null).replace(CRLF, ).replace(\t, ).trim();</col0>
  </Catalog>
 
"    System.out.println("word" + " = " + word);"
  <Catalog>
    <col0>    System.out.println(word   =   word);</col0>
  </Catalog>
 
"    jtf4Word.setText(GlobalMethods.capWords(word));"
  <Catalog>
    <col0>    jtf4Word.setText(GlobalMethods.capWords(word));</col0>
  </Catalog>
 
"    jtf4Word.setSelectionEnd(jtf4Word.getText().length());"
  <Catalog>
    <col0>    jtf4Word.setSelectionEnd(jtf4Word.getText().length());</col0>
  </Catalog>
 
"    jtf4Word.setSelectionStart(0);"
  <Catalog>
    <col0>    jtf4Word.setSelectionStart(0);</col0>
  </Catalog>
 
"    if (!"".equals(jtf4Word.getText())) {"
  <Catalog>
    <col0>    if (!.equals(jtf4Word.getText())) {</col0>
  </Catalog>
 
"      jtf2cb(jtf4Word);"
  <Catalog>
    <col0>      jtf2cb(jtf4Word);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//    jtf2cb(jtf4Word);"
  <Catalog>
    <col0>//    jtf2cb(jtf4Word);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void loadTexts() {"
  <Catalog>
    <col0>  private void loadTexts() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      String t = GlobalMethods.loadTextFile(getPath());"
  <Catalog>
    <col0>      String t = GlobalMethods.loadTextFile(getPath());</col0>
  </Catalog>
 
"      jta4All.setText(t);"
  <Catalog>
    <col0>      jta4All.setText(t);</col0>
  </Catalog>
 
"      String[] bits = jta4All.getText().split(GlobalMethods.comment("-", 80));"
  <Catalog>
    <col0>      String[] bits = jta4All.getText().split(GlobalMethods.comment(-, 80));</col0>
  </Catalog>
 
"      jta4Orb.setText(bits[5]);"
  <Catalog>
    <col0>      jta4Orb.setText(bits[5]);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(jp,e.toString());"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(jp,e.toString());</col0>
  </Catalog>
 
"//      System.out.println("5261" + " = " + e.toString());"
  <Catalog>
    <col0>//      System.out.println(5261   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String saveTexts() {"
  <Catalog>
    <col0>  private String saveTexts() {</col0>
  </Catalog>
 
"    String ret = T5 + FS;"
  <Catalog>
    <col0>    String ret = T5  FS;</col0>
  </Catalog>
 
"    ret += jcb4Sec.getSelectedItem().toString().trim() + FS;"
  <Catalog>
    <col0>    ret = jcb4Sec.getSelectedItem().toString().trim()  FS;</col0>
  </Catalog>
 
"    file = new File(ret);"
  <Catalog>
    <col0>    file = new File(ret);</col0>
  </Catalog>
 
"    if (!file.exists()) {"
  <Catalog>
    <col0>    if (!file.exists()) {</col0>
  </Catalog>
 
"      file.mkdir();"
  <Catalog>
    <col0>      file.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    ret += jcb4Sub.getSelectedItem().toString().trim() + FS;"
  <Catalog>
    <col0>    ret = jcb4Sub.getSelectedItem().toString().trim()  FS;</col0>
  </Catalog>
 
"    ret = ret.replace(": ", " ");"
  <Catalog>
    <col0>    ret = ret.replace(: ,  );</col0>
  </Catalog>
 
"    file = new File(ret);"
  <Catalog>
    <col0>    file = new File(ret);</col0>
  </Catalog>
 
"    if (!file.exists()) {"
  <Catalog>
    <col0>    if (!file.exists()) {</col0>
  </Catalog>
 
"      file.mkdir();"
  <Catalog>
    <col0>      file.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    ret += jcb4Sys.getSelectedItem().toString().trim() + FS + jcb4Sys"
  <Catalog>
    <col0>    ret = jcb4Sys.getSelectedItem().toString().trim()  FS  jcb4Sys</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + FS;"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()  FS;</col0>
  </Catalog>
 
"    file = new File(ret);"
  <Catalog>
    <col0>    file = new File(ret);</col0>
  </Catalog>
 
"    if (!file.exists()) {"
  <Catalog>
    <col0>    if (!file.exists()) {</col0>
  </Catalog>
 
"      file.mkdir();"
  <Catalog>
    <col0>      file.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String string = jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    String string = jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    String txt;"
  <Catalog>
    <col0>    String txt;</col0>
  </Catalog>
 
"    writeSectorInfo();"
  <Catalog>
    <col0>    writeSectorInfo();</col0>
  </Catalog>
 
"    txt = string.toUpperCase() + CRLF"
  <Catalog>
    <col0>    txt = string.toUpperCase()  CRLF</col0>
  </Catalog>
 
"      + GlobalMethods.comment("-", 80)"
  <Catalog>
    <col0>       GlobalMethods.comment(-, 80)</col0>
  </Catalog>
 
"      + jta4Sec.getText()"
  <Catalog>
    <col0>       jta4Sec.getText()</col0>
  </Catalog>
 
"      + GlobalMethods.comment("-", 80)"
  <Catalog>
    <col0>       GlobalMethods.comment(-, 80)</col0>
  </Catalog>
 
"      + jta4Line.getText()"
  <Catalog>
    <col0>       jta4Line.getText()</col0>
  </Catalog>
 
"      + GlobalMethods.comment("-", 80)"
  <Catalog>
    <col0>       GlobalMethods.comment(-, 80)</col0>
  </Catalog>
 
"      + jta4Sys.getText()"
  <Catalog>
    <col0>       jta4Sys.getText()</col0>
  </Catalog>
 
"      + GlobalMethods.comment("-", 80)"
  <Catalog>
    <col0>       GlobalMethods.comment(-, 80)</col0>
  </Catalog>
 
"      + jta4Info.getText()"
  <Catalog>
    <col0>       jta4Info.getText()</col0>
  </Catalog>
 
"      + GlobalMethods.comment("-", 80)"
  <Catalog>
    <col0>       GlobalMethods.comment(-, 80)</col0>
  </Catalog>
 
"      + jta4Orb.getText()"
  <Catalog>
    <col0>       jta4Orb.getText()</col0>
  </Catalog>
 
"      + GlobalMethods.comment("-", 80)"
  <Catalog>
    <col0>       GlobalMethods.comment(-, 80)</col0>
  </Catalog>
 
"      + jta4Str.getText(); //      + GlobalMethods.comment("-", 80);"
  <Catalog>
    <col0>       jta4Str.getText(); //       GlobalMethods.comment(-, 80);</col0>
  </Catalog>
 
"    for (int j = 0; j < 10; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < 10; j) {</col0>
  </Catalog>
 
"      js4Dist.setValue(j);"
  <Catalog>
    <col0>      js4Dist.setValue(j);</col0>
  </Catalog>
 
"      js4DistStateChanged(ce);"
  <Catalog>
    <col0>      js4DistStateChanged(ce);</col0>
  </Catalog>
 
"      txt += GlobalMethods.comment("-", 80);"
  <Catalog>
    <col0>      txt = GlobalMethods.comment(-, 80);</col0>
  </Catalog>
 
"      for (int k = 0; k < jl4Jump.getModel().getSize(); k++) {"
  <Catalog>
    <col0>      for (int k = 0; k < jl4Jump.getModel().getSize(); k) {</col0>
  </Catalog>
 
"        txt += "Jump " + j + " = " + jl4Jump.getModel().getElementAt(k) + CRLF;"
  <Catalog>
    <col0>        txt = Jump   j   =   jl4Jump.getModel().getElementAt(k)  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    js4Dist.setValue(1);"
  <Catalog>
    <col0>    js4Dist.setValue(1);</col0>
  </Catalog>
 
"    file = new File(ret);"
  <Catalog>
    <col0>    file = new File(ret);</col0>
  </Catalog>
 
"    GlobalMethods.saveTextFile(file.toString(), string, ".txt", txt);"
  <Catalog>
    <col0>    GlobalMethods.saveTextFile(file.toString(), string, .txt, txt);</col0>
  </Catalog>
 
"    loadTexts();"
  <Catalog>
    <col0>    loadTexts();</col0>
  </Catalog>
 
"    return ret;"
  <Catalog>
    <col0>    return ret;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveHTML() {"
  <Catalog>
    <col0>  private void saveHTML() {</col0>
  </Catalog>
 
"    String[] oldname = {"TITLE", "SEC", "SUB", "HEX", "NAME", "WID", "HGT", "BORDER", "JUMP", "SCALE", "OPTIONS", "STYLE", "SX", "SY", "HX", "HY", "X", "Y", "ERA", "LET", "SPIN"};"
  <Catalog>
    <col0>    String[] oldname = {TITLE, SEC, SUB, HEX, NAME, WID, HGT, BORDER, JUMP, SCALE, OPTIONS, STYLE, SX, SY, HX, HY, X, Y, ERA, LET, SPIN};</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      String TITLE = jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>      String TITLE = jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"      String SEC = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>      String SEC = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"      String SUB = jcb4Sub.getSelectedItem().toString().substring(2);"
  <Catalog>
    <col0>      String SUB = jcb4Sub.getSelectedItem().toString().substring(2);</col0>
  </Catalog>
 
"      String HEX = jcb4Sys.getSelectedItem().toString().substring(0, 4);"
  <Catalog>
    <col0>      String HEX = jcb4Sys.getSelectedItem().toString().substring(0, 4);</col0>
  </Catalog>
 
"      String NAME = jcb4Sys.getSelectedItem().toString().substring(4).trim();"
  <Catalog>
    <col0>      String NAME = jcb4Sys.getSelectedItem().toString().substring(4).trim();</col0>
  </Catalog>
 
"      String WID = "900px";"
  <Catalog>
    <col0>      String WID = 900px;</col0>
  </Catalog>
 
"      String HGT = "900px";"
  <Catalog>
    <col0>      String HGT = 900px;</col0>
  </Catalog>
 
"      String BORDER = "solid 1px black";"
  <Catalog>
    <col0>      String BORDER = solid 1px black;</col0>
  </Catalog>
 
"      String JUMP = "9";"
  <Catalog>
    <col0>      String JUMP = 9;</col0>
  </Catalog>
 
"      String SCALE = "120";"
  <Catalog>
    <col0>      String SCALE = 120;</col0>
  </Catalog>
 
"      String OPTIONS = "58207";"
  <Catalog>
    <col0>      String OPTIONS = 58207;</col0>
  </Catalog>
 
"      String STYLE = "print";//atlas//candy//poster//print"
  <Catalog>
    <col0>      String STYLE = print;//atlas//candy//poster//print</col0>
  </Catalog>
 
"      String SX = "-4";"
  <Catalog>
    <col0>      String SX = -4;</col0>
  </Catalog>
 
"      String SY = "-1";"
  <Catalog>
    <col0>      String SY = -1;</col0>
  </Catalog>
 
"      String HX = "19";"
  <Catalog>
    <col0>      String HX = 19;</col0>
  </Catalog>
 
"      String HY = "10";"
  <Catalog>
    <col0>      String HY = 10;</col0>
  </Catalog>
 
"      String X = "-4";"
  <Catalog>
    <col0>      String X = -4;</col0>
  </Catalog>
 
"      String Y = "-1";"
  <Catalog>
    <col0>      String Y = -1;</col0>
  </Catalog>
 
"      String ERA = "1000";"
  <Catalog>
    <col0>      String ERA = 1000;</col0>
  </Catalog>
 
"      String LET = "A";"
  <Catalog>
    <col0>      String LET = A;</col0>
  </Catalog>
 
"      String SPIN = "spin";"
  <Catalog>
    <col0>      String SPIN = spin;</col0>
  </Catalog>
 
"      String SYS = jcb4Sys.getSelectedItem().toString().substring(0, 4);"
  <Catalog>
    <col0>      String SYS = jcb4Sys.getSelectedItem().toString().substring(0, 4);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      String[] newname = {TITLE, SEC, SUB, HEX, NAME, WID, HGT, BORDER, JUMP, SCALE, OPTIONS, STYLE, SX, SY, HX, HY, X, Y, ERA, LET, SPIN};"
  <Catalog>
    <col0>      String[] newname = {TITLE, SEC, SUB, HEX, NAME, WID, HGT, BORDER, JUMP, SCALE, OPTIONS, STYLE, SX, SY, HX, HY, X, Y, ERA, LET, SPIN};</col0>
  </Catalog>
 
"      String txt = jta4HTML.getText();"
  <Catalog>
    <col0>      String txt = jta4HTML.getText();</col0>
  </Catalog>
 
"      for (int j = 0; j < newname.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < newname.length; j) {</col0>
  </Catalog>
 
"        txt = txt.replace(oldname[j], newname[j]);"
  <Catalog>
    <col0>        txt = txt.replace(oldname[j], newname[j]);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jta4All.setText(GlobalMethods.loadTextFile(getPath()));"
  <Catalog>
    <col0>      jta4All.setText(GlobalMethods.loadTextFile(getPath()));</col0>
  </Catalog>
 
"      String GEN = jta4All.getText();"
  <Catalog>
    <col0>      String GEN = jta4All.getText();</col0>
  </Catalog>
 
"      String[] lines = GEN.split(CRLF);"
  <Catalog>
    <col0>      String[] lines = GEN.split(CRLF);</col0>
  </Catalog>
 
"      for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"        lines[j] = lines[j].replace("\t", "  ").replace(" ", "_") + "<br>" + CRLF;"
  <Catalog>
    <col0>        lines[j] = lines[j].replace(\t,   ).replace( , _)  <br>  CRLF;</col0>
  </Catalog>
 
"        txt += lines[j];"
  <Catalog>
    <col0>        txt = lines[j];</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      LET = jcb4Sub.getSelectedItem().toString().substring(0, 1);"
  <Catalog>
    <col0>      LET = jcb4Sub.getSelectedItem().toString().substring(0, 1);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"//      //SubSector"
  <Catalog>
    <col0>//      //SubSector</col0>
  </Catalog>
 
"//      txt += "<BR><BR><IMG SRC=\"" + SYS + FS + HEX + "%20" + NAME.trim() + "%20Subsector.gif\"""
  <Catalog>
    <col0>//      txt = <BR><BR><IMG SRC=\  SYS  FS  HEX  %20  NAME.trim()  %20Subsector.gif\</col0>
  </Catalog>
 
"//        + CRLF + "NAME=\"graphics1\" ALIGN=LEFT WIDTH=200 HEIGHT=200 BORDER=1>""
  <Catalog>
    <col0>//         CRLF  NAME=\graphics1\ ALIGN=LEFT WIDTH=200 HEIGHT=200 BORDER=1></col0>
  </Catalog>
 
"//        + "" + CRLF;"
  <Catalog>
    <col0>//           CRLF;</col0>
  </Catalog>
 
"//      //Big System"
  <Catalog>
    <col0>//      //Big System</col0>
  </Catalog>
 
"//      txt += "<IMG SRC=\"" + SYS + FS + HEX + "%20" + NAME.trim() + "%20System.gif\"""
  <Catalog>
    <col0>//      txt = <IMG SRC=\  SYS  FS  HEX  %20  NAME.trim()  %20System.gif\</col0>
  </Catalog>
 
"//        + CRLF + "NAME=\"graphics2\" ALIGN=LEFT WIDTH=200 HEIGHT=200 BORDER=1>""
  <Catalog>
    <col0>//         CRLF  NAME=\graphics2\ ALIGN=LEFT WIDTH=200 HEIGHT=200 BORDER=1></col0>
  </Catalog>
 
"//        + "" + CRLF;"
  <Catalog>
    <col0>//           CRLF;</col0>
  </Catalog>
 
"//      //UWP"
  <Catalog>
    <col0>//      //UWP</col0>
  </Catalog>
 
"//      txt += "<IMG SRC=\"" + SYS + FS + HEX + "%20" + NAME.trim() + "%20UWP.gif\"""
  <Catalog>
    <col0>//      txt = <IMG SRC=\  SYS  FS  HEX  %20  NAME.trim()  %20UWP.gif\</col0>
  </Catalog>
 
"//        + CRLF + "NAME=\"graphics3\" ALIGN=LEFT WIDTH=400 HEIGHT=150 BORDER=1>""
  <Catalog>
    <col0>//         CRLF  NAME=\graphics3\ ALIGN=LEFT WIDTH=400 HEIGHT=150 BORDER=1></col0>
  </Catalog>
 
"//        + "<BR CLEAR=LEFT><BR>" + CRLF;"
  <Catalog>
    <col0>//         <BR CLEAR=LEFT><BR>  CRLF;</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      //System"
  <Catalog>
    <col0>//      //System</col0>
  </Catalog>
 
"//      txt += "<IMG SRC=\"" + SYS + FS + HEX + "%20" + NAME.trim() + ".gif\"""
  <Catalog>
    <col0>//      txt = <IMG SRC=\  SYS  FS  HEX  %20  NAME.trim()  .gif\</col0>
  </Catalog>
 
"//        + CRLF + "NAME=\"graphics11\" ALIGN=LEFT WIDTH=200 HEIGHT=100 BORDER=1>""
  <Catalog>
    <col0>//         CRLF  NAME=\graphics11\ ALIGN=LEFT WIDTH=200 HEIGHT=100 BORDER=1></col0>
  </Catalog>
 
"//        + "" + CRLF;"
  <Catalog>
    <col0>//           CRLF;</col0>
  </Catalog>
 
"//      //Blank"
  <Catalog>
    <col0>//      //Blank</col0>
  </Catalog>
 
"//      txt += "<IMG SRC=\"" + SYS + FS + "Blank.gif\"""
  <Catalog>
    <col0>//      txt = <IMG SRC=\  SYS  FS  Blank.gif\</col0>
  </Catalog>
 
"//        + CRLF + "NAME=\"graphics11\"  WIDTH=200 HEIGHT=100 BORDER=1>""
  <Catalog>
    <col0>//         CRLF  NAME=\graphics11\  WIDTH=200 HEIGHT=100 BORDER=1></col0>
  </Catalog>
 
"//        + "<BR CLEAR=LEFT><BR></P>" + CRLF;"
  <Catalog>
    <col0>//         <BR CLEAR=LEFT><BR></P>  CRLF;</col0>
  </Catalog>
 
"      txt += "  </body>" + CRLF + "</html>" + CRLF;"
  <Catalog>
    <col0>      txt =   </body>  CRLF  </html>  CRLF;</col0>
  </Catalog>
 
"      String s = T5 + FS + jcb4Sec.getSelectedItem().toString().trim()"
  <Catalog>
    <col0>      String s = T5  FS  jcb4Sec.getSelectedItem().toString().trim()</col0>
  </Catalog>
 
"        + FS + jcb4Sub.getSelectedItem().toString().trim()"
  <Catalog>
    <col0>         FS  jcb4Sub.getSelectedItem().toString().trim()</col0>
  </Catalog>
 
"        + FS + jcb4Sys.getSelectedItem().toString().trim() + FS;"
  <Catalog>
    <col0>         FS  jcb4Sys.getSelectedItem().toString().trim()  FS;</col0>
  </Catalog>
 
"      String ss = s + FS + jcb4Sys.getSelectedItem().toString().trim() + FS;"
  <Catalog>
    <col0>      String ss = s  FS  jcb4Sys.getSelectedItem().toString().trim()  FS;</col0>
  </Catalog>
 
"      f = new File(ss);"
  <Catalog>
    <col0>      f = new File(ss);</col0>
  </Catalog>
 
"      if (!f.exists()) {"
  <Catalog>
    <col0>      if (!f.exists()) {</col0>
  </Catalog>
 
"        f.mkdir();"
  <Catalog>
    <col0>        f.mkdir();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      GlobalMethods.saveTextFile(s, SYS, ".html", txt);"
  <Catalog>
    <col0>      GlobalMethods.saveTextFile(s, SYS, .html, txt);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("3510" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(3510   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //file:///C:/T5/Spinward%20Marches/C%20Regina/1910%20Regina/C%20Regina%20Subsector.gif"
  <Catalog>
    <col0>    //file:///C:/T5/Spinward%20Marches/C%20Regina/1910%20Regina/C%20Regina%20Subsector.gif</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addSectors() {"
  <Catalog>
    <col0>  private void addSectors() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    dir = new File(T5);"
  <Catalog>
    <col0>    dir = new File(T5);</col0>
  </Catalog>
 
"    if (!dir.exists()) {"
  <Catalog>
    <col0>    if (!dir.exists()) {</col0>
  </Catalog>
 
"      dir.mkdir();"
  <Catalog>
    <col0>      dir.mkdir();</col0>
  </Catalog>
 
"      dir = new File(_SEC);"
  <Catalog>
    <col0>      dir = new File(_SEC);</col0>
  </Catalog>
 
"      dir.mkdir();"
  <Catalog>
    <col0>      dir.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    dir = new File(_SEC);"
  <Catalog>
    <col0>    dir = new File(_SEC);</col0>
  </Catalog>
 
"    if (!dir.exists()) {"
  <Catalog>
    <col0>    if (!dir.exists()) {</col0>
  </Catalog>
 
"      dir.mkdir();"
  <Catalog>
    <col0>      dir.mkdir();</col0>
  </Catalog>
 
"      downloadSector();"
  <Catalog>
    <col0>      downloadSector();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String[] files = dir.list();"
  <Catalog>
    <col0>    String[] files = dir.list();</col0>
  </Catalog>
 
"    Arrays.sort(files);"
  <Catalog>
    <col0>    Arrays.sort(files);</col0>
  </Catalog>
 
"    String seclist;"
  <Catalog>
    <col0>    String seclist;</col0>
  </Catalog>
 
"    seclist = "";"
  <Catalog>
    <col0>    seclist = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < files.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < files.length; j) {</col0>
  </Catalog>
 
"      if (files[j].endsWith(".sec")) {"
  <Catalog>
    <col0>      if (files[j].endsWith(.sec)) {</col0>
  </Catalog>
 
"        String s = files[j].substring(0, files[j].length() - 4);"
  <Catalog>
    <col0>        String s = files[j].substring(0, files[j].length() - 4);</col0>
  </Catalog>
 
"        jcb4Sec.addItem(s);"
  <Catalog>
    <col0>        jcb4Sec.addItem(s);</col0>
  </Catalog>
 
"        s += ",";"
  <Catalog>
    <col0>        s = </col0>
    <col1>;</col1>
  </Catalog>
 
"        try {"
  <Catalog>
    <col0>        try {</col0>
  </Catalog>
 
"          String[] ss = GlobalMethods.getLinesFromFile(new File("
  <Catalog>
    <col0>          String[] ss = GlobalMethods.getLinesFromFile(new File(</col0>
  </Catalog>
 
"            _SEC + FS + files[j]));"
  <Catalog>
    <col0>            _SEC  FS  files[j]));</col0>
  </Catalog>
 
"          s += ss[4].substring(2);"
  <Catalog>
    <col0>          s = ss[4].substring(2);</col0>
  </Catalog>
 
"          seclist += s + CRLF;"
  <Catalog>
    <col0>          seclist = s  CRLF;</col0>
  </Catalog>
 
"        } catch (Exception e) {"
  <Catalog>
    <col0>        } catch (Exception e) {</col0>
  </Catalog>
 
"          System.out.println("3479" + " = " + e.toString());"
  <Catalog>
    <col0>          System.out.println(3479   =   e.toString());</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    secs = seclist.split(CRLF);"
  <Catalog>
    <col0>    secs = seclist.split(CRLF);</col0>
  </Catalog>
 
"    Arrays.sort(secs);"
  <Catalog>
    <col0>    Arrays.sort(secs);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addSubsectors() {"
  <Catalog>
    <col0>  private void addSubsectors() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    DefaultComboBoxModel<String> dcbm = new DefaultComboBoxModel<>();"
  <Catalog>
    <col0>    DefaultComboBoxModel<String> dcbm = new DefaultComboBoxModel<>();</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      file = new File(_SEC + FS + jcb4Sec.getSelectedItem().toString() + ".sec");"
  <Catalog>
    <col0>      file = new File(_SEC  FS  jcb4Sec.getSelectedItem().toString()  .sec);</col0>
  </Catalog>
 
"      lines = GlobalMethods.getLinesFromFile(file);"
  <Catalog>
    <col0>      lines = GlobalMethods.getLinesFromFile(file);</col0>
  </Catalog>
 
"      sub = "";"
  <Catalog>
    <col0>      sub = ;</col0>
  </Catalog>
 
"      for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"        if (lines[j].startsWith("# Subsector ")) {"
  <Catalog>
    <col0>        if (lines[j].startsWith(# Subsector )) {</col0>
  </Catalog>
 
"          dcbm.addElement(lines[j].substring(12).replace(":", ""));"
  <Catalog>
    <col0>          dcbm.addElement(lines[j].substring(12).replace(:, ));</col0>
  </Catalog>
 
"          sub = lines[j].substring(12);"
  <Catalog>
    <col0>          sub = lines[j].substring(12);</col0>
  </Catalog>
 
"          if (dcbm.getSize() == 16) {"
  <Catalog>
    <col0>          if (dcbm.getSize() == 16) {</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jcb4Sub.setModel(dcbm);"
  <Catalog>
    <col0>      jcb4Sub.setModel(dcbm);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("1533" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(1533   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public static void addSystems() {"
  <Catalog>
    <col0>  public static void addSystems() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    dcbm = new DefaultComboBoxModel<>();"
  <Catalog>
    <col0>    dcbm = new DefaultComboBoxModel<>();</col0>
  </Catalog>
 
"    int x = 0, X = 0, y = 0, Y = 0;"
  <Catalog>
    <col0>    int x = 0, X = 0, y = 0, Y = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].startsWith("---- ")) {"
  <Catalog>
    <col0>      if (lines[j].startsWith(---- )) {</col0>
  </Catalog>
 
"        world1 = j + 1;"
  <Catalog>
    <col0>        world1 = j  1;</col0>
  </Catalog>
 
"        titleline = j - 1;"
  <Catalog>
    <col0>        titleline = j - 1;</col0>
  </Catalog>
 
"        getSpaceInfo(lines[j]);"
  <Catalog>
    <col0>        getSpaceInfo(lines[j]);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String loc;"
  <Catalog>
    <col0>    String loc;</col0>
  </Catalog>
 
"//    {"
  <Catalog>
    <col0>//    {</col0>
  </Catalog>
 
"//      String s = "Read lines";"
  <Catalog>
    <col0>//      String s = Read lines;</col0>
  </Catalog>
 
"//      JOptionPane.showMessageDialog(null, s);"
  <Catalog>
    <col0>//      JOptionPane.showMessageDialog(null, s);</col0>
  </Catalog>
 
"//    }"
  <Catalog>
    <col0>//    }</col0>
  </Catalog>
 
"    for (int j = world1; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = world1; j < lines.length; j) {</col0>
  </Catalog>
 
"      loc = lines[j].substring(0, 4);"
  <Catalog>
    <col0>      loc = lines[j].substring(0, 4);</col0>
  </Catalog>
 
"      int xx = Integer.parseInt(loc.substring(0, 2));"
  <Catalog>
    <col0>      int xx = Integer.parseInt(loc.substring(0, 2));</col0>
  </Catalog>
 
"      int yy = Integer.parseInt(loc.substring(2, 4));"
  <Catalog>
    <col0>      int yy = Integer.parseInt(loc.substring(2, 4));</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="switch">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=switch></col0>
  </Catalog>
 
"      switch (jcb4Sub.getSelectedItem().toString().substring(0, 1)) {"
  <Catalog>
    <col0>      switch (jcb4Sub.getSelectedItem().toString().substring(0, 1)) {</col0>
  </Catalog>
 
"        case "A": {"
  <Catalog>
    <col0>        case A: {</col0>
  </Catalog>
 
"          x = 1;"
  <Catalog>
    <col0>          x = 1;</col0>
  </Catalog>
 
"          X = 8;"
  <Catalog>
    <col0>          X = 8;</col0>
  </Catalog>
 
"          y = 1;"
  <Catalog>
    <col0>          y = 1;</col0>
  </Catalog>
 
"          Y = 10;"
  <Catalog>
    <col0>          Y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "B": {"
  <Catalog>
    <col0>        case B: {</col0>
  </Catalog>
 
"          x = 9;"
  <Catalog>
    <col0>          x = 9;</col0>
  </Catalog>
 
"          X = 16;"
  <Catalog>
    <col0>          X = 16;</col0>
  </Catalog>
 
"          y = 1;"
  <Catalog>
    <col0>          y = 1;</col0>
  </Catalog>
 
"          Y = 10;"
  <Catalog>
    <col0>          Y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "C": {"
  <Catalog>
    <col0>        case C: {</col0>
  </Catalog>
 
"          x = 17;"
  <Catalog>
    <col0>          x = 17;</col0>
  </Catalog>
 
"          X = 24;"
  <Catalog>
    <col0>          X = 24;</col0>
  </Catalog>
 
"          y = 1;"
  <Catalog>
    <col0>          y = 1;</col0>
  </Catalog>
 
"          Y = 10;"
  <Catalog>
    <col0>          Y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "D": {"
  <Catalog>
    <col0>        case D: {</col0>
  </Catalog>
 
"          x = 25;"
  <Catalog>
    <col0>          x = 25;</col0>
  </Catalog>
 
"          X = 32;"
  <Catalog>
    <col0>          X = 32;</col0>
  </Catalog>
 
"          y = 1;"
  <Catalog>
    <col0>          y = 1;</col0>
  </Catalog>
 
"          Y = 10;"
  <Catalog>
    <col0>          Y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "E": {"
  <Catalog>
    <col0>        case E: {</col0>
  </Catalog>
 
"          x = 1;"
  <Catalog>
    <col0>          x = 1;</col0>
  </Catalog>
 
"          X = 8;"
  <Catalog>
    <col0>          X = 8;</col0>
  </Catalog>
 
"          y = 11;"
  <Catalog>
    <col0>          y = 11;</col0>
  </Catalog>
 
"          Y = 20;"
  <Catalog>
    <col0>          Y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "F": {"
  <Catalog>
    <col0>        case F: {</col0>
  </Catalog>
 
"          x = 9;"
  <Catalog>
    <col0>          x = 9;</col0>
  </Catalog>
 
"          X = 16;"
  <Catalog>
    <col0>          X = 16;</col0>
  </Catalog>
 
"          y = 11;"
  <Catalog>
    <col0>          y = 11;</col0>
  </Catalog>
 
"          Y = 20;"
  <Catalog>
    <col0>          Y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "G": {"
  <Catalog>
    <col0>        case G: {</col0>
  </Catalog>
 
"          x = 17;"
  <Catalog>
    <col0>          x = 17;</col0>
  </Catalog>
 
"          X = 24;"
  <Catalog>
    <col0>          X = 24;</col0>
  </Catalog>
 
"          y = 11;"
  <Catalog>
    <col0>          y = 11;</col0>
  </Catalog>
 
"          Y = 20;"
  <Catalog>
    <col0>          Y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "H": {"
  <Catalog>
    <col0>        case H: {</col0>
  </Catalog>
 
"          x = 25;"
  <Catalog>
    <col0>          x = 25;</col0>
  </Catalog>
 
"          X = 32;"
  <Catalog>
    <col0>          X = 32;</col0>
  </Catalog>
 
"          y = 11;"
  <Catalog>
    <col0>          y = 11;</col0>
  </Catalog>
 
"          Y = 20;"
  <Catalog>
    <col0>          Y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "I": {"
  <Catalog>
    <col0>        case I: {</col0>
  </Catalog>
 
"          x = 1;"
  <Catalog>
    <col0>          x = 1;</col0>
  </Catalog>
 
"          X = 8;"
  <Catalog>
    <col0>          X = 8;</col0>
  </Catalog>
 
"          y = 21;"
  <Catalog>
    <col0>          y = 21;</col0>
  </Catalog>
 
"          Y = 30;"
  <Catalog>
    <col0>          Y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "J": {"
  <Catalog>
    <col0>        case J: {</col0>
  </Catalog>
 
"          x = 9;"
  <Catalog>
    <col0>          x = 9;</col0>
  </Catalog>
 
"          X = 16;"
  <Catalog>
    <col0>          X = 16;</col0>
  </Catalog>
 
"          y = 21;"
  <Catalog>
    <col0>          y = 21;</col0>
  </Catalog>
 
"          Y = 30;"
  <Catalog>
    <col0>          Y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "K": {"
  <Catalog>
    <col0>        case K: {</col0>
  </Catalog>
 
"          x = 17;"
  <Catalog>
    <col0>          x = 17;</col0>
  </Catalog>
 
"          X = 24;"
  <Catalog>
    <col0>          X = 24;</col0>
  </Catalog>
 
"          y = 21;"
  <Catalog>
    <col0>          y = 21;</col0>
  </Catalog>
 
"          Y = 30;"
  <Catalog>
    <col0>          Y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "L": {"
  <Catalog>
    <col0>        case L: {</col0>
  </Catalog>
 
"          x = 25;"
  <Catalog>
    <col0>          x = 25;</col0>
  </Catalog>
 
"          X = 32;"
  <Catalog>
    <col0>          X = 32;</col0>
  </Catalog>
 
"          y = 21;"
  <Catalog>
    <col0>          y = 21;</col0>
  </Catalog>
 
"          Y = 30;"
  <Catalog>
    <col0>          Y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "M": {"
  <Catalog>
    <col0>        case M: {</col0>
  </Catalog>
 
"          x = 1;"
  <Catalog>
    <col0>          x = 1;</col0>
  </Catalog>
 
"          X = 8;"
  <Catalog>
    <col0>          X = 8;</col0>
  </Catalog>
 
"          y = 31;"
  <Catalog>
    <col0>          y = 31;</col0>
  </Catalog>
 
"          Y = 40;"
  <Catalog>
    <col0>          Y = 40;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "N": {"
  <Catalog>
    <col0>        case N: {</col0>
  </Catalog>
 
"          x = 9;"
  <Catalog>
    <col0>          x = 9;</col0>
  </Catalog>
 
"          X = 16;"
  <Catalog>
    <col0>          X = 16;</col0>
  </Catalog>
 
"          y = 31;"
  <Catalog>
    <col0>          y = 31;</col0>
  </Catalog>
 
"          Y = 40;"
  <Catalog>
    <col0>          Y = 40;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "O": {"
  <Catalog>
    <col0>        case O: {</col0>
  </Catalog>
 
"          x = 17;"
  <Catalog>
    <col0>          x = 17;</col0>
  </Catalog>
 
"          X = 24;"
  <Catalog>
    <col0>          X = 24;</col0>
  </Catalog>
 
"          y = 31;"
  <Catalog>
    <col0>          y = 31;</col0>
  </Catalog>
 
"          Y = 40;"
  <Catalog>
    <col0>          Y = 40;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "P": {"
  <Catalog>
    <col0>        case P: {</col0>
  </Catalog>
 
"          x = 25;"
  <Catalog>
    <col0>          x = 25;</col0>
  </Catalog>
 
"          X = 32;"
  <Catalog>
    <col0>          X = 32;</col0>
  </Catalog>
 
"          y = 31;"
  <Catalog>
    <col0>          y = 31;</col0>
  </Catalog>
 
"          Y = 40;"
  <Catalog>
    <col0>          Y = 40;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      if (xx >= x & xx <= X & yy >= y & yy <= Y) {"
  <Catalog>
    <col0>      if (xx >= x & xx <= X & yy >= y & yy <= Y) {</col0>
  </Catalog>
 
"        dcbm.addElement(lines[j].substring(0, 24));"
  <Catalog>
    <col0>        dcbm.addElement(lines[j].substring(0, 24));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jcb4Sys.setModel(dcbm);"
  <Catalog>
    <col0>    jcb4Sys.setModel(dcbm);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void setXY() {"
  <Catalog>
    <col0>  private void setXY() {</col0>
  </Catalog>
 
"    XY = lines[4].substring(2).split(",");"
  <Catalog>
    <col0>    XY = lines[4].substring(2).split(</col0>
    <col1>);</col1>
  </Catalog>
 
"    jLabel1.setText("" + XY[0]);"
  <Catalog>
    <col0>    jLabel1.setText(  XY[0]);</col0>
  </Catalog>
 
"    jLabel2.setText("" + XY[1]);"
  <Catalog>
    <col0>    jLabel2.setText(  XY[1]);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showXY() {"
  <Catalog>
    <col0>  private void showXY() {</col0>
  </Catalog>
 
"    int componentCount = panel4Sec.getComponentCount();"
  <Catalog>
    <col0>    int componentCount = panel4Sec.getComponentCount();</col0>
  </Catalog>
 
"    JLabel lab = null;"
  <Catalog>
    <col0>    JLabel lab = null;</col0>
  </Catalog>
 
"    int x = 0, y = 0;"
  <Catalog>
    <col0>    int x = 0, y = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < componentCount; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < componentCount; j) {</col0>
  </Catalog>
 
"      if (panel4Sec.getComponent(j).getClass().toString().contains("JLabel")) {"
  <Catalog>
    <col0>      if (panel4Sec.getComponent(j).getClass().toString().contains(JLabel)) {</col0>
  </Catalog>
 
"        switch (j) {"
  <Catalog>
    <col0>        switch (j) {</col0>
  </Catalog>
 
"          case 0: {"
  <Catalog>
    <col0>          case 0: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(4);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(4);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]);"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0]);</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]);"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1]);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 1: {"
  <Catalog>
    <col0>          case 1: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(0);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(0);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]) - 1;"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0]) - 1;</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]) - 1;"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1]) - 1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 2: {"
  <Catalog>
    <col0>          case 2: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(1);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(1);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]);"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0]);</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]) - 1;"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1]) - 1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 3: {"
  <Catalog>
    <col0>          case 3: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(2);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(2);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]) + 1;"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0])  1;</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]) - 1;"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1]) - 1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 4: {"
  <Catalog>
    <col0>          case 4: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(3);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(3);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]) - 1;"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0]) - 1;</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]);"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1]);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 5: {"
  <Catalog>
    <col0>          case 5: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(5);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(5);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]) + 1;"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0])  1;</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]);"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1]);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 6: {"
  <Catalog>
    <col0>          case 6: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(6);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(6);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]) - 1;"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0]) - 1;</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]) + 1;"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1])  1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 7: {"
  <Catalog>
    <col0>          case 7: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(7);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(7);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]);"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0]);</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]) + 1;"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1])  1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 8: {"
  <Catalog>
    <col0>          case 8: {</col0>
  </Catalog>
 
"            lab = (JLabel) panel4Sec.getComponent(8);"
  <Catalog>
    <col0>            lab = (JLabel) panel4Sec.getComponent(8);</col0>
  </Catalog>
 
"            x = Integer.parseInt(XY[0]) + 1;"
  <Catalog>
    <col0>            x = Integer.parseInt(XY[0])  1;</col0>
  </Catalog>
 
"            y = Integer.parseInt(XY[1]) + 1;"
  <Catalog>
    <col0>            y = Integer.parseInt(XY[1])  1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        lab.setText("" + x + "," + y);"
  <Catalog>
    <col0>        lab.setText(  x  </col0>
    <col1>  y);</col1>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showDetails() {"
  <Catalog>
    <col0>  private void showDetails() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    jta4Sys.setText("");"
  <Catalog>
    <col0>    jta4Sys.setText();</col0>
  </Catalog>
 
"    for (int j = world1; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = world1; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].startsWith(jcb4Sys.getSelectedItem().toString())) {"
  <Catalog>
    <col0>      if (lines[j].startsWith(jcb4Sys.getSelectedItem().toString())) {</col0>
  </Catalog>
 
"        num = j;"
  <Catalog>
    <col0>        num = j;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    startuwp = 0;"
  <Catalog>
    <col0>    startuwp = 0;</col0>
  </Catalog>
 
"    end = 0;"
  <Catalog>
    <col0>    end = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < bits.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < bits.length; j) {</col0>
  </Catalog>
 
"      end = startuwp + bits[j].length();"
  <Catalog>
    <col0>      end = startuwp  bits[j].length();</col0>
  </Catalog>
 
"      jta4Sys.append("
  <Catalog>
    <col0>      jta4Sys.append(</col0>
  </Catalog>
 
"        lines[titleline].substring(startuwp, end).trim() + " = " + lines[num]"
  <Catalog>
    <col0>        lines[titleline].substring(startuwp, end).trim()   =   lines[num]</col0>
  </Catalog>
 
"        .substring(startuwp, end).trim() + CRLF);"
  <Catalog>
    <col0>        .substring(startuwp, end).trim()  CRLF);</col0>
  </Catalog>
 
"      startuwp += bits[j].length() + 1;"
  <Catalog>
    <col0>      startuwp = bits[j].length()  1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Line.setText("");"
  <Catalog>
    <col0>    jta4Line.setText();</col0>
  </Catalog>
 
"    jta4Line.append(getSpaceInfo(lines[world1 - 2]) + CRLF);"
  <Catalog>
    <col0>    jta4Line.append(getSpaceInfo(lines[world1 - 2])  CRLF);</col0>
  </Catalog>
 
"    jta4Line.append(getSpaceInfo(lines[world1 - 1]) + CRLF);"
  <Catalog>
    <col0>    jta4Line.append(getSpaceInfo(lines[world1 - 1])  CRLF);</col0>
  </Catalog>
 
"    jta4Line.append(lines[num] + CRLF);"
  <Catalog>
    <col0>    jta4Line.append(lines[num]  CRLF);</col0>
  </Catalog>
 
"    showExtra();"
  <Catalog>
    <col0>    showExtra();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void setLocation(String string) {"
  <Catalog>
    <col0>  private void setLocation(String string) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("string" + " = " + string);"
  <Catalog>
    <col0>      System.out.println(string   =   string);</col0>
  </Catalog>
 
"//      {"
  <Catalog>
    <col0>//      {</col0>
  </Catalog>
 
"//        String s = string;"
  <Catalog>
    <col0>//        String s = string;</col0>
  </Catalog>
 
"//        JOptionPane.showMessageDialog(null, s);"
  <Catalog>
    <col0>//        JOptionPane.showMessageDialog(null, s);</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"//    if ((jcb4Sec.getItemCount() > 0)) {"
  <Catalog>
    <col0>//    if ((jcb4Sec.getItemCount() > 0)) {</col0>
  </Catalog>
 
"    // & (jcb4Sub.getItemCount() > 0) & (jcb4Sys.getItemCount() > 0)"
  <Catalog>
    <col0>    // & (jcb4Sub.getItemCount() > 0) & (jcb4Sys.getItemCount() > 0)</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      switch (string) {"
  <Catalog>
    <col0>      switch (string) {</col0>
  </Catalog>
 
"        case "Efate": {"
  <Catalog>
    <col0>        case Efate: {</col0>
  </Catalog>
 
"          jcb4Sec.setSelectedItem("Spinward Marches");"
  <Catalog>
    <col0>          jcb4Sec.setSelectedItem(Spinward Marches);</col0>
  </Catalog>
 
"          jcb4Sub.setSelectedItem("C Regina");"
  <Catalog>
    <col0>          jcb4Sub.setSelectedItem(C Regina);</col0>
  </Catalog>
 
"          jcb4Sys.setSelectedItem("1705 Efate");"
  <Catalog>
    <col0>          jcb4Sys.setSelectedItem(1705 Efate);</col0>
  </Catalog>
 
"          {"
  <Catalog>
    <col0>          {</col0>
  </Catalog>
 
"            String s = "string = " + string + CRLF;"
  <Catalog>
    <col0>            String s = string =   string  CRLF;</col0>
  </Catalog>
 
"            s += jcb4Sec.getSelectedItem().toString() + CRLF;"
  <Catalog>
    <col0>            s = jcb4Sec.getSelectedItem().toString()  CRLF;</col0>
  </Catalog>
 
"            s += jcb4Sub.getSelectedItem().toString() + CRLF;"
  <Catalog>
    <col0>            s = jcb4Sub.getSelectedItem().toString()  CRLF;</col0>
  </Catalog>
 
"            s += jcb4Sys.getSelectedItem().toString() + CRLF;"
  <Catalog>
    <col0>            s = jcb4Sys.getSelectedItem().toString()  CRLF;</col0>
  </Catalog>
 
"            JOptionPane.showMessageDialog(null, s);"
  <Catalog>
    <col0>            JOptionPane.showMessageDialog(null, s);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Zeycude": {"
  <Catalog>
    <col0>        case Zeycude: {</col0>
  </Catalog>
 
"          jcb4Sec.setSelectedItem("Spinward Marches");"
  <Catalog>
    <col0>          jcb4Sec.setSelectedItem(Spinward Marches);</col0>
  </Catalog>
 
"          jcb4Sub.setSelectedItem("A Cronor");"
  <Catalog>
    <col0>          jcb4Sub.setSelectedItem(A Cronor);</col0>
  </Catalog>
 
"          jcb4Sys.setSelectedIndex(0);"
  <Catalog>
    <col0>          jcb4Sys.setSelectedIndex(0);</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Regina": {"
  <Catalog>
    <col0>        case Regina: {</col0>
  </Catalog>
 
"          jcb4Sec.setSelectedItem("Spinward Marches");"
  <Catalog>
    <col0>          jcb4Sec.setSelectedItem(Spinward Marches);</col0>
  </Catalog>
 
"          jcb4Sub.setSelectedItem("C Regina");"
  <Catalog>
    <col0>          jcb4Sub.setSelectedItem(C Regina);</col0>
  </Catalog>
 
"          jcb4Sys.setSelectedIndex(13);"
  <Catalog>
    <col0>          jcb4Sys.setSelectedIndex(13);</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Terra": {"
  <Catalog>
    <col0>        case Terra: {</col0>
  </Catalog>
 
"          jcb4Sec.setSelectedItem("Solomani Rim");"
  <Catalog>
    <col0>          jcb4Sec.setSelectedItem(Solomani Rim);</col0>
  </Catalog>
 
"          jcb4Sub.setSelectedItem("K Sol");"
  <Catalog>
    <col0>          jcb4Sub.setSelectedItem(K Sol);</col0>
  </Catalog>
 
"          jcb4Sys.setSelectedIndex(2);"
  <Catalog>
    <col0>          jcb4Sys.setSelectedIndex(2);</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Capital": {"
  <Catalog>
    <col0>        case Capital: {</col0>
  </Catalog>
 
"          jcb4Sec.setSelectedItem("Core");"
  <Catalog>
    <col0>          jcb4Sec.setSelectedItem(Core);</col0>
  </Catalog>
 
"          jcb4Sub.setSelectedItem("G Core");"
  <Catalog>
    <col0>          jcb4Sub.setSelectedItem(G Core);</col0>
  </Catalog>
 
"          jcb4Sys.setSelectedIndex(23);"
  <Catalog>
    <col0>          jcb4Sys.setSelectedIndex(23);</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        default: {"
  <Catalog>
    <col0>        default: {</col0>
  </Catalog>
 
"          jcb4Sec.setSelectedItem("Spinward Marches");"
  <Catalog>
    <col0>          jcb4Sec.setSelectedItem(Spinward Marches);</col0>
  </Catalog>
 
"          jcb4Sub.setSelectedItem("C Regina");"
  <Catalog>
    <col0>          jcb4Sub.setSelectedItem(C Regina);</col0>
  </Catalog>
 
"          jcb4Sys.setSelectedIndex(0);"
  <Catalog>
    <col0>          jcb4Sys.setSelectedIndex(0);</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("3482" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(3482   =   e.toString());</col0>
  </Catalog>
 
"      System.out.println("jcb4Sec" + " = " + jcb4Sec.getSelectedItem()"
  <Catalog>
    <col0>      System.out.println(jcb4Sec   =   jcb4Sec.getSelectedItem()</col0>
  </Catalog>
 
"        .toString());"
  <Catalog>
    <col0>        .toString());</col0>
  </Catalog>
 
"      System.out.println("jcb4Sub" + " = " + jcb4Sub.getSelectedItem()"
  <Catalog>
    <col0>      System.out.println(jcb4Sub   =   jcb4Sub.getSelectedItem()</col0>
  </Catalog>
 
"        .toString());"
  <Catalog>
    <col0>        .toString());</col0>
  </Catalog>
 
"      System.out.println("jcb4Sys" + " = " + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>      System.out.println(jcb4Sys   =   jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"        .toString());"
  <Catalog>
    <col0>        .toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//    }"
  <Catalog>
    <col0>//    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addSecListeners() {"
  <Catalog>
    <col0>  private void addSecListeners() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    final Component[] comps = panel4Sec.getComponents();"
  <Catalog>
    <col0>    final Component[] comps = panel4Sec.getComponents();</col0>
  </Catalog>
 
"    for (int j = 0; j < comps.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < comps.length; j) {</col0>
  </Catalog>
 
"      if (comps[j].getClass().toString().contains("JLabel")) {"
  <Catalog>
    <col0>      if (comps[j].getClass().toString().contains(JLabel)) {</col0>
  </Catalog>
 
"        final JLabel lab = (JLabel) comps[j];"
  <Catalog>
    <col0>        final JLabel lab = (JLabel) comps[j];</col0>
  </Catalog>
 
"        lab.addMouseListener(new MouseAdapter() {"
  <Catalog>
    <col0>        lab.addMouseListener(new MouseAdapter() {</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          @Override"
  <Catalog>
    <col0>          @Override</col0>
  </Catalog>
 
"          public void mouseClicked(MouseEvent e) {"
  <Catalog>
    <col0>          public void mouseClicked(MouseEvent e) {</col0>
  </Catalog>
 
"            jcb4Sec.setSelectedItem(lab.getToolTipText());"
  <Catalog>
    <col0>            jcb4Sec.setSelectedItem(lab.getToolTipText());</col0>
  </Catalog>
 
"            setSecTips();"
  <Catalog>
    <col0>            setSecTips();</col0>
  </Catalog>
 
"            whiten();"
  <Catalog>
    <col0>            whiten();</col0>
  </Catalog>
 
"            createSubPic();"
  <Catalog>
    <col0>            createSubPic();</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          @Override"
  <Catalog>
    <col0>          @Override</col0>
  </Catalog>
 
"          public void mouseEntered(MouseEvent e) {"
  <Catalog>
    <col0>          public void mouseEntered(MouseEvent e) {</col0>
  </Catalog>
 
"            lab.setToolTipText(getSec(lab.getText()));"
  <Catalog>
    <col0>            lab.setToolTipText(getSec(lab.getText()));</col0>
  </Catalog>
 
"            setSecTips();"
  <Catalog>
    <col0>            setSecTips();</col0>
  </Catalog>
 
"            createSubPic();"
  <Catalog>
    <col0>            createSubPic();</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        });"
  <Catalog>
    <col0>        });</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    setSecTips();"
  <Catalog>
    <col0>    setSecTips();</col0>
  </Catalog>
 
"//    if (running) {"
  <Catalog>
    <col0>//    if (running) {</col0>
  </Catalog>
 
"//      if (jcb4Sec.getSelectedItem() != "") {"
  <Catalog>
    <col0>//      if (jcb4Sec.getSelectedItem() != ) {</col0>
  </Catalog>
 
"//        jcb2cb(jcb4Sec);"
  <Catalog>
    <col0>//        jcb2cb(jcb4Sec);</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//    }"
  <Catalog>
    <col0>//    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addSubListeners() {"
  <Catalog>
    <col0>  private void addSubListeners() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    Component[] comps = panel4Sub.getComponents();"
  <Catalog>
    <col0>    Component[] comps = panel4Sub.getComponents();</col0>
  </Catalog>
 
"    for (Component comp : comps) {"
  <Catalog>
    <col0>    for (Component comp : comps) {</col0>
  </Catalog>
 
"      if (comp.getClass().toString().contains("JLabel")) {"
  <Catalog>
    <col0>      if (comp.getClass().toString().contains(JLabel)) {</col0>
  </Catalog>
 
"        final JLabel lab = (JLabel) comp;"
  <Catalog>
    <col0>        final JLabel lab = (JLabel) comp;</col0>
  </Catalog>
 
"        lab.addMouseListener(new MouseAdapter() {"
  <Catalog>
    <col0>        lab.addMouseListener(new MouseAdapter() {</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          @Override"
  <Catalog>
    <col0>          @Override</col0>
  </Catalog>
 
"          public void mouseClicked(MouseEvent e) {"
  <Catalog>
    <col0>          public void mouseClicked(MouseEvent e) {</col0>
  </Catalog>
 
"            for (int k = 0; k < jcb4Sub.getItemCount(); k++) {"
  <Catalog>
    <col0>            for (int k = 0; k < jcb4Sub.getItemCount(); k) {</col0>
  </Catalog>
 
"              if (jcb4Sub.getItemAt(k).toString().startsWith(lab.getText())) {"
  <Catalog>
    <col0>              if (jcb4Sub.getItemAt(k).toString().startsWith(lab.getText())) {</col0>
  </Catalog>
 
"                if (lab.getForeground().equals(dark)) {"
  <Catalog>
    <col0>                if (lab.getForeground().equals(dark)) {</col0>
  </Catalog>
 
"                  jcb4Sub.setSelectedIndex(k);"
  <Catalog>
    <col0>                  jcb4Sub.setSelectedIndex(k);</col0>
  </Catalog>
 
"                } else {"
  <Catalog>
    <col0>                } else {</col0>
  </Catalog>
 
"                  jcb4Sec.setSelectedItem(lab.getToolTipText());"
  <Catalog>
    <col0>                  jcb4Sec.setSelectedItem(lab.getToolTipText());</col0>
  </Catalog>
 
"                  panel4Sub.unColor();"
  <Catalog>
    <col0>                  panel4Sub.unColor();</col0>
  </Catalog>
 
"                  whitenSub(k, lab);"
  <Catalog>
    <col0>                  whitenSub(k, lab);</col0>
  </Catalog>
 
"                }"
  <Catalog>
    <col0>                }</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            setSecTips();"
  <Catalog>
    <col0>            setSecTips();</col0>
  </Catalog>
 
"            createSubPic();"
  <Catalog>
    <col0>            createSubPic();</col0>
  </Catalog>
 
"//            if (running) {"
  <Catalog>
    <col0>//            if (running) {</col0>
  </Catalog>
 
"//              if (jcb4Sub.getSelectedItem() != "") {"
  <Catalog>
    <col0>//              if (jcb4Sub.getSelectedItem() != ) {</col0>
  </Catalog>
 
"//                jcb2cb(jcb4Sub);"
  <Catalog>
    <col0>//                jcb2cb(jcb4Sub);</col0>
  </Catalog>
 
"//              }"
  <Catalog>
    <col0>//              }</col0>
  </Catalog>
 
"//            }"
  <Catalog>
    <col0>//            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          @Override"
  <Catalog>
    <col0>          @Override</col0>
  </Catalog>
 
"          public void mouseEntered(MouseEvent e) {"
  <Catalog>
    <col0>          public void mouseEntered(MouseEvent e) {</col0>
  </Catalog>
 
"            lab.setToolTipText(getSub(lab, lab.getName()));"
  <Catalog>
    <col0>            lab.setToolTipText(getSub(lab, lab.getName()));</col0>
  </Catalog>
 
"            setSecTips();"
  <Catalog>
    <col0>            setSecTips();</col0>
  </Catalog>
 
"            createSubPic();"
  <Catalog>
    <col0>            createSubPic();</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"        });"
  <Catalog>
    <col0>        });</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    setSecTips();"
  <Catalog>
    <col0>    setSecTips();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void whitenSub(int k, JLabel lab) {"
  <Catalog>
    <col0>  private void whitenSub(int k, JLabel lab) {</col0>
  </Catalog>
 
"    Component[] coms = panel4Sub.getComponents();"
  <Catalog>
    <col0>    Component[] coms = panel4Sub.getComponents();</col0>
  </Catalog>
 
"    JLabel jl = new JLabel();"
  <Catalog>
    <col0>    JLabel jl = new JLabel();</col0>
  </Catalog>
 
"    for (int l = 0; l < coms.length; l++) {"
  <Catalog>
    <col0>    for (int l = 0; l < coms.length; l) {</col0>
  </Catalog>
 
"      jl = (JLabel) coms[l];"
  <Catalog>
    <col0>      jl = (JLabel) coms[l];</col0>
  </Catalog>
 
"      if (jl.getForeground().equals(dark) & (jl.getText().equals(lab.getText()))) {"
  <Catalog>
    <col0>      if (jl.getForeground().equals(dark) & (jl.getText().equals(lab.getText()))) {</col0>
  </Catalog>
 
"        panel4Sub.recolor(l);"
  <Catalog>
    <col0>        panel4Sub.recolor(l);</col0>
  </Catalog>
 
"        jcb4Sub.setSelectedIndex(k);"
  <Catalog>
    <col0>        jcb4Sub.setSelectedIndex(k);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addSysListeners() {"
  <Catalog>
    <col0>  private void addSysListeners() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getSec(String text) {"
  <Catalog>
    <col0>  private String getSec(String text) {</col0>
  </Catalog>
 
"    for (String sec : secs) {"
  <Catalog>
    <col0>    for (String sec : secs) {</col0>
  </Catalog>
 
"      if (sec.endsWith("," + text)) {"
  <Catalog>
    <col0>      if (sec.endsWith(</col0>
    <col1>  text)) {</col1>
  </Catalog>
 
"        return sec.substring(0, sec.indexOf(','));"
  <Catalog>
    <col0>        return sec.substring(0, sec.indexOf(','));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return "Unnamed";"
  <Catalog>
    <col0>    return Unnamed;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getSub(JLabel label, String name) {"
  <Catalog>
    <col0>  private String getSub(JLabel label, String name) {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      if (label.getForeground().equals(dark)) {"
  <Catalog>
    <col0>      if (label.getForeground().equals(dark)) {</col0>
  </Catalog>
 
"        for (int j = 0; j < 16; j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < 16; j) {</col0>
  </Catalog>
 
"          sub = jcb4Sub.getItemAt(j).toString();"
  <Catalog>
    <col0>          sub = jcb4Sub.getItemAt(j).toString();</col0>
  </Catalog>
 
"          if (sub.startsWith(label.getText().substring(0, 1))) {"
  <Catalog>
    <col0>          if (sub.startsWith(label.getText().substring(0, 1))) {</col0>
  </Catalog>
 
"            return jcb4Sec.getSelectedItem().toString() + " - " + sub;"
  <Catalog>
    <col0>            return jcb4Sec.getSelectedItem().toString()   -   sub;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (label.getForeground().equals(Color.green)) {"
  <Catalog>
    <col0>      if (label.getForeground().equals(Color.green)) {</col0>
  </Catalog>
 
"        if (label.getText().equals("P")) {"
  <Catalog>
    <col0>        if (label.getText().equals(P)) {</col0>
  </Catalog>
 
"          return getOutSec("Top Left");"
  <Catalog>
    <col0>          return getOutSec(Top Left);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (label.getText().equals("M")) {"
  <Catalog>
    <col0>        if (label.getText().equals(M)) {</col0>
  </Catalog>
 
"          return getOutSec("Top Right");"
  <Catalog>
    <col0>          return getOutSec(Top Right);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (label.getText().equals("D")) {"
  <Catalog>
    <col0>        if (label.getText().equals(D)) {</col0>
  </Catalog>
 
"          return getOutSec("Bottom Left");"
  <Catalog>
    <col0>          return getOutSec(Bottom Left);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (label.getText().equals("A")) {"
  <Catalog>
    <col0>        if (label.getText().equals(A)) {</col0>
  </Catalog>
 
"          return getOutSec("Bottom Right");"
  <Catalog>
    <col0>          return getOutSec(Bottom Right);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (label.getForeground().equals(Color.cyan)) {"
  <Catalog>
    <col0>      if (label.getForeground().equals(Color.cyan)) {</col0>
  </Catalog>
 
"        if (name == "2" | name == "3" | name == "4" | name == "5") {"
  <Catalog>
    <col0>        if (name == 2 | name == 3 | name == 4 | name == 5) {</col0>
  </Catalog>
 
"          return getOutSec("Top");"
  <Catalog>
    <col0>          return getOutSec(Top);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (name == "7" | name == "13" | name == "19" | name == "25") {"
  <Catalog>
    <col0>        if (name == 7 | name == 13 | name == 19 | name == 25) {</col0>
  </Catalog>
 
"          return getOutSec("Left");"
  <Catalog>
    <col0>          return getOutSec(Left);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (name == "12" | name == "18" | name == "24" | name == "30") {"
  <Catalog>
    <col0>        if (name == 12 | name == 18 | name == 24 | name == 30) {</col0>
  </Catalog>
 
"          return getOutSec("Right");"
  <Catalog>
    <col0>          return getOutSec(Right);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (name == "32" | name == "33" | name == "34" | name == "35") {"
  <Catalog>
    <col0>        if (name == 32 | name == 33 | name == 34 | name == 35) {</col0>
  </Catalog>
 
"          return getOutSec("Bottom");"
  <Catalog>
    <col0>          return getOutSec(Bottom);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      return "Unnamed";"
  <Catalog>
    <col0>      return Unnamed;</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("1962" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(1962   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return null;"
  <Catalog>
    <col0>    return null;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getOutSec(String string) {"
  <Catalog>
    <col0>  private String getOutSec(String string) {</col0>
  </Catalog>
 
"    String s = "NOT YET";"
  <Catalog>
    <col0>    String s = NOT YET;</col0>
  </Catalog>
 
"    switch (string) {"
  <Catalog>
    <col0>    switch (string) {</col0>
  </Catalog>
 
"      case "Top Left": {"
  <Catalog>
    <col0>      case Top Left: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel1.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel1.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Top": {"
  <Catalog>
    <col0>      case Top: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel2.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel2.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Top Right": {"
  <Catalog>
    <col0>      case Top Right: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel3.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel3.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Left": {"
  <Catalog>
    <col0>      case Left: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel8.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel8.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Right": {"
  <Catalog>
    <col0>      case Right: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel4.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel4.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Bottom Left": {"
  <Catalog>
    <col0>      case Bottom Left: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel7.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel7.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Bottom": {"
  <Catalog>
    <col0>      case Bottom: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel6.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel6.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Bottom Right": {"
  <Catalog>
    <col0>      case Bottom Right: {</col0>
  </Catalog>
 
"        s = panel4Sec.jLabel5.getToolTipText();"
  <Catalog>
    <col0>        s = panel4Sec.jLabel5.getToolTipText();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        JOptionPane.showMessageDialog(jcb4Sec, s);"
  <Catalog>
    <col0>        JOptionPane.showMessageDialog(jcb4Sec, s);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return s;"
  <Catalog>
    <col0>    return s;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void setSecTips() {"
  <Catalog>
    <col0>  private void setSecTips() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    for (int j = 0; j < 9; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < 9; j) {</col0>
  </Catalog>
 
"      JLabel lab = (JLabel) panel4Sec.getComponent(j);"
  <Catalog>
    <col0>      JLabel lab = (JLabel) panel4Sec.getComponent(j);</col0>
  </Catalog>
 
"      lab.setToolTipText(getSec(lab.getText()));"
  <Catalog>
    <col0>      lab.setToolTipText(getSec(lab.getText()));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void setSubTips() {"
  <Catalog>
    <col0>  private void setSubTips() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("DEBUG" + " = " + DEBUG);"
  <Catalog>
    <col0>      //System.out.println(DEBUG   =   DEBUG);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void whiten() {"
  <Catalog>
    <col0>  private void whiten() {</col0>
  </Catalog>
 
"    JLabel lab = null;"
  <Catalog>
    <col0>    JLabel lab = null;</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="switch (jComboBox2.getSelectedIndex())">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=switch (jComboBox2.getSelectedIndex())></col0>
  </Catalog>
 
"    switch (jcb4Sub.getSelectedIndex()) {"
  <Catalog>
    <col0>    switch (jcb4Sub.getSelectedIndex()) {</col0>
  </Catalog>
 
"      case 0: {"
  <Catalog>
    <col0>      case 0: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel8;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel8;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 1: {"
  <Catalog>
    <col0>      case 1: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel9;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 2: {"
  <Catalog>
    <col0>      case 2: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel10;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel10;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 3: {"
  <Catalog>
    <col0>      case 3: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel11;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel11;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 4: {"
  <Catalog>
    <col0>      case 4: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel14;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel14;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 5: {"
  <Catalog>
    <col0>      case 5: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel15;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel15;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 6: {"
  <Catalog>
    <col0>      case 6: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel16;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel16;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 7: {"
  <Catalog>
    <col0>      case 7: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel17;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel17;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 8: {"
  <Catalog>
    <col0>      case 8: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel20;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel20;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 9: {"
  <Catalog>
    <col0>      case 9: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel21;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel21;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 10: {"
  <Catalog>
    <col0>      case 10: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel22;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel22;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 11: {"
  <Catalog>
    <col0>      case 11: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel23;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel23;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 12: {"
  <Catalog>
    <col0>      case 12: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel26;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel26;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 13: {"
  <Catalog>
    <col0>      case 13: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel27;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel27;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 14: {"
  <Catalog>
    <col0>      case 14: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel28;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel28;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case 15: {"
  <Catalog>
    <col0>      case 15: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel29;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel29;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        lab = panel4Sub.jLabel8;"
  <Catalog>
    <col0>        lab = panel4Sub.jLabel8;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    whitenSub(jcb4Sub.getSelectedIndex(), lab);"
  <Catalog>
    <col0>    whitenSub(jcb4Sub.getSelectedIndex(), lab);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void findSystem(String string) {"
  <Catalog>
    <col0>  private void findSystem(String string) {</col0>
  </Catalog>
 
"    X = string.substring(0, 2);"
  <Catalog>
    <col0>    X = string.substring(0, 2);</col0>
  </Catalog>
 
"    Y = string.substring(2, 4);"
  <Catalog>
    <col0>    Y = string.substring(2, 4);</col0>
  </Catalog>
 
"    boolean o = false;"
  <Catalog>
    <col0>    boolean o = false;</col0>
  </Catalog>
 
"    for (int j = 0; j < jcb4Sys.getItemCount(); j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < jcb4Sys.getItemCount(); j) {</col0>
  </Catalog>
 
"      if (jcb4Sys.getItemAt(j).toString().startsWith("" + X + Y)) {"
  <Catalog>
    <col0>      if (jcb4Sys.getItemAt(j).toString().startsWith(  X  Y)) {</col0>
  </Catalog>
 
"        jcb4Sys.setSelectedIndex(j);"
  <Catalog>
    <col0>        jcb4Sys.setSelectedIndex(j);</col0>
  </Catalog>
 
"        o = true;"
  <Catalog>
    <col0>        o = true;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void writeSectorInfo() {"
  <Catalog>
    <col0>  private void writeSectorInfo() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String str = null;"
  <Catalog>
    <col0>    String str = null;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      jta4Sec.setText(jcb4Sec.getSelectedItem().toString().toUpperCase() + CRLF);"
  <Catalog>
    <col0>      jta4Sec.setText(jcb4Sec.getSelectedItem().toString().toUpperCase()  CRLF);</col0>
  </Catalog>
 
"      int count;"
  <Catalog>
    <col0>      int count;</col0>
  </Catalog>
 
"      count = 0;"
  <Catalog>
    <col0>      count = 0;</col0>
  </Catalog>
 
"      for (int j = world1; j < lines.length; j++) {"
  <Catalog>
    <col0>      for (int j = world1; j < lines.length; j) {</col0>
  </Catalog>
 
"        count += 1;"
  <Catalog>
    <col0>        count = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jta4Sec.append(CRLF + "\tWorlds in sector = ".toUpperCase() + count"
  <Catalog>
    <col0>      jta4Sec.append(CRLF  \tWorlds in sector = .toUpperCase()  count</col0>
  </Catalog>
 
"        + CRLF);"
  <Catalog>
    <col0>         CRLF);</col0>
  </Catalog>
 
"      worlds = count;"
  <Catalog>
    <col0>      worlds = count;</col0>
  </Catalog>
 
"      if (count > 0) {"
  <Catalog>
    <col0>      if (count > 0) {</col0>
  </Catalog>
 
"        count = 0;"
  <Catalog>
    <col0>        count = 0;</col0>
  </Catalog>
 
"        for (String line : lines) {"
  <Catalog>
    <col0>        for (String line : lines) {</col0>
  </Catalog>
 
"          if (line.contains("Alleg")) {"
  <Catalog>
    <col0>          if (line.contains(Alleg)) {</col0>
  </Catalog>
 
"            count += 1;"
  <Catalog>
    <col0>            count = 1;</col0>
  </Catalog>
 
"            jta4Sec.append("\t" + line.substring(9));"
  <Catalog>
    <col0>            jta4Sec.append(\t  line.substring(9));</col0>
  </Catalog>
 
"            jta4Sec.append(" = " + getAlliedWorldCount("Sec", line.substring(9,"
  <Catalog>
    <col0>            jta4Sec.append( =   getAlliedWorldCount(Sec, line.substring(9,</col0>
  </Catalog>
 
"              13)) + " worlds");"
  <Catalog>
    <col0>              13))   worlds);</col0>
  </Catalog>
 
"            jta4Sec.append(CRLF);"
  <Catalog>
    <col0>            jta4Sec.append(CRLF);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      count = 0;"
  <Catalog>
    <col0>      count = 0;</col0>
  </Catalog>
 
"      String[] names;"
  <Catalog>
    <col0>      String[] names;</col0>
  </Catalog>
 
"      String[] tmp;"
  <Catalog>
    <col0>      String[] tmp;</col0>
  </Catalog>
 
"      tmp = new String[10];"
  <Catalog>
    <col0>      tmp = new String[10];</col0>
  </Catalog>
 
"      jta4Sec.append(CRLF + "\tRacial Names of sector".toUpperCase() + CRLF);"
  <Catalog>
    <col0>      jta4Sec.append(CRLF  \tRacial Names of sector.toUpperCase()  CRLF);</col0>
  </Catalog>
 
"      for (int j = 0; j < world1; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < world1; j) {</col0>
  </Catalog>
 
"        str = "# Name: ";"
  <Catalog>
    <col0>        str = # Name: ;</col0>
  </Catalog>
 
"        if (lines[j].startsWith(str)) {"
  <Catalog>
    <col0>        if (lines[j].startsWith(str)) {</col0>
  </Catalog>
 
"          tmp[count] = lines[j].substring(str.length()).trim();"
  <Catalog>
    <col0>          tmp[count] = lines[j].substring(str.length()).trim();</col0>
  </Catalog>
 
"          count += 1;"
  <Catalog>
    <col0>          count = 1;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      names = new String[count];"
  <Catalog>
    <col0>      names = new String[count];</col0>
  </Catalog>
 
"      for (int j = 0; j < count; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < count; j) {</col0>
  </Catalog>
 
"        names[j] = tmp[j];"
  <Catalog>
    <col0>        names[j] = tmp[j];</col0>
  </Catalog>
 
"        jta4Sec.append("\t" + names[j] + CRLF);"
  <Catalog>
    <col0>        jta4Sec.append(\t  names[j]  CRLF);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      count = 0;"
  <Catalog>
    <col0>      count = 0;</col0>
  </Catalog>
 
"      for (int j = 0; j < world1; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < world1; j) {</col0>
  </Catalog>
 
"        String cred = "# Credits: ";"
  <Catalog>
    <col0>        String cred = # Credits: ;</col0>
  </Catalog>
 
"        if (lines[j].startsWith(cred)) {"
  <Catalog>
    <col0>        if (lines[j].startsWith(cred)) {</col0>
  </Catalog>
 
"          str = CRLF + "\t" + lines[j].substring(cred.length()).trim();"
  <Catalog>
    <col0>          str = CRLF  \t  lines[j].substring(cred.length()).trim();</col0>
  </Catalog>
 
"          jta4Sec.append(str + CRLF);"
  <Catalog>
    <col0>          jta4Sec.append(str  CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        String era = "# Era: ";"
  <Catalog>
    <col0>        String era = # Era: ;</col0>
  </Catalog>
 
"        if (lines[j].startsWith(era)) {"
  <Catalog>
    <col0>        if (lines[j].startsWith(era)) {</col0>
  </Catalog>
 
"          str = CRLF + "\t" + lines[j].substring(era.length()).trim();"
  <Catalog>
    <col0>          str = CRLF  \t  lines[j].substring(era.length()).trim();</col0>
  </Catalog>
 
"          jta4Sec.append(str + CRLF);"
  <Catalog>
    <col0>          jta4Sec.append(str  CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        String src = "# Source: ";"
  <Catalog>
    <col0>        String src = # Source: ;</col0>
  </Catalog>
 
"        if (lines[j].startsWith(src)) {"
  <Catalog>
    <col0>        if (lines[j].startsWith(src)) {</col0>
  </Catalog>
 
"          str = CRLF + "\t" + lines[j].substring(src.length()).trim();"
  <Catalog>
    <col0>          str = CRLF  \t  lines[j].substring(src.length()).trim();</col0>
  </Catalog>
 
"          jta4Sec.append(str + CRLF);"
  <Catalog>
    <col0>          jta4Sec.append(str  CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jta4Sec.append(CRLF);"
  <Catalog>
    <col0>      jta4Sec.append(CRLF);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("2163" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(2163   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    getSpaceInfo(lines[world1 - 1]);"
  <Catalog>
    <col0>    getSpaceInfo(lines[world1 - 1]);</col0>
  </Catalog>
 
"    jta4Sec.append(calcBreakdown("sec") + CRLF);"
  <Catalog>
    <col0>    jta4Sec.append(calcBreakdown(sec)  CRLF);</col0>
  </Catalog>
 
"//    {"
  <Catalog>
    <col0>//    {</col0>
  </Catalog>
 
"    JTextArea jta = new JTextArea(20, 20);"
  <Catalog>
    <col0>    JTextArea jta = new JTextArea(20, 20);</col0>
  </Catalog>
 
"    jta.setText(str);"
  <Catalog>
    <col0>    jta.setText(str);</col0>
  </Catalog>
 
"    JScrollPane jsp = new JScrollPane(jta);"
  <Catalog>
    <col0>    JScrollPane jsp = new JScrollPane(jta);</col0>
  </Catalog>
 
"    System.out.println("str" + " = " + str);"
  <Catalog>
    <col0>    System.out.println(str   =   str);</col0>
  </Catalog>
 
"    JOptionPane.showMessageDialog(null, jsp);"
  <Catalog>
    <col0>    JOptionPane.showMessageDialog(null, jsp);</col0>
  </Catalog>
 
"//    }"
  <Catalog>
    <col0>//    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getAlliedWorldCount(String range, String alleg) {"
  <Catalog>
    <col0>  private String getAlliedWorldCount(String range, String alleg) {</col0>
  </Catalog>
 
"    if (!isPopulated()) {"
  <Catalog>
    <col0>    if (!isPopulated()) {</col0>
  </Catalog>
 
"      return null;"
  <Catalog>
    <col0>      return null;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int count = 0;"
  <Catalog>
    <col0>    int count = 0;</col0>
  </Catalog>
 
"    int start = 0;"
  <Catalog>
    <col0>    int start = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < 12; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < 12; j) {</col0>
  </Catalog>
 
"      start += len[j] + 1;"
  <Catalog>
    <col0>      start = len[j]  1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int end = start + 4;"
  <Catalog>
    <col0>    int end = start  4;</col0>
  </Catalog>
 
"    if (range == "Sec") {"
  <Catalog>
    <col0>    if (range == Sec) {</col0>
  </Catalog>
 
"      for (int j = world1; j < lines.length; j++) {"
  <Catalog>
    <col0>      for (int j = world1; j < lines.length; j) {</col0>
  </Catalog>
 
"        if (lines[j].substring(start, end).contains(alleg)) {"
  <Catalog>
    <col0>        if (lines[j].substring(start, end).contains(alleg)) {</col0>
  </Catalog>
 
"          count += 1;"
  <Catalog>
    <col0>          count = 1;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else {//Subsector"
  <Catalog>
    <col0>    } else {//Subsector</col0>
  </Catalog>
 
"      for (int j = world1; j < lines.length; j++) {"
  <Catalog>
    <col0>      for (int j = world1; j < lines.length; j) {</col0>
  </Catalog>
 
"        if (lines[j].substring(start, end).contains(alleg)) {"
  <Catalog>
    <col0>        if (lines[j].substring(start, end).contains(alleg)) {</col0>
  </Catalog>
 
"          for (int k = 0; k < jcb4Sys.getItemCount(); k++) {"
  <Catalog>
    <col0>          for (int k = 0; k < jcb4Sys.getItemCount(); k) {</col0>
  </Catalog>
 
"            if (jcb4Sys.getItemAt(k).toString().startsWith(lines[j].substring(0,"
  <Catalog>
    <col0>            if (jcb4Sys.getItemAt(k).toString().startsWith(lines[j].substring(0,</col0>
  </Catalog>
 
"              4))) {"
  <Catalog>
    <col0>              4))) {</col0>
  </Catalog>
 
"              count += 1;"
  <Catalog>
    <col0>              count = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return "" + count;"
  <Catalog>
    <col0>    return   count;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void writeSubsectorInfo() {"
  <Catalog>
    <col0>  private void writeSubsectorInfo() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      jta4Sub.setText("
  <Catalog>
    <col0>      jta4Sub.setText(</col0>
  </Catalog>
 
"        jcb4Sub.getSelectedItem().toString().toUpperCase() + CRLF);"
  <Catalog>
    <col0>        jcb4Sub.getSelectedItem().toString().toUpperCase()  CRLF);</col0>
  </Catalog>
 
"      jta4Sub.append(CRLF + "\tWorlds in Subsector = ".toUpperCase() + jcb4Sys"
  <Catalog>
    <col0>      jta4Sub.append(CRLF  \tWorlds in Subsector = .toUpperCase()  jcb4Sys</col0>
  </Catalog>
 
"        .getItemCount() + CRLF);"
  <Catalog>
    <col0>        .getItemCount()  CRLF);</col0>
  </Catalog>
 
"      if (jcb4Sys.getItemCount() > 0) {"
  <Catalog>
    <col0>      if (jcb4Sys.getItemCount() > 0) {</col0>
  </Catalog>
 
"        for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"          if (lines[j].contains("Alleg")) {"
  <Catalog>
    <col0>          if (lines[j].contains(Alleg)) {</col0>
  </Catalog>
 
"            if (!getAlliedWorldCount("Sub", lines[j].substring(9, 13)).equals("
  <Catalog>
    <col0>            if (!getAlliedWorldCount(Sub, lines[j].substring(9, 13)).equals(</col0>
  </Catalog>
 
"              "0")) {"
  <Catalog>
    <col0>              0)) {</col0>
  </Catalog>
 
"              jta4Sub.append("\t" + lines[j].substring(9));"
  <Catalog>
    <col0>              jta4Sub.append(\t  lines[j].substring(9));</col0>
  </Catalog>
 
"              jta4Sub.append(" = " + getAlliedWorldCount("Sub","
  <Catalog>
    <col0>              jta4Sub.append( =   getAlliedWorldCount(Sub</col0>
  </Catalog>
 
"                lines[j].substring(9, 13)) + " worlds");"
  <Catalog>
    <col0>                lines[j].substring(9, 13))   worlds);</col0>
  </Catalog>
 
"              jta4Sub.append(CRLF);"
  <Catalog>
    <col0>              jta4Sub.append(CRLF);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jta4Line.setText("");"
  <Catalog>
    <col0>      jta4Line.setText();</col0>
  </Catalog>
 
"      jta4Line.append(getSpaceInfo(lines[world1 - 2]) + CRLF);"
  <Catalog>
    <col0>      jta4Line.append(getSpaceInfo(lines[world1 - 2])  CRLF);</col0>
  </Catalog>
 
"      jta4Line.append(getSpaceInfo(lines[world1 - 1]) + CRLF);"
  <Catalog>
    <col0>      jta4Line.append(getSpaceInfo(lines[world1 - 1])  CRLF);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      jta4Bases.setText("");"
  <Catalog>
    <col0>      jta4Bases.setText();</col0>
  </Catalog>
 
"      sub = jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>      sub = jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"      jta4Bases.append(sub + CRLF);"
  <Catalog>
    <col0>      jta4Bases.append(sub  CRLF);</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>        System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"        System.out.println("sub" + " = " + sub);"
  <Catalog>
    <col0>        System.out.println(sub   =   sub);</col0>
  </Catalog>
 
"        System.out.println(getSpaceInfo(lines[world1 - 1]));"
  <Catalog>
    <col0>        System.out.println(getSpaceInfo(lines[world1 - 1]));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      ArrayList<String> Bases = new ArrayList<>();"
  <Catalog>
    <col0>      ArrayList<String> Bases = new ArrayList<>();</col0>
  </Catalog>
 
"      for (int j = world1 - 1; j < lines.length; j++) {"
  <Catalog>
    <col0>      for (int j = world1 - 1; j < lines.length; j) {</col0>
  </Catalog>
 
"        String line;"
  <Catalog>
    <col0>        String line;</col0>
  </Catalog>
 
"        if (j == world1 - 1) {"
  <Catalog>
    <col0>        if (j == world1 - 1) {</col0>
  </Catalog>
 
"          line = getSpaceInfo(lines[j]);"
  <Catalog>
    <col0>          line = getSpaceInfo(lines[j]);</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          line = lines[j];"
  <Catalog>
    <col0>          line = lines[j];</col0>
  </Catalog>
 
"          //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>          //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"          if (DEBUG) {"
  <Catalog>
    <col0>          if (DEBUG) {</col0>
  </Catalog>
 
"            System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>            System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"            System.out.println("line" + " = " + line);"
  <Catalog>
    <col0>            System.out.println(line   =   line);</col0>
  </Catalog>
 
"            System.out.println("bits[8]" + " = " + bits[8]);"
  <Catalog>
    <col0>            System.out.println(bits[8]   =   bits[8]);</col0>
  </Catalog>
 
"            System.out.println("line.substring(len[8])" + " = " + line"
  <Catalog>
    <col0>            System.out.println(line.substring(len[8])   =   line</col0>
  </Catalog>
 
"              .substring(len[8]));"
  <Catalog>
    <col0>              .substring(len[8]));</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //</editor-fold>"
  <Catalog>
    <col0>          //</editor-fold></col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("2218" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(2218   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showExtra() {"
  <Catalog>
    <col0>  private void showExtra() {</col0>
  </Catalog>
 
"    data = jta4Sys.getText().split(CRLF);"
  <Catalog>
    <col0>    data = jta4Sys.getText().split(CRLF);</col0>
  </Catalog>
 
"    jta4Info.setText("");"
  <Catalog>
    <col0>    jta4Info.setText();</col0>
  </Catalog>
 
"    setUWP();"
  <Catalog>
    <col0>    setUWP();</col0>
  </Catalog>
 
"    for (int j = 0; j < data.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < data.length; j) {</col0>
  </Catalog>
 
"      String dat = data[j];"
  <Catalog>
    <col0>      String dat = data[j];</col0>
  </Catalog>
 
"      jta4Info.append(getInfo(dat));"
  <Catalog>
    <col0>      jta4Info.append(getInfo(dat));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jta4Info.append(CRLF);"
  <Catalog>
    <col0>    jta4Info.append(CRLF);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getInfo(String dat) {"
  <Catalog>
    <col0>  private String getInfo(String dat) {</col0>
  </Catalog>
 
"    out = "";"
  <Catalog>
    <col0>    out = ;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      switch (dat.substring(0, dat.indexOf(" = ")).trim()) {"
  <Catalog>
    <col0>      switch (dat.substring(0, dat.indexOf( = )).trim()) {</col0>
  </Catalog>
 
"        case "Hex": {"
  <Catalog>
    <col0>        case Hex: {</col0>
  </Catalog>
 
"          out += getHex() + CRLF;"
  <Catalog>
    <col0>          out = getHex()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Name": {"
  <Catalog>
    <col0>        case Name: {</col0>
  </Catalog>
 
"          out += getSystemName() + CRLF;"
  <Catalog>
    <col0>          out = getSystemName()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "UWP": {"
  <Catalog>
    <col0>        case UWP: {</col0>
  </Catalog>
 
"          out += getUWP() + CRLF;"
  <Catalog>
    <col0>          out = getUWP()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Remarks": {"
  <Catalog>
    <col0>        case Remarks: {</col0>
  </Catalog>
 
"          out += getRemarks() + CRLF;"
  <Catalog>
    <col0>          out = getRemarks()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "{Ix}": {"
  <Catalog>
    <col0>        case {Ix}: {</col0>
  </Catalog>
 
"          out += getIx() + CRLF;"
  <Catalog>
    <col0>          out = getIx()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "(Ex)": {"
  <Catalog>
    <col0>        case (Ex): {</col0>
  </Catalog>
 
"          out += getEx() + CRLF;"
  <Catalog>
    <col0>          out = getEx()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "[Cx]": {"
  <Catalog>
    <col0>        case [Cx]: {</col0>
  </Catalog>
 
"          out += getCx() + CRLF;"
  <Catalog>
    <col0>          out = getCx()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "N": {"
  <Catalog>
    <col0>        case N: {</col0>
  </Catalog>
 
"          out += getN() + CRLF;"
  <Catalog>
    <col0>          out = getN()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "B": {"
  <Catalog>
    <col0>        case B: {</col0>
  </Catalog>
 
"          out += getB() + CRLF;"
  <Catalog>
    <col0>          out = getB()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Z": {"
  <Catalog>
    <col0>        case Z: {</col0>
  </Catalog>
 
"          out += getZ() + CRLF;"
  <Catalog>
    <col0>          out = getZ()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "PBG": {"
  <Catalog>
    <col0>        case PBG: {</col0>
  </Catalog>
 
"          out += getPBG() + CRLF;"
  <Catalog>
    <col0>          out = getPBG()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "W": {"
  <Catalog>
    <col0>        case W: {</col0>
  </Catalog>
 
"          out += getW() + CRLF;"
  <Catalog>
    <col0>          out = getW()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "A": {"
  <Catalog>
    <col0>        case A: {</col0>
  </Catalog>
 
"          out += getA() + CRLF;"
  <Catalog>
    <col0>          out = getA()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "Stellar": {"
  <Catalog>
    <col0>        case Stellar: {</col0>
  </Catalog>
 
"          out += getStellar() + CRLF;"
  <Catalog>
    <col0>          out = getStellar()  CRLF;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        default: {"
  <Catalog>
    <col0>        default: {</col0>
  </Catalog>
 
"          jta4Sys.append(getSpaceInfo(lines[world1 - 2]) + CRLF);"
  <Catalog>
    <col0>          jta4Sys.append(getSpaceInfo(lines[world1 - 2])  CRLF);</col0>
  </Catalog>
 
"          jta4Sys.append(getSpaceInfo(lines[world1 - 1]) + CRLF);"
  <Catalog>
    <col0>          jta4Sys.append(getSpaceInfo(lines[world1 - 1])  CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("2299" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(2299   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out.substring(0, out.length() - 1);"
  <Catalog>
    <col0>    return out.substring(0, out.length() - 1);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getHex() {"
  <Catalog>
    <col0>  private static String getHex() {</col0>
  </Catalog>
 
"    out = data[0] + CRLF;"
  <Catalog>
    <col0>    out = data[0]  CRLF;</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getSystemName() {"
  <Catalog>
    <col0>  private static String getSystemName() {</col0>
  </Catalog>
 
"    out = data[1] + CRLF;"
  <Catalog>
    <col0>    out = data[1]  CRLF;</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getUWP() {"
  <Catalog>
    <col0>  private static String getUWP() {</col0>
  </Catalog>
 
"    setUWP();"
  <Catalog>
    <col0>    setUWP();</col0>
  </Catalog>
 
"    out = "UWP = " + UWP + CRLF;"
  <Catalog>
    <col0>    out = UWP =   UWP  CRLF;</col0>
  </Catalog>
 
"    out += getSP();"
  <Catalog>
    <col0>    out = getSP();</col0>
  </Catalog>
 
"    out += getSiz();"
  <Catalog>
    <col0>    out = getSiz();</col0>
  </Catalog>
 
"    out += getAtmo();"
  <Catalog>
    <col0>    out = getAtmo();</col0>
  </Catalog>
 
"    out += getHydro();"
  <Catalog>
    <col0>    out = getHydro();</col0>
  </Catalog>
 
"    out += getPop();"
  <Catalog>
    <col0>    out = getPop();</col0>
  </Catalog>
 
"    out += getGov();"
  <Catalog>
    <col0>    out = getGov();</col0>
  </Catalog>
 
"    out += getLaw();"
  <Catalog>
    <col0>    out = getLaw();</col0>
  </Catalog>
 
"    out += getTech();"
  <Catalog>
    <col0>    out = getTech();</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void setUWP() {"
  <Catalog>
    <col0>  private static void setUWP() {</col0>
  </Catalog>
 
"    UWP = data[2].substring(data[2].indexOf(" = ") + 3);"
  <Catalog>
    <col0>    UWP = data[2].substring(data[2].indexOf( = )  3);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getSP() {"
  <Catalog>
    <col0>  private static String getSP() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="switch (sp)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=switch (sp)></col0>
  </Catalog>
 
"    String sp = UWP.substring(0, 1);"
  <Catalog>
    <col0>    String sp = UWP.substring(0, 1);</col0>
  </Catalog>
 
"    switch (sp) {"
  <Catalog>
    <col0>    switch (sp) {</col0>
  </Catalog>
 
"      case "A": {"
  <Catalog>
    <col0>      case A: {</col0>
  </Catalog>
 
"        Quality = "Excellent";"
  <Catalog>
    <col0>        Quality = Excellent;</col0>
  </Catalog>
 
"        Yards = "Starships";"
  <Catalog>
    <col0>        Yards = Starships;</col0>
  </Catalog>
 
"        Repairs = "Overhaul";"
  <Catalog>
    <col0>        Repairs = Overhaul;</col0>
  </Catalog>
 
"        Fuel = "Both";"
  <Catalog>
    <col0>        Fuel = Both;</col0>
  </Catalog>
 
"        Downport = "Yes";"
  <Catalog>
    <col0>        Downport = Yes;</col0>
  </Catalog>
 
"        if (GlobalMethods.fromHex(UWP.substring(4, 5)) > 6) {"
  <Catalog>
    <col0>        if (GlobalMethods.fromHex(UWP.substring(4, 5)) > 6) {</col0>
  </Catalog>
 
"          Highport = "Yes";"
  <Catalog>
    <col0>          Highport = Yes;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          Highport = "No";"
  <Catalog>
    <col0>          Highport = No;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        possBases = "NS";"
  <Catalog>
    <col0>        possBases = NS;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "B": {"
  <Catalog>
    <col0>      case B: {</col0>
  </Catalog>
 
"        Quality = "Good";"
  <Catalog>
    <col0>        Quality = Good;</col0>
  </Catalog>
 
"        Yards = "Spaceships";"
  <Catalog>
    <col0>        Yards = Spaceships;</col0>
  </Catalog>
 
"        Repairs = "Overhaul";"
  <Catalog>
    <col0>        Repairs = Overhaul;</col0>
  </Catalog>
 
"        Fuel = "Both";"
  <Catalog>
    <col0>        Fuel = Both;</col0>
  </Catalog>
 
"        Downport = "Yes";"
  <Catalog>
    <col0>        Downport = Yes;</col0>
  </Catalog>
 
"        Highport = "";//if pop 8+"
  <Catalog>
    <col0>        Highport = ;//if pop 8</col0>
  </Catalog>
 
"        if (GlobalMethods.fromHex(UWP.substring(4, 5)) > 7) {"
  <Catalog>
    <col0>        if (GlobalMethods.fromHex(UWP.substring(4, 5)) > 7) {</col0>
  </Catalog>
 
"          Highport = "Yes";"
  <Catalog>
    <col0>          Highport = Yes;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          Highport = "No";"
  <Catalog>
    <col0>          Highport = No;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        possBases = "NS";"
  <Catalog>
    <col0>        possBases = NS;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "C": {"
  <Catalog>
    <col0>      case C: {</col0>
  </Catalog>
 
"        Quality = "Routine";"
  <Catalog>
    <col0>        Quality = Routine;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "Major damage";"
  <Catalog>
    <col0>        Repairs = Major damage;</col0>
  </Catalog>
 
"        Fuel = "Unrefined";"
  <Catalog>
    <col0>        Fuel = Unrefined;</col0>
  </Catalog>
 
"        Downport = "Yes";"
  <Catalog>
    <col0>        Downport = Yes;</col0>
  </Catalog>
 
"        Highport = "";//if pop 7+"
  <Catalog>
    <col0>        Highport = ;//if pop 7</col0>
  </Catalog>
 
"        if (GlobalMethods.fromHex(UWP.substring(4, 5)) > 8) {"
  <Catalog>
    <col0>        if (GlobalMethods.fromHex(UWP.substring(4, 5)) > 8) {</col0>
  </Catalog>
 
"          Highport = "Yes";"
  <Catalog>
    <col0>          Highport = Yes;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          Highport = "No";"
  <Catalog>
    <col0>          Highport = No;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        possBases = "S";"
  <Catalog>
    <col0>        possBases = S;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "D": {"
  <Catalog>
    <col0>      case D: {</col0>
  </Catalog>
 
"        Quality = "Poor";"
  <Catalog>
    <col0>        Quality = Poor;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "Minor damage";"
  <Catalog>
    <col0>        Repairs = Minor damage;</col0>
  </Catalog>
 
"        Fuel = "Unrefined";"
  <Catalog>
    <col0>        Fuel = Unrefined;</col0>
  </Catalog>
 
"        Downport = "Yes";"
  <Catalog>
    <col0>        Downport = Yes;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "S";"
  <Catalog>
    <col0>        possBases = S;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "E": {"
  <Catalog>
    <col0>      case E: {</col0>
  </Catalog>
 
"        Quality = "Frontier";"
  <Catalog>
    <col0>        Quality = Frontier;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "No";"
  <Catalog>
    <col0>        Repairs = No;</col0>
  </Catalog>
 
"        Fuel = "No";"
  <Catalog>
    <col0>        Fuel = No;</col0>
  </Catalog>
 
"        Downport = "Beacon";"
  <Catalog>
    <col0>        Downport = Beacon;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "No";"
  <Catalog>
    <col0>        possBases = No;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "X": {"
  <Catalog>
    <col0>      case X: {</col0>
  </Catalog>
 
"        Quality = "None";"
  <Catalog>
    <col0>        Quality = None;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "No";"
  <Catalog>
    <col0>        Repairs = No;</col0>
  </Catalog>
 
"        Fuel = "No";"
  <Catalog>
    <col0>        Fuel = No;</col0>
  </Catalog>
 
"        Downport = "No";"
  <Catalog>
    <col0>        Downport = No;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "No";"
  <Catalog>
    <col0>        possBases = No;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "F": {"
  <Catalog>
    <col0>      case F: {</col0>
  </Catalog>
 
"        Quality = "Good";"
  <Catalog>
    <col0>        Quality = Good;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "Minor";"
  <Catalog>
    <col0>        Repairs = Minor;</col0>
  </Catalog>
 
"        Fuel = "Unrefined";"
  <Catalog>
    <col0>        Fuel = Unrefined;</col0>
  </Catalog>
 
"        Downport = "Yes";"
  <Catalog>
    <col0>        Downport = Yes;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "Fa Farming Possible";"
  <Catalog>
    <col0>        possBases = Fa Farming Possible;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "G": {"
  <Catalog>
    <col0>      case G: {</col0>
  </Catalog>
 
"        Quality = "Poor";"
  <Catalog>
    <col0>        Quality = Poor;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "Superficial";"
  <Catalog>
    <col0>        Repairs = Superficial;</col0>
  </Catalog>
 
"        Fuel = "Unrefined";"
  <Catalog>
    <col0>        Fuel = Unrefined;</col0>
  </Catalog>
 
"        Downport = "Yes";"
  <Catalog>
    <col0>        Downport = Yes;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "Mi Mining Possible.";"
  <Catalog>
    <col0>        possBases = Mi Mining Possible.;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "H": {"
  <Catalog>
    <col0>      case H: {</col0>
  </Catalog>
 
"        Quality = "Primitive";"
  <Catalog>
    <col0>        Quality = Primitive;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "No";"
  <Catalog>
    <col0>        Repairs = No;</col0>
  </Catalog>
 
"        Fuel = "No";"
  <Catalog>
    <col0>        Fuel = No;</col0>
  </Catalog>
 
"        Downport = "Beacon";"
  <Catalog>
    <col0>        Downport = Beacon;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "Co Colony Possible.  Pe Penal colony Possible";"
  <Catalog>
    <col0>        possBases = Co Colony Possible.  Pe Penal colony Possible;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Y": {"
  <Catalog>
    <col0>      case Y: {</col0>
  </Catalog>
 
"        Quality = "None";"
  <Catalog>
    <col0>        Quality = None;</col0>
  </Catalog>
 
"        Yards = "No";"
  <Catalog>
    <col0>        Yards = No;</col0>
  </Catalog>
 
"        Repairs = "No";"
  <Catalog>
    <col0>        Repairs = No;</col0>
  </Catalog>
 
"        Fuel = "No";"
  <Catalog>
    <col0>        Fuel = No;</col0>
  </Catalog>
 
"        Downport = "No";"
  <Catalog>
    <col0>        Downport = No;</col0>
  </Catalog>
 
"        Highport = "No";"
  <Catalog>
    <col0>        Highport = No;</col0>
  </Catalog>
 
"        possBases = "Re Reserve Possible";"
  <Catalog>
    <col0>        possBases = Re Reserve Possible;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "?": {"
  <Catalog>
    <col0>      case ?: {</col0>
  </Catalog>
 
"        Quality = "?";"
  <Catalog>
    <col0>        Quality = ?;</col0>
  </Catalog>
 
"        Yards = "?";"
  <Catalog>
    <col0>        Yards = ?;</col0>
  </Catalog>
 
"        Repairs = "?";"
  <Catalog>
    <col0>        Repairs = ?;</col0>
  </Catalog>
 
"        Fuel = "?";"
  <Catalog>
    <col0>        Fuel = ?;</col0>
  </Catalog>
 
"        Downport = "?";"
  <Catalog>
    <col0>        Downport = ?;</col0>
  </Catalog>
 
"        Highport = "?";"
  <Catalog>
    <col0>        Highport = ?;</col0>
  </Catalog>
 
"        possBases = "?";"
  <Catalog>
    <col0>        possBases = ?;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String[] StarportUpdate = new String[]{"
  <Catalog>
    <col0>    String[] StarportUpdate = new String[]{</col0>
  </Catalog>
 
"      "Starport = " + UWP.substring(0, 1),"
  <Catalog>
    <col0>      Starport =   UWP.substring(0, 1),</col0>
  </Catalog>
 
"      "\tQuality = " + Quality,"
  <Catalog>
    <col0>      \tQuality =   Quality,</col0>
  </Catalog>
 
"      "\tYards = " + Yards,"
  <Catalog>
    <col0>      \tYards =   Yards,</col0>
  </Catalog>
 
"      "\tRepairs = " + Repairs,"
  <Catalog>
    <col0>      \tRepairs =   Repairs,</col0>
  </Catalog>
 
"      "\tFuel = " + Fuel,"
  <Catalog>
    <col0>      \tFuel =   Fuel,</col0>
  </Catalog>
 
"      "\tDownport = " + Downport,"
  <Catalog>
    <col0>      \tDownport =   Downport,</col0>
  </Catalog>
 
"      "\tHighport = " + Highport,"
  <Catalog>
    <col0>      \tHighport =   Highport,</col0>
  </Catalog>
 
"      "\tpossBases = " + possBases"
  <Catalog>
    <col0>      \tpossBases =   possBases</col0>
  </Catalog>
 
"    };"
  <Catalog>
    <col0>    };</col0>
  </Catalog>
 
"    sp = "";"
  <Catalog>
    <col0>    sp = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < StarportUpdate.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < StarportUpdate.length; j) {</col0>
  </Catalog>
 
"      sp += StarportUpdate[j] + CRLF;"
  <Catalog>
    <col0>      sp = StarportUpdate[j]  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return sp;"
  <Catalog>
    <col0>    return sp;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getSp() {"
  <Catalog>
    <col0>  private static String getSp() {</col0>
  </Catalog>
 
"    return UWP.substring(0, 1) + CRLF;"
  <Catalog>
    <col0>    return UWP.substring(0, 1)  CRLF;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getSiz() {"
  <Catalog>
    <col0>  private static String getSiz() {</col0>
  </Catalog>
 
"    out = "Size = " + UWP.substring(1, 2) + CRLF;"
  <Catalog>
    <col0>    out = Size =   UWP.substring(1, 2)  CRLF;</col0>
  </Catalog>
 
"    out += GlobalMethods.getLinesFromTable(Size, UWP.substring(1, 2), true);"
  <Catalog>
    <col0>    out = GlobalMethods.getLinesFromTable(Size, UWP.substring(1, 2), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getAtmo() {"
  <Catalog>
    <col0>  private static String getAtmo() {</col0>
  </Catalog>
 
"    out = "";"
  <Catalog>
    <col0>    out = ;</col0>
  </Catalog>
 
"    out += "Atmosphere = " + UWP.substring(2, 3) + CRLF;"
  <Catalog>
    <col0>    out = Atmosphere =   UWP.substring(2, 3)  CRLF;</col0>
  </Catalog>
 
"    out += GlobalMethods.getLinesFromTable(Atmo, UWP.substring(2, 3), true);"
  <Catalog>
    <col0>    out = GlobalMethods.getLinesFromTable(Atmo, UWP.substring(2, 3), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getHydro() {"
  <Catalog>
    <col0>  private static String getHydro() {</col0>
  </Catalog>
 
"    out = "Hydrosphere = " + UWP.substring(3, 4) + CRLF;"
  <Catalog>
    <col0>    out = Hydrosphere =   UWP.substring(3, 4)  CRLF;</col0>
  </Catalog>
 
"    out += GlobalMethods.getLinesFromTable(Hydro, UWP.substring(3, 4), true);"
  <Catalog>
    <col0>    out = GlobalMethods.getLinesFromTable(Hydro, UWP.substring(3, 4), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getPop() {"
  <Catalog>
    <col0>  private static String getPop() {</col0>
  </Catalog>
 
"    out = "Population = " + UWP.substring(4, 5) + CRLF;"
  <Catalog>
    <col0>    out = Population =   UWP.substring(4, 5)  CRLF;</col0>
  </Catalog>
 
"    out += "\tPOPULATION UNDER " + data[10].substring(6, 7);"
  <Catalog>
    <col0>    out = \tPOPULATION UNDER   data[10].substring(6, 7);</col0>
  </Catalog>
 
"    out += GlobalMethods.getStringFromTable("Digit", UWP.substring(4, 5),"
  <Catalog>
    <col0>    out = GlobalMethods.getStringFromTable(Digit, UWP.substring(4, 5),</col0>
  </Catalog>
 
"      "Value", Pop) + CRLF;"
  <Catalog>
    <col0>      Value, Pop)  CRLF;</col0>
  </Catalog>
 
"    out += getLinesFromTable(Pop, UWP.substring(4, 5), true);"
  <Catalog>
    <col0>    out = getLinesFromTable(Pop, UWP.substring(4, 5), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getGov() {"
  <Catalog>
    <col0>  private static String getGov() {</col0>
  </Catalog>
 
"    out = "Government = " + UWP.substring(5, 6) + CRLF;"
  <Catalog>
    <col0>    out = Government =   UWP.substring(5, 6)  CRLF;</col0>
  </Catalog>
 
"    out += getLinesFromTable(Govt, UWP.substring(5, 6), true);"
  <Catalog>
    <col0>    out = getLinesFromTable(Govt, UWP.substring(5, 6), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getLaw() {"
  <Catalog>
    <col0>  private static String getLaw() {</col0>
  </Catalog>
 
"    out = "Law Level = " + UWP.substring(6, 7) + CRLF;"
  <Catalog>
    <col0>    out = Law Level =   UWP.substring(6, 7)  CRLF;</col0>
  </Catalog>
 
"    out += getLinesFromTable(Law, UWP.substring(6, 7), true);"
  <Catalog>
    <col0>    out = getLinesFromTable(Law, UWP.substring(6, 7), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getTech() {"
  <Catalog>
    <col0>  private static String getTech() {</col0>
  </Catalog>
 
"    out = "Tech Level = " + UWP.substring(8, 9) + CRLF;"
  <Catalog>
    <col0>    out = Tech Level =   UWP.substring(8, 9)  CRLF;</col0>
  </Catalog>
 
"    out += getLinesFromTable(Tech, UWP.substring(8, 9), true);"
  <Catalog>
    <col0>    out = getLinesFromTable(Tech, UWP.substring(8, 9), true);</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getRemarks() {"
  <Catalog>
    <col0>  private String getRemarks() {</col0>
  </Catalog>
 
"    out = data[3] + CRLF;"
  <Catalog>
    <col0>    out = data[3]  CRLF;</col0>
  </Catalog>
 
"    String[] parts = data[3].substring(9).split(" ");"
  <Catalog>
    <col0>    String[] parts = data[3].substring(9).split( );</col0>
  </Catalog>
 
"    int num = parts.length;"
  <Catalog>
    <col0>    int num = parts.length;</col0>
  </Catalog>
 
"    if (data[3].contains("(") | data[3].contains("[")) {"
  <Catalog>
    <col0>    if (data[3].contains(() | data[3].contains([)) {</col0>
  </Catalog>
 
"      num -= 1;"
  <Catalog>
    <col0>      num -= 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    out += getTableTitles(Remarks);"
  <Catalog>
    <col0>    out = getTableTitles(Remarks);</col0>
  </Catalog>
 
"    boolean titles = true;"
  <Catalog>
    <col0>    boolean titles = true;</col0>
  </Catalog>
 
"    int j = 0;"
  <Catalog>
    <col0>    int j = 0;</col0>
  </Catalog>
 
"    for (j = 0; j < parts.length; j++) {"
  <Catalog>
    <col0>    for (j = 0; j < parts.length; j) {</col0>
  </Catalog>
 
"      if (j != 0) {"
  <Catalog>
    <col0>      if (j != 0) {</col0>
  </Catalog>
 
"        titles = false;"
  <Catalog>
    <col0>        titles = false;</col0>
  </Catalog>
 
"        out += getLinesFromTable(Remarks, parts[j], titles);"
  <Catalog>
    <col0>        out = getLinesFromTable(Remarks, parts[j], titles);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (data[3].contains("(")) {"
  <Catalog>
    <col0>    if (data[3].contains(()) {</col0>
  </Catalog>
 
"      startuwp = data[3].indexOf("(") + 1;"
  <Catalog>
    <col0>      startuwp = data[3].indexOf(()  1;</col0>
  </Catalog>
 
"      end = data[3].indexOf(")");"
  <Catalog>
    <col0>      end = data[3].indexOf());</col0>
  </Catalog>
 
"      String race = data[3].substring(startuwp, end).trim();"
  <Catalog>
    <col0>      String race = data[3].substring(startuwp, end).trim();</col0>
  </Catalog>
 
"      out += "\t" + "Minor Race " + getNIL(race);"
  <Catalog>
    <col0>      out = \t  Minor Race   getNIL(race);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (data[3].contains("[")) {"
  <Catalog>
    <col0>    if (data[3].contains([)) {</col0>
  </Catalog>
 
"      startuwp = data[3].indexOf("[") + 1;"
  <Catalog>
    <col0>      startuwp = data[3].indexOf([)  1;</col0>
  </Catalog>
 
"      end = data[3].indexOf("]");"
  <Catalog>
    <col0>      end = data[3].indexOf(]);</col0>
  </Catalog>
 
"      String race = data[3].substring(startuwp, end).trim();"
  <Catalog>
    <col0>      String race = data[3].substring(startuwp, end).trim();</col0>
  </Catalog>
 
"      out += "\t" + "Major Race " + getNIL(race);"
  <Catalog>
    <col0>      out = \t  Major Race   getNIL(race);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (data[3].contains("O:")) {"
  <Catalog>
    <col0>    if (data[3].contains(O:)) {</col0>
  </Catalog>
 
"      //owned by system in hex after O:"
  <Catalog>
    <col0>      //owned by system in hex after O:</col0>
  </Catalog>
 
"      int start = data[3].indexOf("O:") + 2;"
  <Catalog>
    <col0>      int start = data[3].indexOf(O:)  2;</col0>
  </Catalog>
 
"      int end = start + 4;"
  <Catalog>
    <col0>      int end = start  4;</col0>
  </Catalog>
 
"      String hex = data[3].substring(start, end);"
  <Catalog>
    <col0>      String hex = data[3].substring(start, end);</col0>
  </Catalog>
 
"      out += "\tRuled by " + hex + " " + findSystemName(hex) + CRLF;"
  <Catalog>
    <col0>      out = \tRuled by   hex     findSystemName(hex)  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String st = "";"
  <Catalog>
    <col0>    String st = ;</col0>
  </Catalog>
 
"    for (j = 0; j < parts.length; j++) {"
  <Catalog>
    <col0>    for (j = 0; j < parts.length; j) {</col0>
  </Catalog>
 
"      if (parts[j].length() == 5) {"
  <Catalog>
    <col0>      if (parts[j].length() == 5) {</col0>
  </Catalog>
 
"        st = "\t" + parts[j].substring(0, 4) + " <= " + parts[j].substring(4) + "9%" + CRLF;"
  <Catalog>
    <col0>        st = \t  parts[j].substring(0, 4)   <=   parts[j].substring(4)  9%  CRLF;</col0>
  </Catalog>
 
"        out += st;"
  <Catalog>
    <col0>        out = st;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getNIL(String race) {"
  <Catalog>
    <col0>  private String getNIL(String race) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String nil = null;"
  <Catalog>
    <col0>    String nil = null;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      nil = "\tNative Intelligent Life = " + race;"
  <Catalog>
    <col0>      nil = \tNative Intelligent Life =   race;</col0>
  </Catalog>
 
"      String number = null;"
  <Catalog>
    <col0>      String number = null;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        number = data[3].substring(end + 1, end + 2);"
  <Catalog>
    <col0>        number = data[3].substring(end  1, end  2);</col0>
  </Catalog>
 
"        if (!number.equals(" ")) {"
  <Catalog>
    <col0>        if (!number.equals( )) {</col0>
  </Catalog>
 
"          nil += " < " + data[3].substring(end + 1, end + 2) + "0% " + countNatives() + CRLF;"
  <Catalog>
    <col0>          nil =  <   data[3].substring(end  1, end  2)  0%   countNatives()  CRLF;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          nil += CRLF + "\tNo details" + CRLF;"
  <Catalog>
    <col0>          nil = CRLF  \tNo details  CRLF;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        nil += CRLF + "No details" + CRLF;"
  <Catalog>
    <col0>        nil = CRLF  No details  CRLF;</col0>
  </Catalog>
 
"        System.out.println("2846" + " = " + e.toString());"
  <Catalog>
    <col0>        System.out.println(2846   =   e.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      nil += getTableTitles(NIL);"
  <Catalog>
    <col0>      nil = getTableTitles(NIL);</col0>
  </Catalog>
 
"      int pop, atm, tl, gov;"
  <Catalog>
    <col0>      int pop, atm, tl, gov;</col0>
  </Catalog>
 
"      atm = GlobalMethods.fromHex(UWP.substring(2, 3));"
  <Catalog>
    <col0>      atm = GlobalMethods.fromHex(UWP.substring(2, 3));</col0>
  </Catalog>
 
"      pop = GlobalMethods.fromHex(UWP.substring(4, 5));"
  <Catalog>
    <col0>      pop = GlobalMethods.fromHex(UWP.substring(4, 5));</col0>
  </Catalog>
 
"      gov = GlobalMethods.fromHex(UWP.substring(5, 6));"
  <Catalog>
    <col0>      gov = GlobalMethods.fromHex(UWP.substring(5, 6));</col0>
  </Catalog>
 
"      tl = GlobalMethods.fromHex(UWP.substring(8, 9));"
  <Catalog>
    <col0>      tl = GlobalMethods.fromHex(UWP.substring(8, 9));</col0>
  </Catalog>
 
"      //Native"
  <Catalog>
    <col0>      //Native</col0>
  </Catalog>
 
"      if (pop > 6) {"
  <Catalog>
    <col0>      if (pop > 6) {</col0>
  </Catalog>
 
"        if (atm > 1 & atm < 10) {"
  <Catalog>
    <col0>        if (atm > 1 & atm < 10) {</col0>
  </Catalog>
 
"          if (tl > 0) {"
  <Catalog>
    <col0>          if (tl > 0) {</col0>
  </Catalog>
 
"            startuwp = 6;"
  <Catalog>
    <col0>            startuwp = 6;</col0>
  </Catalog>
 
"            nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>            nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Exotics"
  <Catalog>
    <col0>      //Exotics</col0>
  </Catalog>
 
"      if (pop > 6) {"
  <Catalog>
    <col0>      if (pop > 6) {</col0>
  </Catalog>
 
"        if (atm > 9) {"
  <Catalog>
    <col0>        if (atm > 9) {</col0>
  </Catalog>
 
"          if (tl > 0) {"
  <Catalog>
    <col0>          if (tl > 0) {</col0>
  </Catalog>
 
"            startuwp = 11;"
  <Catalog>
    <col0>            startuwp = 11;</col0>
  </Catalog>
 
"            nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>            nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Transplants"
  <Catalog>
    <col0>      //Transplants</col0>
  </Catalog>
 
"      if (pop > 6) {"
  <Catalog>
    <col0>      if (pop > 6) {</col0>
  </Catalog>
 
"        if (atm < 2) {"
  <Catalog>
    <col0>        if (atm < 2) {</col0>
  </Catalog>
 
"          if (tl > 0) {"
  <Catalog>
    <col0>          if (tl > 0) {</col0>
  </Catalog>
 
"            startuwp = 16;"
  <Catalog>
    <col0>            startuwp = 16;</col0>
  </Catalog>
 
"            nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>            nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Extinct"
  <Catalog>
    <col0>      //Extinct</col0>
  </Catalog>
 
"      if (pop < 1) {"
  <Catalog>
    <col0>      if (pop < 1) {</col0>
  </Catalog>
 
"        if (atm > 1) {"
  <Catalog>
    <col0>        if (atm > 1) {</col0>
  </Catalog>
 
"          if (tl > 0) {"
  <Catalog>
    <col0>          if (tl > 0) {</col0>
  </Catalog>
 
"            startuwp = 16;"
  <Catalog>
    <col0>            startuwp = 16;</col0>
  </Catalog>
 
"            nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>            nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Vanished"
  <Catalog>
    <col0>      //Vanished</col0>
  </Catalog>
 
"      if (pop < 1) {"
  <Catalog>
    <col0>      if (pop < 1) {</col0>
  </Catalog>
 
"        if (atm < 2) {"
  <Catalog>
    <col0>        if (atm < 2) {</col0>
  </Catalog>
 
"          if (tl > 0) {"
  <Catalog>
    <col0>          if (tl > 0) {</col0>
  </Catalog>
 
"            startuwp = 21;"
  <Catalog>
    <col0>            startuwp = 21;</col0>
  </Catalog>
 
"            nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>            nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Transients"
  <Catalog>
    <col0>      //Transients</col0>
  </Catalog>
 
"      if (pop > 0 & pop < 4) {"
  <Catalog>
    <col0>      if (pop > 0 & pop < 4) {</col0>
  </Catalog>
 
"        startuwp = 26;"
  <Catalog>
    <col0>        startuwp = 26;</col0>
  </Catalog>
 
"        nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>        nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Settlers"
  <Catalog>
    <col0>      //Settlers</col0>
  </Catalog>
 
"      if (pop > 3 & pop < 7) {"
  <Catalog>
    <col0>      if (pop > 3 & pop < 7) {</col0>
  </Catalog>
 
"        startuwp = 31;"
  <Catalog>
    <col0>        startuwp = 31;</col0>
  </Catalog>
 
"        nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>        nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Corporate"
  <Catalog>
    <col0>      //Corporate</col0>
  </Catalog>
 
"      if (gov == 1) {"
  <Catalog>
    <col0>      if (gov == 1) {</col0>
  </Catalog>
 
"        startuwp = 36;"
  <Catalog>
    <col0>        startuwp = 36;</col0>
  </Catalog>
 
"        nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>        nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Colonists"
  <Catalog>
    <col0>      //Colonists</col0>
  </Catalog>
 
"      if (gov == 6) {"
  <Catalog>
    <col0>      if (gov == 6) {</col0>
  </Catalog>
 
"        startuwp = 41;"
  <Catalog>
    <col0>        startuwp = 41;</col0>
  </Catalog>
 
"        nil += GlobalMethods.getLineFromTable(NIL, startuwp) + CRLF;"
  <Catalog>
    <col0>        nil = GlobalMethods.getLineFromTable(NIL, startuwp)  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("2920" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(2920   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return nil;"
  <Catalog>
    <col0>    return nil;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  static String countNatives() {"
  <Catalog>
    <col0>  static String countNatives() {</col0>
  </Catalog>
 
"    int pop, pm, pc, num;"
  <Catalog>
    <col0>    int pop, pm, pc, num;</col0>
  </Catalog>
 
"    pop = GlobalMethods.fromHex(UWP.substring(4, 5)) - 1;"
  <Catalog>
    <col0>    pop = GlobalMethods.fromHex(UWP.substring(4, 5)) - 1;</col0>
  </Catalog>
 
"    pm = GlobalMethods.fromHex(data[10].substring(6, 7));"
  <Catalog>
    <col0>    pm = GlobalMethods.fromHex(data[10].substring(6, 7));</col0>
  </Catalog>
 
"    pc = GlobalMethods.fromHex(data[3].substring(end + 1, end + 2));"
  <Catalog>
    <col0>    pc = GlobalMethods.fromHex(data[3].substring(end  1, end  2));</col0>
  </Catalog>
 
"    for (int j = 0; j < pop; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < pop; j) {</col0>
  </Catalog>
 
"      pm *= 10;"
  <Catalog>
    <col0>      pm *= 10;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String mynumber = NumberFormat.getInstance().format(pm * pc);"
  <Catalog>
    <col0>    String mynumber = NumberFormat.getInstance().format(pm * pc);</col0>
  </Catalog>
 
"    return "< " + mynumber;"
  <Catalog>
    <col0>    return <   mynumber;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getIx() {"
  <Catalog>
    <col0>  private String getIx() {</col0>
  </Catalog>
 
"    out = data[4] + CRLF;"
  <Catalog>
    <col0>    out = data[4]  CRLF;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      int Ix = Integer.parseInt(data[4].substring(8).replace("}", "").trim());"
  <Catalog>
    <col0>      int Ix = Integer.parseInt(data[4].substring(8).replace(}, ).trim());</col0>
  </Catalog>
 
"      int ix = 0;"
  <Catalog>
    <col0>      int ix = 0;</col0>
  </Catalog>
 
"      int mod = 0;"
  <Catalog>
    <col0>      int mod = 0;</col0>
  </Catalog>
 
"      String Sp = UWP.trim().substring(0, 1);"
  <Catalog>
    <col0>      String Sp = UWP.trim().substring(0, 1);</col0>
  </Catalog>
 
"      if ((Sp.contains("A")) | (Sp.contains("B"))) {"
  <Catalog>
    <col0>      if ((Sp.contains(A)) | (Sp.contains(B))) {</col0>
  </Catalog>
 
"        ix += 1;"
  <Catalog>
    <col0>        ix = 1;</col0>
  </Catalog>
 
"        out += "\tStarport " + Sp + " = +1" + CRLF;"
  <Catalog>
    <col0>        out = \tStarport   Sp   = 1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if ((Sp.contains("D")) | (Sp.contains("E")) | (Sp.contains("F")) | (Sp"
  <Catalog>
    <col0>      if ((Sp.contains(D)) | (Sp.contains(E)) | (Sp.contains(F)) | (Sp</col0>
  </Catalog>
 
"        .contains("X"))) {"
  <Catalog>
    <col0>        .contains(X))) {</col0>
  </Catalog>
 
"        ix -= 1;"
  <Catalog>
    <col0>        ix -= 1;</col0>
  </Catalog>
 
"        out += "\tStarport " + Sp + " = -1" + CRLF;"
  <Catalog>
    <col0>        out = \tStarport   Sp   = -1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int tl = GlobalMethods.fromHex(UWP.trim().substring(8, 9));"
  <Catalog>
    <col0>      int tl = GlobalMethods.fromHex(UWP.trim().substring(8, 9));</col0>
  </Catalog>
 
"      if (tl > 9) {"
  <Catalog>
    <col0>      if (tl > 9) {</col0>
  </Catalog>
 
"        ix += 1;"
  <Catalog>
    <col0>        ix = 1;</col0>
  </Catalog>
 
"        out += "\tTL " + tl + " = +1" + CRLF;"
  <Catalog>
    <col0>        out = \tTL   tl   = 1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (tl < 8) {"
  <Catalog>
    <col0>      if (tl < 8) {</col0>
  </Catalog>
 
"        ix -= 1;"
  <Catalog>
    <col0>        ix -= 1;</col0>
  </Catalog>
 
"        out += "\tTL " + tl + " = -1" + CRLF;"
  <Catalog>
    <col0>        out = \tTL   tl   = -1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      String[] parts = data[3].substring(10).trim().split(" ");"
  <Catalog>
    <col0>      String[] parts = data[3].substring(10).trim().split( );</col0>
  </Catalog>
 
"      for (int j = 0; j < parts.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < parts.length; j) {</col0>
  </Catalog>
 
"        if (parts[j].contains("Ag")) {"
  <Catalog>
    <col0>        if (parts[j].contains(Ag)) {</col0>
  </Catalog>
 
"          ix += 1;"
  <Catalog>
    <col0>          ix = 1;</col0>
  </Catalog>
 
"          out += "\tAg  = +1" + CRLF;"
  <Catalog>
    <col0>          out = \tAg  = 1  CRLF;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (parts[j].contains("Hi")) {"
  <Catalog>
    <col0>        if (parts[j].contains(Hi)) {</col0>
  </Catalog>
 
"          ix += 1;"
  <Catalog>
    <col0>          ix = 1;</col0>
  </Catalog>
 
"          out += "\tHi  = +1" + CRLF;"
  <Catalog>
    <col0>          out = \tHi  = 1  CRLF;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (parts[j].contains("In")) {"
  <Catalog>
    <col0>        if (parts[j].contains(In)) {</col0>
  </Catalog>
 
"          ix += 1;"
  <Catalog>
    <col0>          ix = 1;</col0>
  </Catalog>
 
"          out += "\tIn  = +1" + CRLF;"
  <Catalog>
    <col0>          out = \tIn  = 1  CRLF;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (parts[j].contains("Ri")) {"
  <Catalog>
    <col0>        if (parts[j].contains(Ri)) {</col0>
  </Catalog>
 
"          ix += 1;"
  <Catalog>
    <col0>          ix = 1;</col0>
  </Catalog>
 
"          out += "\tRi  = +1" + CRLF;"
  <Catalog>
    <col0>          out = \tRi  = 1  CRLF;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (parts[j].contains("Cp")) {"
  <Catalog>
    <col0>        if (parts[j].contains(Cp)) {</col0>
  </Catalog>
 
"          ix += 1;"
  <Catalog>
    <col0>          ix = 1;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int pop = GlobalMethods.fromHex(UWP.substring(4, 5));"
  <Catalog>
    <col0>      int pop = GlobalMethods.fromHex(UWP.substring(4, 5));</col0>
  </Catalog>
 
"      if (pop < 7) {"
  <Catalog>
    <col0>      if (pop < 7) {</col0>
  </Catalog>
 
"        ix -= 1;"
  <Catalog>
    <col0>        ix -= 1;</col0>
  </Catalog>
 
"        out += "\tPop < 7 = -1" + CRLF;"
  <Catalog>
    <col0>        out = \tPop < 7 = -1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Naval & Scout = +1"
  <Catalog>
    <col0>      //Naval & Scout = 1</col0>
  </Catalog>
 
"      if (data[8].substring(4).contains("B")) {"
  <Catalog>
    <col0>      if (data[8].substring(4).contains(B)) {</col0>
  </Catalog>
 
"        ix += 1;"
  <Catalog>
    <col0>        ix = 1;</col0>
  </Catalog>
 
"        out += "\tNavy & Scout bases  = +1" + CRLF;"
  <Catalog>
    <col0>        out = \tNavy & Scout bases  = 1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //Way Station = +1"
  <Catalog>
    <col0>      //Way Station = 1</col0>
  </Catalog>
 
"      if (data[8].substring(4).contains("W")) {"
  <Catalog>
    <col0>      if (data[8].substring(4).contains(W)) {</col0>
  </Catalog>
 
"        ix += 1;"
  <Catalog>
    <col0>        ix = 1;</col0>
  </Catalog>
 
"        out += "\tWay Station  = +1" + CRLF;"
  <Catalog>
    <col0>        out = \tWay Station  = 1  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      String importance = "Normal";"
  <Catalog>
    <col0>      String importance = Normal;</col0>
  </Catalog>
 
"      //Important = 4+"
  <Catalog>
    <col0>      //Important = 4</col0>
  </Catalog>
 
"      if (Ix > 3) {"
  <Catalog>
    <col0>      if (Ix > 3) {</col0>
  </Catalog>
 
"        importance = "Important";"
  <Catalog>
    <col0>        importance = Important;</col0>
  </Catalog>
 
"      } else //Unimportant = 0-"
  <Catalog>
    <col0>      } else //Unimportant = 0-</col0>
  </Catalog>
 
"      {"
  <Catalog>
    <col0>      {</col0>
  </Catalog>
 
"        if (Ix < 1) {"
  <Catalog>
    <col0>        if (Ix < 1) {</col0>
  </Catalog>
 
"          importance = "Unimportant";"
  <Catalog>
    <col0>          importance = Unimportant;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      mod = Ix - ix;"
  <Catalog>
    <col0>      mod = Ix - ix;</col0>
  </Catalog>
 
"      String m = "\tImportance = " + importance + " (" + ix + ")+" + mod + "=" + Ix;"
  <Catalog>
    <col0>      String m = \tImportance =   importance   (  ix  )  mod  =  Ix;</col0>
  </Catalog>
 
"      out += m + CRLF;"
  <Catalog>
    <col0>      out = m  CRLF;</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3027 \tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3027 \tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getEx() {"
  <Catalog>
    <col0>  private String getEx() {</col0>
  </Catalog>
 
"    out = data[5] + CRLF;"
  <Catalog>
    <col0>    out = data[5]  CRLF;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      int r = GlobalMethods.fromHex(data[5].substring(1 + 7, 2 + 7));"
  <Catalog>
    <col0>      int r = GlobalMethods.fromHex(data[5].substring(1  7, 2  7));</col0>
  </Catalog>
 
"      out += "\tResources =  " + r + CRLF;"
  <Catalog>
    <col0>      out = \tResources =    r  CRLF;</col0>
  </Catalog>
 
"      if (r == 0) {"
  <Catalog>
    <col0>      if (r == 0) {</col0>
  </Catalog>
 
"        r = 1;"
  <Catalog>
    <col0>        r = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int l = GlobalMethods.fromHex(data[5].substring(2 + 7, 3 + 7));"
  <Catalog>
    <col0>      int l = GlobalMethods.fromHex(data[5].substring(2  7, 3  7));</col0>
  </Catalog>
 
"      out += "\tLabour =  " + l + CRLF;"
  <Catalog>
    <col0>      out = \tLabour =    l  CRLF;</col0>
  </Catalog>
 
"      if (l == 0) {"
  <Catalog>
    <col0>      if (l == 0) {</col0>
  </Catalog>
 
"        r = 1;"
  <Catalog>
    <col0>        r = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int i = GlobalMethods.fromHex(data[5].substring(3 + 7, 4 + 7));"
  <Catalog>
    <col0>      int i = GlobalMethods.fromHex(data[5].substring(3  7, 4  7));</col0>
  </Catalog>
 
"      out += "\tInfrastructure =  " + i + CRLF;"
  <Catalog>
    <col0>      out = \tInfrastructure =    i  CRLF;</col0>
  </Catalog>
 
"      if (i == 0) {"
  <Catalog>
    <col0>      if (i == 0) {</col0>
  </Catalog>
 
"        r = 1;"
  <Catalog>
    <col0>        r = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int e = GlobalMethods.fromHex(data[5].substring(4 + 7, 6 + 7));"
  <Catalog>
    <col0>      int e = GlobalMethods.fromHex(data[5].substring(4  7, 6  7));</col0>
  </Catalog>
 
"      out += "\tEfficiency =  " + e + CRLF;"
  <Catalog>
    <col0>      out = \tEfficiency =    e  CRLF;</col0>
  </Catalog>
 
"      if (e == 0) {"
  <Catalog>
    <col0>      if (e == 0) {</col0>
  </Catalog>
 
"        r = 1;"
  <Catalog>
    <col0>        r = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      out += "\tRU = " + (r * l * i * e) + CRLF;"
  <Catalog>
    <col0>      out = \tRU =   (r * l * i * e)  CRLF;</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3057\tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3057\tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getCx() {"
  <Catalog>
    <col0>  private String getCx() {</col0>
  </Catalog>
 
"    out += data[6] + CRLF;"
  <Catalog>
    <col0>    out = data[6]  CRLF;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      int ho = 0;"
  <Catalog>
    <col0>      int ho = 0;</col0>
  </Catalog>
 
"      ho = GlobalMethods.fromHex(data[6].substring(1 + 7, 2 + 7));"
  <Catalog>
    <col0>      ho = GlobalMethods.fromHex(data[6].substring(1  7, 2  7));</col0>
  </Catalog>
 
"      int ac = 0;"
  <Catalog>
    <col0>      int ac = 0;</col0>
  </Catalog>
 
"      ac = GlobalMethods.fromHex(data[6].substring(2 + 7, 3 + 7));"
  <Catalog>
    <col0>      ac = GlobalMethods.fromHex(data[6].substring(2  7, 3  7));</col0>
  </Catalog>
 
"      int st = 0;"
  <Catalog>
    <col0>      int st = 0;</col0>
  </Catalog>
 
"      st = GlobalMethods.fromHex(data[6].substring(3 + 7, 4 + 7));"
  <Catalog>
    <col0>      st = GlobalMethods.fromHex(data[6].substring(3  7, 4  7));</col0>
  </Catalog>
 
"      int sy = 0;"
  <Catalog>
    <col0>      int sy = 0;</col0>
  </Catalog>
 
"      sy = GlobalMethods.fromHex(data[6].substring(4 + 7, 5 + 7));"
  <Catalog>
    <col0>      sy = GlobalMethods.fromHex(data[6].substring(4  7, 5  7));</col0>
  </Catalog>
 
"      out += "\tHomogeneity = " + ho + CRLF;"
  <Catalog>
    <col0>      out = \tHomogeneity =   ho  CRLF;</col0>
  </Catalog>
 
"      out += "\tAcceptance = " + ac + CRLF;"
  <Catalog>
    <col0>      out = \tAcceptance =   ac  CRLF;</col0>
  </Catalog>
 
"      out += "\tStrangeness = " + st + CRLF;"
  <Catalog>
    <col0>      out = \tStrangeness =   st  CRLF;</col0>
  </Catalog>
 
"      out += "\tSymbols = " + sy + CRLF;"
  <Catalog>
    <col0>      out = \tSymbols =   sy  CRLF;</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3078\tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3078\tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getN() {"
  <Catalog>
    <col0>  private String getN() {</col0>
  </Catalog>
 
"    out = data[7] + CRLF;"
  <Catalog>
    <col0>    out = data[7]  CRLF;</col0>
  </Catalog>
 
"    boolean titles = true;"
  <Catalog>
    <col0>    boolean titles = true;</col0>
  </Catalog>
 
"    String ranks = data[7].substring(4);"
  <Catalog>
    <col0>    String ranks = data[7].substring(4);</col0>
  </Catalog>
 
"    int len = data[7].substring(4).length();"
  <Catalog>
    <col0>    int len = data[7].substring(4).length();</col0>
  </Catalog>
 
"    if (!data[7].contains("-")) {"
  <Catalog>
    <col0>    if (!data[7].contains(-)) {</col0>
  </Catalog>
 
"      for (int j = 0; j < len; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < len; j) {</col0>
  </Catalog>
 
"        if (j != 0) {"
  <Catalog>
    <col0>        if (j != 0) {</col0>
  </Catalog>
 
"          titles = false;"
  <Catalog>
    <col0>          titles = false;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        out += GlobalMethods.getLinesFromTable(N, ranks.substring(j, j + 1),"
  <Catalog>
    <col0>        out = GlobalMethods.getLinesFromTable(N, ranks.substring(j, j  1),</col0>
  </Catalog>
 
"          titles);"
  <Catalog>
    <col0>          titles);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      out += "\tNo Imperial Nobles" + CRLF;"
  <Catalog>
    <col0>      out = \tNo Imperial Nobles  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getB() {"
  <Catalog>
    <col0>  private String getB() {</col0>
  </Catalog>
 
"    out = data[8] + CRLF;"
  <Catalog>
    <col0>    out = data[8]  CRLF;</col0>
  </Catalog>
 
"    String bases = data[8].substring(4);"
  <Catalog>
    <col0>    String bases = data[8].substring(4);</col0>
  </Catalog>
 
"    int num = bases.length();"
  <Catalog>
    <col0>    int num = bases.length();</col0>
  </Catalog>
 
"    out += GlobalMethods.getTableTitles(B);"
  <Catalog>
    <col0>    out = GlobalMethods.getTableTitles(B);</col0>
  </Catalog>
 
"    for (int j = 0; j < num; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < num; j) {</col0>
  </Catalog>
 
"      out += GlobalMethods"
  <Catalog>
    <col0>      out = GlobalMethods</col0>
  </Catalog>
 
"        .getLinesFromTable(B, bases.substring(j, j + 1), false);"
  <Catalog>
    <col0>        .getLinesFromTable(B, bases.substring(j, j  1), false);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getPBG() {"
  <Catalog>
    <col0>  private String getPBG() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      out = data[10] + CRLF;"
  <Catalog>
    <col0>      out = data[10]  CRLF;</col0>
  </Catalog>
 
"      //P"
  <Catalog>
    <col0>      //P</col0>
  </Catalog>
 
"      out += "\tPopulation Multiplier = " + data[10].substring(6, 7) + CRLF;"
  <Catalog>
    <col0>      out = \tPopulation Multiplier =   data[10].substring(6, 7)  CRLF;</col0>
  </Catalog>
 
"      out += "\tPOPULATION UNDER " + data[10].substring(6, 7);"
  <Catalog>
    <col0>      out = \tPOPULATION UNDER   data[10].substring(6, 7);</col0>
  </Catalog>
 
"      out += GlobalMethods.getStringFromTable("Digit", UWP.substring(4, 5),"
  <Catalog>
    <col0>      out = GlobalMethods.getStringFromTable(Digit, UWP.substring(4, 5),</col0>
  </Catalog>
 
"        "Value", Pop);"
  <Catalog>
    <col0>        Value, Pop);</col0>
  </Catalog>
 
"      out += CRLF;"
  <Catalog>
    <col0>      out = CRLF;</col0>
  </Catalog>
 
"      jLabel8.setText(data[10].substring(6, 7));"
  <Catalog>
    <col0>      jLabel8.setText(data[10].substring(6, 7));</col0>
  </Catalog>
 
"      //B"
  <Catalog>
    <col0>      //B</col0>
  </Catalog>
 
"      out += "\tPlanetoid Belts = " + data[10].substring(7, 8) + CRLF;"
  <Catalog>
    <col0>      out = \tPlanetoid Belts =   data[10].substring(7, 8)  CRLF;</col0>
  </Catalog>
 
"      jLabel9.setText(data[10].substring(7, 8));"
  <Catalog>
    <col0>      jLabel9.setText(data[10].substring(7, 8));</col0>
  </Catalog>
 
"      //G"
  <Catalog>
    <col0>      //G</col0>
  </Catalog>
 
"      out += "\tGas Giants = " + data[10].substring(8, 9) + CRLF;"
  <Catalog>
    <col0>      out = \tGas Giants =   data[10].substring(8, 9)  CRLF;</col0>
  </Catalog>
 
"      jLabel10.setText(data[10].substring(8, 9));"
  <Catalog>
    <col0>      jLabel10.setText(data[10].substring(8, 9));</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3179\tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3179\tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getW() {"
  <Catalog>
    <col0>  private String getW() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      out = data[11] + CRLF;"
  <Catalog>
    <col0>      out = data[11]  CRLF;</col0>
  </Catalog>
 
"      int total = Integer.parseInt(data[11].substring(4));"
  <Catalog>
    <col0>      int total = Integer.parseInt(data[11].substring(4));</col0>
  </Catalog>
 
"      out += "\tNon Stars In System = " + total + CRLF;"
  <Catalog>
    <col0>      out = \tNon Stars In System =   total  CRLF;</col0>
  </Catalog>
 
"      int mw = 1;"
  <Catalog>
    <col0>      int mw = 1;</col0>
  </Catalog>
 
"      out += "\t-" + mw + " (mainworld)" + CRLF;"
  <Catalog>
    <col0>      out = \t-  mw   (mainworld)  CRLF;</col0>
  </Catalog>
 
"      int pb = Integer.parseInt(data[10].substring(7, 8));"
  <Catalog>
    <col0>      int pb = Integer.parseInt(data[10].substring(7, 8));</col0>
  </Catalog>
 
"      out += "\t-" + pb + " (planetoid belts)" + CRLF;"
  <Catalog>
    <col0>      out = \t-  pb   (planetoid belts)  CRLF;</col0>
  </Catalog>
 
"      int gg = Integer.parseInt(data[10].substring(8, 9));"
  <Catalog>
    <col0>      int gg = Integer.parseInt(data[10].substring(8, 9));</col0>
  </Catalog>
 
"      out += "\t-" + gg + " (gas giants)" + CRLF;"
  <Catalog>
    <col0>      out = \t-  gg   (gas giants)  CRLF;</col0>
  </Catalog>
 
"      out += "\t = " + (total - (mw + pb + gg)) + " other worlds" + CRLF;"
  <Catalog>
    <col0>      out = \t =   (total - (mw  pb  gg))   other worlds  CRLF;</col0>
  </Catalog>
 
"      jLabel12.setText(data[11].substring(4));"
  <Catalog>
    <col0>      jLabel12.setText(data[11].substring(4));</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3197\tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3197\tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getW(Object object) {"
  <Catalog>
    <col0>  private String getW(Object object) {</col0>
  </Catalog>
 
"    if (object == null) {"
  <Catalog>
    <col0>    if (object == null) {</col0>
  </Catalog>
 
"      return data[11];"
  <Catalog>
    <col0>      return data[11];</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      return getW();"
  <Catalog>
    <col0>      return getW();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getA() {"
  <Catalog>
    <col0>  private String getA() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      out = data[12] + CRLF;"
  <Catalog>
    <col0>      out = data[12]  CRLF;</col0>
  </Catalog>
 
"      String alleg = data[12].substring(4);"
  <Catalog>
    <col0>      String alleg = data[12].substring(4);</col0>
  </Catalog>
 
"      out += GlobalMethods.getLinesFromTable(Alleg, alleg, true);"
  <Catalog>
    <col0>      out = GlobalMethods.getLinesFromTable(Alleg, alleg, true);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3216\tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3216\tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getStellar() {"
  <Catalog>
    <col0>  private String getStellar() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      out = data[13] + CRLF;"
  <Catalog>
    <col0>      out = data[13]  CRLF;</col0>
  </Catalog>
 
"      String[] parts = data[13].substring(10).split(" ");"
  <Catalog>
    <col0>      String[] parts = data[13].substring(10).split( );</col0>
  </Catalog>
 
"      stars = 0;"
  <Catalog>
    <col0>      stars = 0;</col0>
  </Catalog>
 
"      int dwarfs = 0;"
  <Catalog>
    <col0>      int dwarfs = 0;</col0>
  </Catalog>
 
"      int[] Dwarfs;"
  <Catalog>
    <col0>      int[] Dwarfs;</col0>
  </Catalog>
 
"      int i = 0;"
  <Catalog>
    <col0>      int i = 0;</col0>
  </Catalog>
 
"      for (int j = 0; j < parts.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < parts.length; j) {</col0>
  </Catalog>
 
"        if (parts[j].endsWith("D")) {"
  <Catalog>
    <col0>        if (parts[j].endsWith(D)) {</col0>
  </Catalog>
 
"          dwarfs += 1;"
  <Catalog>
    <col0>          dwarfs = 1;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      Dwarfs = new int[dwarfs];"
  <Catalog>
    <col0>      Dwarfs = new int[dwarfs];</col0>
  </Catalog>
 
"      for (int j = 0; j < parts.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < parts.length; j) {</col0>
  </Catalog>
 
"        if (parts[j].contains("D")) {"
  <Catalog>
    <col0>        if (parts[j].contains(D)) {</col0>
  </Catalog>
 
"          Dwarfs[i] = j;"
  <Catalog>
    <col0>          Dwarfs[i] = j;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      stars = ((parts.length - dwarfs) / 2) + dwarfs;"
  <Catalog>
    <col0>      stars = ((parts.length - dwarfs) / 2)  dwarfs;</col0>
  </Catalog>
 
"      out += "\tStars" + " = " + stars;"
  <Catalog>
    <col0>      out = \tStars   =   stars;</col0>
  </Catalog>
 
"      int[] starlen = new int[stars];"
  <Catalog>
    <col0>      int[] starlen = new int[stars];</col0>
  </Catalog>
 
"      int count = 0;"
  <Catalog>
    <col0>      int count = 0;</col0>
  </Catalog>
 
"      for (int j = 0; j < parts.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < parts.length; j) {</col0>
  </Catalog>
 
"        if (!parts[j].contains("D") | j == (parts.length - 1)) {"
  <Catalog>
    <col0>        if (!parts[j].contains(D) | j == (parts.length - 1)) {</col0>
  </Catalog>
 
"          j += 1;"
  <Catalog>
    <col0>          j = 1;</col0>
  </Catalog>
 
"          starlen[count] = 2;"
  <Catalog>
    <col0>          starlen[count] = 2;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          starlen[count] = 1;"
  <Catalog>
    <col0>          starlen[count] = 1;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        count += 1;"
  <Catalog>
    <col0>        count = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int start = 0;"
  <Catalog>
    <col0>      int start = 0;</col0>
  </Catalog>
 
"      int end = 0;"
  <Catalog>
    <col0>      int end = 0;</col0>
  </Catalog>
 
"      DefaultComboBoxModel<String> cbm = new DefaultComboBoxModel<>();"
  <Catalog>
    <col0>      DefaultComboBoxModel<String> cbm = new DefaultComboBoxModel<>();</col0>
  </Catalog>
 
"      for (int j = 0; j < stars; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < stars; j) {</col0>
  </Catalog>
 
"        String st = "";"
  <Catalog>
    <col0>        String st = ;</col0>
  </Catalog>
 
"        end += starlen[j];"
  <Catalog>
    <col0>        end = starlen[j];</col0>
  </Catalog>
 
"        for (int k = start; k < end; k++) {"
  <Catalog>
    <col0>        for (int k = start; k < end; k) {</col0>
  </Catalog>
 
"          st += (parts[k] + " ");"
  <Catalog>
    <col0>          st = (parts[k]   );</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        cbm.addElement(st.trim());"
  <Catalog>
    <col0>        cbm.addElement(st.trim());</col0>
  </Catalog>
 
"        start += starlen[j];"
  <Catalog>
    <col0>        start = starlen[j];</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jcb4Star.setModel(cbm);"
  <Catalog>
    <col0>      jcb4Star.setModel(cbm);</col0>
  </Catalog>
 
"      jcb4Star.setSelectedIndex(0);"
  <Catalog>
    <col0>      jcb4Star.setSelectedIndex(0);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      out += "3361\tNo Data Available" + CRLF;"
  <Catalog>
    <col0>      out = 3361\tNo Data Available  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return out;"
  <Catalog>
    <col0>    return out;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void calcCost() {"
  <Catalog>
    <col0>  private void calcCost() {</col0>
  </Catalog>
 
"    int jj = js4Dist.getValue();"
  <Catalog>
    <col0>    int jj = js4Dist.getValue();</col0>
  </Catalog>
 
"    int dt = Integer.parseInt(jComboBox19.getSelectedItem().toString());"
  <Catalog>
    <col0>    int dt = Integer.parseInt(jComboBox19.getSelectedItem().toString());</col0>
  </Catalog>
 
"    String start = "";"
  <Catalog>
    <col0>    String start = ;</col0>
  </Catalog>
 
"    Refined = jCheckBox2.isSelected();"
  <Catalog>
    <col0>    Refined = jCheckBox2.isSelected();</col0>
  </Catalog>
 
"    if (Refined == true) {"
  <Catalog>
    <col0>    if (Refined == true) {</col0>
  </Catalog>
 
"      cost = refined;"
  <Catalog>
    <col0>      cost = refined;</col0>
  </Catalog>
 
"    } else if (Refined == false) {"
  <Catalog>
    <col0>    } else if (Refined == false) {</col0>
  </Catalog>
 
"      cost = unrefined;"
  <Catalog>
    <col0>      cost = unrefined;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String k = null;"
  <Catalog>
    <col0>    String k = null;</col0>
  </Catalog>
 
"    boolean KT = jCheckBox1.isSelected();"
  <Catalog>
    <col0>    boolean KT = jCheckBox1.isSelected();</col0>
  </Catalog>
 
"    if (KT == true) {"
  <Catalog>
    <col0>    if (KT == true) {</col0>
  </Catalog>
 
"      start = "MCr";"
  <Catalog>
    <col0>      start = MCr;</col0>
  </Catalog>
 
"      k = ",000";"
  <Catalog>
    <col0>      k = ,000;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (!KT) {"
  <Catalog>
    <col0>    if (!KT) {</col0>
  </Catalog>
 
"      start = "KCr";"
  <Catalog>
    <col0>      start = KCr;</col0>
  </Catalog>
 
"      k = "";"
  <Catalog>
    <col0>      k = ;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (js4Dist.getValue() == 0) {"
  <Catalog>
    <col0>    if (js4Dist.getValue() == 0) {</col0>
  </Catalog>
 
"      jj = 1;"
  <Catalog>
    <col0>      jj = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int sum = dt * jj / 10 * cost;"
  <Catalog>
    <col0>    int sum = dt * jj / 10 * cost;</col0>
  </Catalog>
 
"    jLabel3.setText("" + sum + start);"
  <Catalog>
    <col0>    jLabel3.setText(  sum  start);</col0>
  </Catalog>
 
"    jLabel3.setToolTipText("Click to alter costs");"
  <Catalog>
    <col0>    jLabel3.setToolTipText(Click to alter costs);</col0>
  </Catalog>
 
"    jCheckBox2.setToolTipText("" + cost + "KCr per ton");"
  <Catalog>
    <col0>    jCheckBox2.setToolTipText(  cost  KCr per ton);</col0>
  </Catalog>
 
"    jCheckBox1.setToolTipText("" + (dt / 10 * jj) + k + " tons fuel");"
  <Catalog>
    <col0>    jCheckBox1.setToolTipText(  (dt / 10 * jj)  k   tons fuel);</col0>
  </Catalog>
 
"    String txt = "Jump " + js4Dist.getValue() + " - " + jCheckBox1"
  <Catalog>
    <col0>    String txt = Jump   js4Dist.getValue()   -   jCheckBox1</col0>
  </Catalog>
 
"      .getToolTipText() + " @ " + jCheckBox2.getToolTipText() + " = " + jLabel3"
  <Catalog>
    <col0>      .getToolTipText()   @   jCheckBox2.getToolTipText()   =   jLabel3</col0>
  </Catalog>
 
"      .getText();"
  <Catalog>
    <col0>      .getText();</col0>
  </Catalog>
 
"    txt2cb(txt);"
  <Catalog>
    <col0>    txt2cb(txt);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveSecFiles() {"
  <Catalog>
    <col0>  private void saveSecFiles() {</col0>
  </Catalog>
 
"    for (int j = 0; j < jcb4Sec.getModel().getSize(); j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < jcb4Sec.getModel().getSize(); j) {</col0>
  </Catalog>
 
"      jcb4Sec.setSelectedIndex(j);"
  <Catalog>
    <col0>      jcb4Sec.setSelectedIndex(j);</col0>
  </Catalog>
 
"      saveSubFiles();"
  <Catalog>
    <col0>      saveSubFiles();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveSubFiles() {"
  <Catalog>
    <col0>  private void saveSubFiles() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      for (int k = 0; k < jcb4Sub.getModel().getSize(); k++) {"
  <Catalog>
    <col0>      for (int k = 0; k < jcb4Sub.getModel().getSize(); k) {</col0>
  </Catalog>
 
"        jcb4Sub.setSelectedIndex(k);"
  <Catalog>
    <col0>        jcb4Sub.setSelectedIndex(k);</col0>
  </Catalog>
 
"        saveSysFiles();"
  <Catalog>
    <col0>        saveSysFiles();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("3513" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(3513   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveSysFiles() {"
  <Catalog>
    <col0>  private void saveSysFiles() {</col0>
  </Catalog>
 
"    for (int l = 0; l < jcb4Sys.getModel().getSize(); l++) {"
  <Catalog>
    <col0>    for (int l = 0; l < jcb4Sys.getModel().getSize(); l) {</col0>
  </Catalog>
 
"      jcb4Sys.setSelectedIndex(l);"
  <Catalog>
    <col0>      jcb4Sys.setSelectedIndex(l);</col0>
  </Catalog>
 
"      saveTexts();"
  <Catalog>
    <col0>      saveTexts();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getPrimary() {"
  <Catalog>
    <col0>  private String getPrimary() {</col0>
  </Catalog>
 
"    return jcb4Star.getItemAt(0).toString();"
  <Catalog>
    <col0>    return jcb4Star.getItemAt(0).toString();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void modTech() {"
  <Catalog>
    <col0>  private void modTech() {</col0>
  </Catalog>
 
"    //St"
  <Catalog>
    <col0>    //St</col0>
  </Catalog>
 
"    //"A"=+6"
  <Catalog>
    <col0>    //A=6</col0>
  </Catalog>
 
"    //"B"=+4"
  <Catalog>
    <col0>    //B=4</col0>
  </Catalog>
 
"    //"C"=+2"
  <Catalog>
    <col0>    //C=2</col0>
  </Catalog>
 
"    //"X"=-4"
  <Catalog>
    <col0>    //X=-4</col0>
  </Catalog>
 
"    //"F"=+1"
  <Catalog>
    <col0>    //F=1</col0>
  </Catalog>
 
"    //Si"
  <Catalog>
    <col0>    //Si</col0>
  </Catalog>
 
"    //0,1 = +2"
  <Catalog>
    <col0>    //0,1 = 2</col0>
  </Catalog>
 
"    //2,3,4 = +1"
  <Catalog>
    <col0>    //2,3,4 = 1</col0>
  </Catalog>
 
"    //A"
  <Catalog>
    <col0>    //A</col0>
  </Catalog>
 
"    //0,1,2,3 = +1"
  <Catalog>
    <col0>    //0,1,2,3 = 1</col0>
  </Catalog>
 
"    //A,B,C,D,E,F = +1"
  <Catalog>
    <col0>    //A,B,C,D,E,F = 1</col0>
  </Catalog>
 
"    //H"
  <Catalog>
    <col0>    //H</col0>
  </Catalog>
 
"    //9 = +1"
  <Catalog>
    <col0>    //9 = 1</col0>
  </Catalog>
 
"    //10 = +2"
  <Catalog>
    <col0>    //10 = 2</col0>
  </Catalog>
 
"    //P"
  <Catalog>
    <col0>    //P</col0>
  </Catalog>
 
"    //1,2,3,4,5 = +1"
  <Catalog>
    <col0>    //1,2,3,4,5 = 1</col0>
  </Catalog>
 
"    //9 = +2"
  <Catalog>
    <col0>    //9 = 2</col0>
  </Catalog>
 
"    //10 = +4"
  <Catalog>
    <col0>    //10 = 4</col0>
  </Catalog>
 
"    //G"
  <Catalog>
    <col0>    //G</col0>
  </Catalog>
 
"    //0,5 = +1"
  <Catalog>
    <col0>    //0,5 = 1</col0>
  </Catalog>
 
"    //13 = -2"
  <Catalog>
    <col0>    //13 = -2</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getBigWorld() {"
  <Catalog>
    <col0>  private String getBigWorld() {</col0>
  </Catalog>
 
"    if (orbit[habz] == "") {"
  <Catalog>
    <col0>    if (orbit[habz] == ) {</col0>
  </Catalog>
 
"      orbit[habz] = "BigWorld";"
  <Catalog>
    <col0>      orbit[habz] = BigWorld;</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return orbit[habz];"
  <Catalog>
    <col0>    return orbit[habz];</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getGG() {"
  <Catalog>
    <col0>  private static String getGG() {</col0>
  </Catalog>
 
"    num = GlobalMethods.roll2d();"
  <Catalog>
    <col0>    num = GlobalMethods.roll2d();</col0>
  </Catalog>
 
"    String rep = getStringFromTable("2D", "" + num, "Dia", GGs);"
  <Catalog>
    <col0>    String rep = getStringFromTable(2D,   num, Dia, GGs);</col0>
  </Catalog>
 
"    int gasg = 0;"
  <Catalog>
    <col0>    int gasg = 0;</col0>
  </Catalog>
 
"    if (num < 4) {"
  <Catalog>
    <col0>    if (num < 4) {</col0>
  </Catalog>
 
"      if (gasg % 2 == 0) {"
  <Catalog>
    <col0>      if (gasg % 2 == 0) {</col0>
  </Catalog>
 
"        rep = "SGG (" + rep + " mi dia.)";"
  <Catalog>
    <col0>        rep = SGG (  rep   mi dia.);</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        rep = "IG (" + rep + " mi dia.)";"
  <Catalog>
    <col0>        rep = IG (  rep   mi dia.);</col0>
  </Catalog>
 
"        gasg += 1;"
  <Catalog>
    <col0>        gasg = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      rep = "LGG (" + rep + " mi dia.)";"
  <Catalog>
    <col0>      rep = LGG (  rep   mi dia.);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    ws = GlobalMethods.fromHex(getStringFromTable("2D", "" + num, "WSize", GGs));"
  <Catalog>
    <col0>    ws = GlobalMethods.fromHex(getStringFromTable(2D,   num, WSize, GGs));</col0>
  </Catalog>
 
"    rep += "\tS=" + ws;"
  <Catalog>
    <col0>    rep = \tS=  ws;</col0>
  </Catalog>
 
"    return rep;"
  <Catalog>
    <col0>    return rep;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showStrength() {"
  <Catalog>
    <col0>  private void showStrength() {</col0>
  </Catalog>
 
"    jta4Str.setText("");"
  <Catalog>
    <col0>    jta4Str.setText();</col0>
  </Catalog>
 
"    SDBsMouseClicked(me);"
  <Catalog>
    <col0>    SDBsMouseClicked(me);</col0>
  </Catalog>
 
"    RonsMouseClicked(me);"
  <Catalog>
    <col0>    RonsMouseClicked(me);</col0>
  </Catalog>
 
"    CFMouseClicked(me);"
  <Catalog>
    <col0>    CFMouseClicked(me);</col0>
  </Catalog>
 
"    TroopsMouseClicked(me);"
  <Catalog>
    <col0>    TroopsMouseClicked(me);</col0>
  </Catalog>
 
"    String[] p;"
  <Catalog>
    <col0>    String[] p;</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Str.append("SDB Squadrons = " + sdbs1.getText() + CRLF);"
  <Catalog>
    <col0>    jta4Str.append(SDB Squadrons =   sdbs1.getText()  CRLF);</col0>
  </Catalog>
 
"    if (!sdbs1.getText().equals("X")) {"
  <Catalog>
    <col0>    if (!sdbs1.getText().equals(X)) {</col0>
  </Catalog>
 
"      jta4Str.append(getSDBTactics());"
  <Catalog>
    <col0>      jta4Str.append(getSDBTactics());</col0>
  </Catalog>
 
"      p = Panel4T5TableView.getTableData("
  <Catalog>
    <col0>      p = Panel4T5TableView.getTableData(</col0>
  </Catalog>
 
"        new String[]{"SDBSquadrons", getpop(), gettl()}).split(CRLF);"
  <Catalog>
    <col0>        new String[]{SDBSquadrons, getpop(), gettl()}).split(CRLF);</col0>
  </Catalog>
 
"      for (String p1 : p) {"
  <Catalog>
    <col0>      for (String p1 : p) {</col0>
  </Catalog>
 
"        jta4Str.append("\t" + p1 + CRLF);"
  <Catalog>
    <col0>        jta4Str.append(\t  p1  CRLF);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Str.append("Starship Squadrons = " + squadrons.getText() + CRLF);"
  <Catalog>
    <col0>    jta4Str.append(Starship Squadrons =   squadrons.getText()  CRLF);</col0>
  </Catalog>
 
"    if (!squadrons.getText().equals("X")) {"
  <Catalog>
    <col0>    if (!squadrons.getText().equals(X)) {</col0>
  </Catalog>
 
"      jta4Str.append(getSquadronTactics());"
  <Catalog>
    <col0>      jta4Str.append(getSquadronTactics());</col0>
  </Catalog>
 
"      p = Panel4T5TableView.getTableData("
  <Catalog>
    <col0>      p = Panel4T5TableView.getTableData(</col0>
  </Catalog>
 
"        new String[]{"MaxStarshipSquadrons", getpop(), gettl(), troopunits"
  <Catalog>
    <col0>        new String[]{MaxStarshipSquadrons, getpop(), gettl(), troopunits</col0>
  </Catalog>
 
"          .getText()}).split(CRLF);"
  <Catalog>
    <col0>          .getText()}).split(CRLF);</col0>
  </Catalog>
 
"      for (String p1 : p) {"
  <Catalog>
    <col0>      for (String p1 : p) {</col0>
  </Catalog>
 
"        jta4Str.append("\t" + p1 + CRLF);"
  <Catalog>
    <col0>        jta4Str.append(\t  p1  CRLF);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Str.append("Defence CF = " + defbats.getText() + CRLF);"
  <Catalog>
    <col0>    jta4Str.append(Defence CF =   defbats.getText()  CRLF);</col0>
  </Catalog>
 
"    if (!defbats.getText().equals("X")) {"
  <Catalog>
    <col0>    if (!defbats.getText().equals(X)) {</col0>
  </Catalog>
 
"      jta4Str.append(getDefTactics());"
  <Catalog>
    <col0>      jta4Str.append(getDefTactics());</col0>
  </Catalog>
 
"      p = Panel4T5TableView.getTableData("
  <Catalog>
    <col0>      p = Panel4T5TableView.getTableData(</col0>
  </Catalog>
 
"        new String[]{"DefenceBattalionsCombatFactor", getpop(), gettl(), defbats"
  <Catalog>
    <col0>        new String[]{DefenceBattalionsCombatFactor, getpop(), gettl(), defbats</col0>
  </Catalog>
 
"          .getText()}).split(CRLF);"
  <Catalog>
    <col0>          .getText()}).split(CRLF);</col0>
  </Catalog>
 
"      for (String p1 : p) {"
  <Catalog>
    <col0>      for (String p1 : p) {</col0>
  </Catalog>
 
"        jta4Str.append("\t" + p1 + CRLF);"
  <Catalog>
    <col0>        jta4Str.append(\t  p1  CRLF);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Str.append("Troop CF = " + troopunits.getText() + CRLF);"
  <Catalog>
    <col0>    jta4Str.append(Troop CF =   troopunits.getText()  CRLF);</col0>
  </Catalog>
 
"    if (!troopunits.getText().equals("X")) {"
  <Catalog>
    <col0>    if (!troopunits.getText().equals(X)) {</col0>
  </Catalog>
 
"      jta4Str.append(getTroopTactics());"
  <Catalog>
    <col0>      jta4Str.append(getTroopTactics());</col0>
  </Catalog>
 
"      p = Panel4T5TableView.getTableData("
  <Catalog>
    <col0>      p = Panel4T5TableView.getTableData(</col0>
  </Catalog>
 
"        new String[]{"InitialProduction", getpop(), gettl(), defbats.getText()})"
  <Catalog>
    <col0>        new String[]{InitialProduction, getpop(), gettl(), defbats.getText()})</col0>
  </Catalog>
 
"        .split(CRLF);"
  <Catalog>
    <col0>        .split(CRLF);</col0>
  </Catalog>
 
"      for (String p1 : p) {"
  <Catalog>
    <col0>      for (String p1 : p) {</col0>
  </Catalog>
 
"        jta4Str.append("\t" + p1 + CRLF);"
  <Catalog>
    <col0>        jta4Str.append(\t  p1  CRLF);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    jta4Str.append("Refuelling options" + CRLF);"
  <Catalog>
    <col0>    jta4Str.append(Refuelling options  CRLF);</col0>
  </Catalog>
 
"    if (getFuelTactics() != null) {"
  <Catalog>
    <col0>    if (getFuelTactics() != null) {</col0>
  </Catalog>
 
"      jta4Str.append(getFuelTactics());"
  <Catalog>
    <col0>      jta4Str.append(getFuelTactics());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void doJumps() {"
  <Catalog>
    <col0>  private void doJumps() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      T5JumpCalc jumpCalc = new dbviewer.T5JumpCalc(jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>      T5JumpCalc jumpCalc = new dbviewer.T5JumpCalc(jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"        .toString(), Panel4T5Locator.js4Dist.getValue(), "T5");"
  <Catalog>
    <col0>        .toString(), Panel4T5Locator.js4Dist.getValue(), T5);</col0>
  </Catalog>
 
"      showJumps();"
  <Catalog>
    <col0>      showJumps();</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("3896" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(3896   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showJumps() {"
  <Catalog>
    <col0>  private void showJumps() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;;"
  <Catalog>
    <col0>    boolean DEBUG = false;;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    dlm = new DefaultListModel<>();"
  <Catalog>
    <col0>    dlm = new DefaultListModel<>();</col0>
  </Catalog>
 
"    String[] neighbours = new String[9];"
  <Catalog>
    <col0>    String[] neighbours = new String[9];</col0>
  </Catalog>
 
"    JLabel tmp = null;"
  <Catalog>
    <col0>    JLabel tmp = null;</col0>
  </Catalog>
 
"    for (int j = 0; j < neighbours.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < neighbours.length; j) {</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="switch (j)">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=switch (j)></col0>
  </Catalog>
 
"      switch (j) {"
  <Catalog>
    <col0>      switch (j) {</col0>
  </Catalog>
 
"        case 0: {"
  <Catalog>
    <col0>        case 0: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel0;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel0;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 1: {"
  <Catalog>
    <col0>        case 1: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel1;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel1;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 2: {"
  <Catalog>
    <col0>        case 2: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel2;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel2;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 3: {"
  <Catalog>
    <col0>        case 3: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel3;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel3;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 4: {"
  <Catalog>
    <col0>        case 4: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel4;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel4;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 5: {"
  <Catalog>
    <col0>        case 5: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel5;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel5;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 6: {"
  <Catalog>
    <col0>        case 6: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel6;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel6;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 7: {"
  <Catalog>
    <col0>        case 7: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel7;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel7;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 8: {"
  <Catalog>
    <col0>        case 8: {</col0>
  </Catalog>
 
"          tmp = panel4Sec.jLabel8;"
  <Catalog>
    <col0>          tmp = panel4Sec.jLabel8;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      neighbours[j] = _SEC + FS + tmp.getToolTipText() + ".sec";"
  <Catalog>
    <col0>      neighbours[j] = _SEC  FS  tmp.getToolTipText()  .sec;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String[] lines = GlobalMethods.getLinesFromFile(new File(neighbours[0]));"
  <Catalog>
    <col0>    String[] lines = GlobalMethods.getLinesFromFile(new File(neighbours[0]));</col0>
  </Catalog>
 
"    int start = 0;"
  <Catalog>
    <col0>    int start = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].startsWith("----")) {"
  <Catalog>
    <col0>      if (lines[j].startsWith(----)) {</col0>
  </Catalog>
 
"        start = j;"
  <Catalog>
    <col0>        start = j;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String[] worlds = new String[lines.length - start];"
  <Catalog>
    <col0>    String[] worlds = new String[lines.length - start];</col0>
  </Catalog>
 
"    int i = 0;"
  <Catalog>
    <col0>    int i = 0;</col0>
  </Catalog>
 
"    for (int j = (start + 1); j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = (start  1); j < lines.length; j) {</col0>
  </Catalog>
 
"      worlds[i] = lines[j];"
  <Catalog>
    <col0>      worlds[i] = lines[j];</col0>
  </Catalog>
 
"      i += 1;"
  <Catalog>
    <col0>      i = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String[] entries = jta4Near.getText().split(CRLF);"
  <Catalog>
    <col0>    String[] entries = jta4Near.getText().split(CRLF);</col0>
  </Catalog>
 
"    for (int j = 0; j < entries.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < entries.length; j) {</col0>
  </Catalog>
 
"      //if not end in "OUT" and within jcb4Sys then"
  <Catalog>
    <col0>      //if not end in OUT and within jcb4Sys then</col0>
  </Catalog>
 
"      if (!entries[j].contains("OUT")) {"
  <Catalog>
    <col0>      if (!entries[j].contains(OUT)) {</col0>
  </Catalog>
 
"        boolean done = false;"
  <Catalog>
    <col0>        boolean done = false;</col0>
  </Catalog>
 
"        try {"
  <Catalog>
    <col0>        try {</col0>
  </Catalog>
 
"          for (int k = 0; k < worlds.length; k++) {"
  <Catalog>
    <col0>          for (int k = 0; k < worlds.length; k) {</col0>
  </Catalog>
 
"            if (worlds[k].substring(0, 4).equals(entries[j])) {"
  <Catalog>
    <col0>            if (worlds[k].substring(0, 4).equals(entries[j])) {</col0>
  </Catalog>
 
"              done = true;"
  <Catalog>
    <col0>              done = true;</col0>
  </Catalog>
 
"              dlm.addElement(worlds[k]);"
  <Catalog>
    <col0>              dlm.addElement(worlds[k]);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        } catch (Exception e) {"
  <Catalog>
    <col0>        } catch (Exception e) {</col0>
  </Catalog>
 
"          //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>          //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"          if (DEBUG) {"
  <Catalog>
    <col0>          if (DEBUG) {</col0>
  </Catalog>
 
"            System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>            System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"            System.out.println("4011 = " + e.toString());"
  <Catalog>
    <col0>            System.out.println(4011 =   e.toString());</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //</editor-fold>"
  <Catalog>
    <col0>          //</editor-fold></col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (!done) {"
  <Catalog>
    <col0>        if (!done) {</col0>
  </Catalog>
 
"          dlm.addElement(entries[j]);"
  <Catalog>
    <col0>          dlm.addElement(entries[j]);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        // OUT only"
  <Catalog>
    <col0>        // OUT only</col0>
  </Catalog>
 
"        int x = Integer.parseInt(entries[j].substring(0, 2));"
  <Catalog>
    <col0>        int x = Integer.parseInt(entries[j].substring(0, 2));</col0>
  </Catalog>
 
"        int y = Integer.parseInt(entries[j].substring(2, 4));"
  <Catalog>
    <col0>        int y = Integer.parseInt(entries[j].substring(2, 4));</col0>
  </Catalog>
 
"        String orig = jcb4Sys.getSelectedItem().toString().substring(0, 4);"
  <Catalog>
    <col0>        String orig = jcb4Sys.getSelectedItem().toString().substring(0, 4);</col0>
  </Catalog>
 
"        int X = Integer.parseInt(orig.substring(0, 2));"
  <Catalog>
    <col0>        int X = Integer.parseInt(orig.substring(0, 2));</col0>
  </Catalog>
 
"        int Y = Integer.parseInt(orig.substring(2, 4));"
  <Catalog>
    <col0>        int Y = Integer.parseInt(orig.substring(2, 4));</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="try">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=try></col0>
  </Catalog>
 
"        try {"
  <Catalog>
    <col0>        try {</col0>
  </Catalog>
 
"          if (X < 17 & Y < 21) {//Top Left"
  <Catalog>
    <col0>          if (X < 17 & Y < 21) {//Top Left</col0>
  </Catalog>
 
"            if (x < 17 & y > 20) {"
  <Catalog>
    <col0>            if (x < 17 & y > 20) {</col0>
  </Catalog>
 
"              entries[j] += " N";"
  <Catalog>
    <col0>              entries[j] =  N;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x > 16 & y < 21) {"
  <Catalog>
    <col0>            if (x > 16 & y < 21) {</col0>
  </Catalog>
 
"              entries[j] += " W";"
  <Catalog>
    <col0>              entries[j] =  W;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x > 16 & y > 20) {"
  <Catalog>
    <col0>            if (x > 16 & y > 20) {</col0>
  </Catalog>
 
"              entries[j] += " NW";"
  <Catalog>
    <col0>              entries[j] =  NW;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          } else if (X > 16 & Y < 21) {//Top Right"
  <Catalog>
    <col0>          } else if (X > 16 & Y < 21) {//Top Right</col0>
  </Catalog>
 
"            if (x > 16 & y > 20) {"
  <Catalog>
    <col0>            if (x > 16 & y > 20) {</col0>
  </Catalog>
 
"              entries[j] += " N";"
  <Catalog>
    <col0>              entries[j] =  N;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x < 17 & y < 21) {"
  <Catalog>
    <col0>            if (x < 17 & y < 21) {</col0>
  </Catalog>
 
"              entries[j] += " E";"
  <Catalog>
    <col0>              entries[j] =  E;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x < 17 & y > 20) {"
  <Catalog>
    <col0>            if (x < 17 & y > 20) {</col0>
  </Catalog>
 
"              entries[j] += " NE";"
  <Catalog>
    <col0>              entries[j] =  NE;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          } else if (X < 17 & Y > 20) {//Bottom Left"
  <Catalog>
    <col0>          } else if (X < 17 & Y > 20) {//Bottom Left</col0>
  </Catalog>
 
"            if (x < 17 & y < 21) {"
  <Catalog>
    <col0>            if (x < 17 & y < 21) {</col0>
  </Catalog>
 
"              entries[j] += " S";"
  <Catalog>
    <col0>              entries[j] =  S;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x > 16 & y < 21) {"
  <Catalog>
    <col0>            if (x > 16 & y < 21) {</col0>
  </Catalog>
 
"              entries[j] += " SW";"
  <Catalog>
    <col0>              entries[j] =  SW;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x > 16 & y > 20) {"
  <Catalog>
    <col0>            if (x > 16 & y > 20) {</col0>
  </Catalog>
 
"              entries[j] += " W";"
  <Catalog>
    <col0>              entries[j] =  W;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"          } else if (X > 16 & Y > 20) {//Bottom Right"
  <Catalog>
    <col0>          } else if (X > 16 & Y > 20) {//Bottom Right</col0>
  </Catalog>
 
"            if (x > 16 & y < 21) {"
  <Catalog>
    <col0>            if (x > 16 & y < 21) {</col0>
  </Catalog>
 
"              entries[j] += " S";"
  <Catalog>
    <col0>              entries[j] =  S;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x < 17 & y < 21) {"
  <Catalog>
    <col0>            if (x < 17 & y < 21) {</col0>
  </Catalog>
 
"              entries[j] += " SE";"
  <Catalog>
    <col0>              entries[j] =  SE;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (x < 17 & y > 20) {"
  <Catalog>
    <col0>            if (x < 17 & y > 20) {</col0>
  </Catalog>
 
"              entries[j] += " E";"
  <Catalog>
    <col0>              entries[j] =  E;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          } else {"
  <Catalog>
    <col0>          } else {</col0>
  </Catalog>
 
"            JOptionPane.showMessageDialog(panel4Jump,"
  <Catalog>
    <col0>            JOptionPane.showMessageDialog(panel4Jump,</col0>
  </Catalog>
 
"              "X=" + X + ",Y=" + Y + ",x=" + x + ",y=" + y);"
  <Catalog>
    <col0>              X=  X  ,Y=  Y  ,x=  x  ,y=  y);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        } catch (Exception e) {"
  <Catalog>
    <col0>        } catch (Exception e) {</col0>
  </Catalog>
 
"          System.out.println("4035" + " = " + e.toString());"
  <Catalog>
    <col0>          System.out.println(4035   =   e.toString());</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        String[] entree = entries[j].split("OUT ");"
  <Catalog>
    <col0>        String[] entree = entries[j].split(OUT );</col0>
  </Catalog>
 
"        int num = 0;"
  <Catalog>
    <col0>        int num = 0;</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (entree[1])">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (entree[1])></col0>
  </Catalog>
 
"        switch (entree[1]) {"
  <Catalog>
    <col0>        switch (entree[1]) {</col0>
  </Catalog>
 
"          case "N": {"
  <Catalog>
    <col0>          case N: {</col0>
  </Catalog>
 
"            num = 2;"
  <Catalog>
    <col0>            num = 2;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "NE": {"
  <Catalog>
    <col0>          case NE: {</col0>
  </Catalog>
 
"            num = 3;"
  <Catalog>
    <col0>            num = 3;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "E": {"
  <Catalog>
    <col0>          case E: {</col0>
  </Catalog>
 
"            num = 4;"
  <Catalog>
    <col0>            num = 4;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "SE": {"
  <Catalog>
    <col0>          case SE: {</col0>
  </Catalog>
 
"            num = 5;"
  <Catalog>
    <col0>            num = 5;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "S": {"
  <Catalog>
    <col0>          case S: {</col0>
  </Catalog>
 
"            num = 6;"
  <Catalog>
    <col0>            num = 6;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "SW": {"
  <Catalog>
    <col0>          case SW: {</col0>
  </Catalog>
 
"            num = 7;"
  <Catalog>
    <col0>            num = 7;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "W": {"
  <Catalog>
    <col0>          case W: {</col0>
  </Catalog>
 
"            num = 8;"
  <Catalog>
    <col0>            num = 8;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "NW": {"
  <Catalog>
    <col0>          case NW: {</col0>
  </Catalog>
 
"            num = 1;"
  <Catalog>
    <col0>            num = 1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        String[] all = GlobalMethods.getLinesFromFile(new File(neighbours[num]));"
  <Catalog>
    <col0>        String[] all = GlobalMethods.getLinesFromFile(new File(neighbours[num]));</col0>
  </Catalog>
 
"        for (int k = 0; k < all.length; k++) {"
  <Catalog>
    <col0>        for (int k = 0; k < all.length; k) {</col0>
  </Catalog>
 
"          string = "";"
  <Catalog>
    <col0>          string = ;</col0>
  </Catalog>
 
"          if (all[k].startsWith(entree[0].substring(0, 4))) {"
  <Catalog>
    <col0>          if (all[k].startsWith(entree[0].substring(0, 4))) {</col0>
  </Catalog>
 
"            string = all[k];"
  <Catalog>
    <col0>            string = all[k];</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          } else {"
  <Catalog>
    <col0>          } else {</col0>
  </Catalog>
 
"            string = "";"
  <Catalog>
    <col0>            string = ;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (string != "") {"
  <Catalog>
    <col0>        if (string != ) {</col0>
  </Catalog>
 
"          dlm.addElement(entries[j].substring(0, 5) + string.substring(5));////"
  <Catalog>
    <col0>          dlm.addElement(entries[j].substring(0, 5)  string.substring(5));////</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          dlm.addElement(entree[0]);"
  <Catalog>
    <col0>          dlm.addElement(entree[0]);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jl4Jump.setModel(dlm);"
  <Catalog>
    <col0>    jl4Jump.setModel(dlm);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getStarColors() {"
  <Catalog>
    <col0>  private String getStarColors() {</col0>
  </Catalog>
 
"    String txt = "getStarColors" + CRLF;"
  <Catalog>
    <col0>    String txt = getStarColors  CRLF;</col0>
  </Catalog>
 
"    txt += "O Blue" + " = " + o.getRed() + "-" + o.getGreen() + "-" + o"
  <Catalog>
    <col0>    txt = O Blue   =   o.getRed()  -  o.getGreen()  -  o</col0>
  </Catalog>
 
"      .getBlue() + CRLF;"
  <Catalog>
    <col0>      .getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "B Blue-White" + " = " + be.getRed() + "-" + be.getGreen() + "-" + be"
  <Catalog>
    <col0>    txt = B Blue-White   =   be.getRed()  -  be.getGreen()  -  be</col0>
  </Catalog>
 
"      .getBlue() + CRLF;"
  <Catalog>
    <col0>      .getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "A Cyan" + " = " + a.getRed() + "-" + a.getGreen() + "-" + a"
  <Catalog>
    <col0>    txt = A Cyan   =   a.getRed()  -  a.getGreen()  -  a</col0>
  </Catalog>
 
"      .getBlue() + CRLF;"
  <Catalog>
    <col0>      .getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "F Yellow-White" + " = " + fi.getRed() + "-" + fi.getGreen() + "-" + fi"
  <Catalog>
    <col0>    txt = F Yellow-White   =   fi.getRed()  -  fi.getGreen()  -  fi</col0>
  </Catalog>
 
"      .getBlue() + CRLF;"
  <Catalog>
    <col0>      .getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "G Yellow" + " = " + gi.getRed() + "-" + gi.getGreen() + "-" + gi"
  <Catalog>
    <col0>    txt = G Yellow   =   gi.getRed()  -  gi.getGreen()  -  gi</col0>
  </Catalog>
 
"      .getBlue() + CRLF;"
  <Catalog>
    <col0>      .getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "K Orange" + " = " + k.getRed() + "-" + k.getGreen() + "-" + k"
  <Catalog>
    <col0>    txt = K Orange   =   k.getRed()  -  k.getGreen()  -  k</col0>
  </Catalog>
 
"      .getBlue() + CRLF;"
  <Catalog>
    <col0>      .getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "M Red" + " = " + m.getRed() + "-" + m.getGreen() + "-" + m.getBlue() + CRLF;"
  <Catalog>
    <col0>    txt = M Red   =   m.getRed()  -  m.getGreen()  -  m.getBlue()  CRLF;</col0>
  </Catalog>
 
"    return txt;"
  <Catalog>
    <col0>    return txt;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addMoons(int orb) {"
  <Catalog>
    <col0>  private void addMoons(int orb) {</col0>
  </Catalog>
 
"    moons = 0;"
  <Catalog>
    <col0>    moons = 0;</col0>
  </Catalog>
 
"    rings = 0;"
  <Catalog>
    <col0>    rings = 0;</col0>
  </Catalog>
 
"    hz = Integer.parseInt(GlobalMethods.getHZ(Stars[0]));"
  <Catalog>
    <col0>    hz = Integer.parseInt(GlobalMethods.getHZ(Stars[0]));</col0>
  </Catalog>
 
"    {"
  <Catalog>
    <col0>    {</col0>
  </Catalog>
 
"      int numn = GlobalMethods.roll1d();"
  <Catalog>
    <col0>      int numn = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"      if (orbit[orb].contains("GG")) {"
  <Catalog>
    <col0>      if (orbit[orb].contains(GG)) {</col0>
  </Catalog>
 
"        numn -= 1;"
  <Catalog>
    <col0>        numn -= 1;</col0>
  </Catalog>
 
"      } else if (orbit[orb].contains("World")"
  <Catalog>
    <col0>      } else if (orbit[orb].contains(World)</col0>
  </Catalog>
 
"        | orbit[orb].contains("Mainworld")"
  <Catalog>
    <col0>        | orbit[orb].contains(Mainworld)</col0>
  </Catalog>
 
"        | orbit[orb].contains("BigWorld")) {"
  <Catalog>
    <col0>        | orbit[orb].contains(BigWorld)) {</col0>
  </Catalog>
 
"        if (orb < hz - 1) {"
  <Catalog>
    <col0>        if (orb < hz - 1) {</col0>
  </Catalog>
 
"          numn -= 5;"
  <Catalog>
    <col0>          numn -= 5;</col0>
  </Catalog>
 
"        } else if (orb > hz + 1) {"
  <Catalog>
    <col0>        } else if (orb > hz  1) {</col0>
  </Catalog>
 
"          numn -= 3;"
  <Catalog>
    <col0>          numn -= 3;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          numn -= 4;"
  <Catalog>
    <col0>          numn -= 4;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (numn == 0) {"
  <Catalog>
    <col0>      if (numn == 0) {</col0>
  </Catalog>
 
"        rings += 1;"
  <Catalog>
    <col0>        rings = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (rings > 0) {"
  <Catalog>
    <col0>      if (rings > 0) {</col0>
  </Catalog>
 
"        orbit[orb] += CRLF + "\t  " + "Ring @ Orbit " + getOrbitLet();"
  <Catalog>
    <col0>        orbit[orb] = CRLF  \t    Ring @ Orbit   getOrbitLet();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      for (int j = 0; j < numn; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < numn; j) {</col0>
  </Catalog>
 
"        doMoons(orb, numn);"
  <Catalog>
    <col0>        doMoons(orb, numn);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void doMoons(int orb, int mns) {"
  <Catalog>
    <col0>  private void doMoons(int orb, int mns) {</col0>
  </Catalog>
 
"    String[] let = new String[mns];"
  <Catalog>
    <col0>    String[] let = new String[mns];</col0>
  </Catalog>
 
"    int l = 0;"
  <Catalog>
    <col0>    int l = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < mns; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < mns; j) {</col0>
  </Catalog>
 
"      int b = (int) (Math.random() * 2);"
  <Catalog>
    <col0>      int b = (int) (Math.random() * 2);</col0>
  </Catalog>
 
"      if (b == 1) {"
  <Catalog>
    <col0>      if (b == 1) {</col0>
  </Catalog>
 
"        string = "Close";"
  <Catalog>
    <col0>        string = Close;</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        string = "Far";"
  <Catalog>
    <col0>        string = Far;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int roll = GlobalMethods.rollFlux();"
  <Catalog>
    <col0>      int roll = GlobalMethods.rollFlux();</col0>
  </Catalog>
 
"      let[j] = GlobalMethods.getStringFromTable("Flux", "" + roll, string,"
  <Catalog>
    <col0>      let[j] = GlobalMethods.getStringFromTable(Flux,   roll, string,</col0>
  </Catalog>
 
"        MainworldType);"
  <Catalog>
    <col0>        MainworldType);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (orb < habz - 1) {"
  <Catalog>
    <col0>    if (orb < habz - 1) {</col0>
  </Catalog>
 
"      //Inner"
  <Catalog>
    <col0>      //Inner</col0>
  </Catalog>
 
"      sats = InnerSats;"
  <Catalog>
    <col0>      sats = InnerSats;</col0>
  </Catalog>
 
"    } else if (orb > habz + 1) {"
  <Catalog>
    <col0>    } else if (orb > habz  1) {</col0>
  </Catalog>
 
"      //Outer"
  <Catalog>
    <col0>      //Outer</col0>
  </Catalog>
 
"      sats = OuterSats;"
  <Catalog>
    <col0>      sats = OuterSats;</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      //Hospitable"
  <Catalog>
    <col0>      //Hospitable</col0>
  </Catalog>
 
"      sats = HospitableSats;"
  <Catalog>
    <col0>      sats = HospitableSats;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int num = GlobalMethods.roll1d();"
  <Catalog>
    <col0>    int num = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"    if (orbit[orb].contains("GG")) {"
  <Catalog>
    <col0>    if (orbit[orb].contains(GG)) {</col0>
  </Catalog>
 
"      num += 1;"
  <Catalog>
    <col0>      num = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    num -= 1;"
  <Catalog>
    <col0>    num -= 1;</col0>
  </Catalog>
 
"    orbit[orb] += CRLF + "\t  " + sats[num] + "\t  ""
  <Catalog>
    <col0>    orbit[orb] = CRLF  \t    sats[num]  \t  </col0>
  </Catalog>
 
"      + getOtherStats(sats[num], "sat") + " @ Orbit " + let[l++];//;//"
  <Catalog>
    <col0>       getOtherStats(sats[num], sat)   @ Orbit   let[l];//;//</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String fixRingMoons(int orbitnum) {"
  <Catalog>
    <col0>  private String fixRingMoons(int orbitnum) {</col0>
  </Catalog>
 
"    String[] li = orbit[orbitnum].split(CRLF);"
  <Catalog>
    <col0>    String[] li = orbit[orbitnum].split(CRLF);</col0>
  </Catalog>
 
"    int moon = 0;"
  <Catalog>
    <col0>    int moon = 0;</col0>
  </Catalog>
 
"    for (int j = 0; j < li.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < li.length; j) {</col0>
  </Catalog>
 
"      if (li[j].startsWith("\t  ")) {"
  <Catalog>
    <col0>      if (li[j].startsWith(\t  )) {</col0>
  </Catalog>
 
"        moon += 1;"
  <Catalog>
    <col0>        moon = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (moon < 2) {"
  <Catalog>
    <col0>    if (moon < 2) {</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      String let = "";"
  <Catalog>
    <col0>      String let = ;</col0>
  </Catalog>
 
"      String[] letsa;"
  <Catalog>
    <col0>      String[] letsa;</col0>
  </Catalog>
 
"      boolean OK = true;"
  <Catalog>
    <col0>      boolean OK = true;</col0>
  </Catalog>
 
"      letsa = new String[moon];"
  <Catalog>
    <col0>      letsa = new String[moon];</col0>
  </Catalog>
 
"      for (int p = 0; p < moon; p++) {"
  <Catalog>
    <col0>      for (int p = 0; p < moon; p) {</col0>
  </Catalog>
 
"lab:    {"
  <Catalog>
    <col0>lab:    {</col0>
  </Catalog>
 
"          int b = (int) (Math.random() * 2);"
  <Catalog>
    <col0>          int b = (int) (Math.random() * 2);</col0>
  </Catalog>
 
"          if (b == 1) {"
  <Catalog>
    <col0>          if (b == 1) {</col0>
  </Catalog>
 
"            string = "Close";"
  <Catalog>
    <col0>            string = Close;</col0>
  </Catalog>
 
"          } else {"
  <Catalog>
    <col0>          } else {</col0>
  </Catalog>
 
"            string = "Far";"
  <Catalog>
    <col0>            string = Far;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          int roll = GlobalMethods.rollFlux();"
  <Catalog>
    <col0>          int roll = GlobalMethods.rollFlux();</col0>
  </Catalog>
 
"          let = GlobalMethods.getStringFromTable("Flux", "" + roll, string,"
  <Catalog>
    <col0>          let = GlobalMethods.getStringFromTable(Flux,   roll, string,</col0>
  </Catalog>
 
"            MainworldType);"
  <Catalog>
    <col0>            MainworldType);</col0>
  </Catalog>
 
"          OK = true;"
  <Catalog>
    <col0>          OK = true;</col0>
  </Catalog>
 
"          letsa[p] = let;"
  <Catalog>
    <col0>          letsa[p] = let;</col0>
  </Catalog>
 
"          for (int k = 0; k < letsa.length; k++) {"
  <Catalog>
    <col0>          for (int k = 0; k < letsa.length; k) {</col0>
  </Catalog>
 
"            if (p != k & let == letsa[k]) {"
  <Catalog>
    <col0>            if (p != k & let == letsa[k]) {</col0>
  </Catalog>
 
"              OK = false;"
  <Catalog>
    <col0>              OK = false;</col0>
  </Catalog>
 
"              p -= 1;"
  <Catalog>
    <col0>              p -= 1;</col0>
  </Catalog>
 
"              break lab;"
  <Catalog>
    <col0>              break lab;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      Arrays.sort(letsa);"
  <Catalog>
    <col0>      Arrays.sort(letsa);</col0>
  </Catalog>
 
"      int n = 0;"
  <Catalog>
    <col0>      int n = 0;</col0>
  </Catalog>
 
"      for (int j = 0; j < li.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < li.length; j) {</col0>
  </Catalog>
 
"        if (li[j].startsWith("\t  ")) {"
  <Catalog>
    <col0>        if (li[j].startsWith(\t  )) {</col0>
  </Catalog>
 
"          int len = li[j].length();"
  <Catalog>
    <col0>          int len = li[j].length();</col0>
  </Catalog>
 
"          li[j] = li[j].substring(0, len - 1) + letsa[n++];"
  <Catalog>
    <col0>          li[j] = li[j].substring(0, len - 1)  letsa[n];</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String newline = "";"
  <Catalog>
    <col0>    String newline = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < li.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < li.length; j) {</col0>
  </Catalog>
 
"      newline += li[j];"
  <Catalog>
    <col0>      newline = li[j];</col0>
  </Catalog>
 
"      if (j < li.length - 1) {"
  <Catalog>
    <col0>      if (j < li.length - 1) {</col0>
  </Catalog>
 
"        newline += CRLF;"
  <Catalog>
    <col0>        newline = CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return newline;"
  <Catalog>
    <col0>    return newline;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private boolean beforeFull(int orb) {"
  <Catalog>
    <col0>  private boolean beforeFull(int orb) {</col0>
  </Catalog>
 
"    boolean full = true;"
  <Catalog>
    <col0>    boolean full = true;</col0>
  </Catalog>
 
"    for (int j = orb - 1; j >= 0; j--) {"
  <Catalog>
    <col0>    for (int j = orb - 1; j >= 0; j--) {</col0>
  </Catalog>
 
"      if (orbit[j].endsWith(" = ")) {"
  <Catalog>
    <col0>      if (orbit[j].endsWith( = )) {</col0>
  </Catalog>
 
"        full = false;"
  <Catalog>
    <col0>        full = false;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return full;"
  <Catalog>
    <col0>    return full;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getOtherStats(String worldtype, String satworld) {"
  <Catalog>
    <col0>  private String getOtherStats(String worldtype, String satworld) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="setup">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=setup></col0>
  </Catalog>
 
"    String uwp = "X000000-0";"
  <Catalog>
    <col0>    String uwp = X000000-0;</col0>
  </Catalog>
 
"    String St = "", S = "", A = "", H = "", P = "", G = "", L = "", T = "";"
  <Catalog>
    <col0>    String St = , S = , A = , H = , P = , G = , L = , T = ;</col0>
  </Catalog>
 
"    int st = GlobalMethods.roll1d(), s = GlobalMethods.roll2d(),"
  <Catalog>
    <col0>    int st = GlobalMethods.roll1d(), s = GlobalMethods.roll2d(),</col0>
  </Catalog>
 
"      a = GlobalMethods.roll2d(), h = GlobalMethods.roll2d(),"
  <Catalog>
    <col0>      a = GlobalMethods.roll2d(), h = GlobalMethods.roll2d(),</col0>
  </Catalog>
 
"      p = GlobalMethods.roll2d(), g = GlobalMethods.roll2d(),"
  <Catalog>
    <col0>      p = GlobalMethods.roll2d(), g = GlobalMethods.roll2d(),</col0>
  </Catalog>
 
"      l = GlobalMethods.roll2d(), t = GlobalMethods.roll1d();"
  <Catalog>
    <col0>      l = GlobalMethods.roll2d(), t = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"    s -= 2;"
  <Catalog>
    <col0>    s -= 2;</col0>
  </Catalog>
 
"    a -= 7;"
  <Catalog>
    <col0>    a -= 7;</col0>
  </Catalog>
 
"    a += s;"
  <Catalog>
    <col0>    a = s;</col0>
  </Catalog>
 
"    if (s == 0) {"
  <Catalog>
    <col0>    if (s == 0) {</col0>
  </Catalog>
 
"      a = 0;"
  <Catalog>
    <col0>      a = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    h -= 7;"
  <Catalog>
    <col0>    h -= 7;</col0>
  </Catalog>
 
"    h += a;"
  <Catalog>
    <col0>    h = a;</col0>
  </Catalog>
 
"    if (h > 10) {"
  <Catalog>
    <col0>    if (h > 10) {</col0>
  </Catalog>
 
"      h = 10;"
  <Catalog>
    <col0>      h = 10;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (s < 3) {"
  <Catalog>
    <col0>    if (s < 3) {</col0>
  </Catalog>
 
"      h = 0;"
  <Catalog>
    <col0>      h = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (a < 2) {"
  <Catalog>
    <col0>    if (a < 2) {</col0>
  </Catalog>
 
"      h -= 4;"
  <Catalog>
    <col0>      h -= 4;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (a > 9) {"
  <Catalog>
    <col0>    if (a > 9) {</col0>
  </Catalog>
 
"      h -= 4;"
  <Catalog>
    <col0>      h -= 4;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    p -= 2;"
  <Catalog>
    <col0>    p -= 2;</col0>
  </Catalog>
 
"    g -= 7;"
  <Catalog>
    <col0>    g -= 7;</col0>
  </Catalog>
 
"    g += p;"
  <Catalog>
    <col0>    g = p;</col0>
  </Catalog>
 
"    if (p == 0) {"
  <Catalog>
    <col0>    if (p == 0) {</col0>
  </Catalog>
 
"      g = 0;"
  <Catalog>
    <col0>      g = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    l -= 7;"
  <Catalog>
    <col0>    l -= 7;</col0>
  </Catalog>
 
"    l += g;"
  <Catalog>
    <col0>    l = g;</col0>
  </Catalog>
 
"    if (p < 1) {"
  <Catalog>
    <col0>    if (p < 1) {</col0>
  </Catalog>
 
"      l = 0;"
  <Catalog>
    <col0>      l = 0;</col0>
  </Catalog>
 
"      t = 0;"
  <Catalog>
    <col0>      t = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int maxpop = GlobalMethods.fromHex(UWP.substring(4, 5)) - 1;"
  <Catalog>
    <col0>    int maxpop = GlobalMethods.fromHex(UWP.substring(4, 5)) - 1;</col0>
  </Catalog>
 
"    if (p > maxpop) {"
  <Catalog>
    <col0>    if (p > maxpop) {</col0>
  </Catalog>
 
"      p = maxpop;"
  <Catalog>
    <col0>      p = maxpop;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="switch (typ)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=switch (typ)></col0>
  </Catalog>
 
"    switch (satworld) {"
  <Catalog>
    <col0>    switch (satworld) {</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "world":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case world:></col0>
  </Catalog>
 
"      case "world": {"
  <Catalog>
    <col0>      case world: {</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (st)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (st)></col0>
  </Catalog>
 
"        switch (st) {"
  <Catalog>
    <col0>        switch (st) {</col0>
  </Catalog>
 
"          case 0:"
  <Catalog>
    <col0>          case 0:</col0>
  </Catalog>
 
"          case 1:"
  <Catalog>
    <col0>          case 1:</col0>
  </Catalog>
 
"          case 2: {"
  <Catalog>
    <col0>          case 2: {</col0>
  </Catalog>
 
"            St = "F";"
  <Catalog>
    <col0>            St = F;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 3: {"
  <Catalog>
    <col0>          case 3: {</col0>
  </Catalog>
 
"            St = "G";"
  <Catalog>
    <col0>            St = G;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 4:"
  <Catalog>
    <col0>          case 4:</col0>
  </Catalog>
 
"          case 5: {"
  <Catalog>
    <col0>          case 5: {</col0>
  </Catalog>
 
"            St = "H";"
  <Catalog>
    <col0>            St = H;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            St = "Y";"
  <Catalog>
    <col0>            St = Y;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        st = p - GlobalMethods.roll1d();"
  <Catalog>
    <col0>        st = p - GlobalMethods.roll1d();</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (s)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (s)></col0>
  </Catalog>
 
"        switch (s) {"
  <Catalog>
    <col0>        switch (s) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            S = GlobalMethods.toHex(s);"
  <Catalog>
    <col0>            S = GlobalMethods.toHex(s);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (a)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (a)></col0>
  </Catalog>
 
"        switch (a) {"
  <Catalog>
    <col0>        switch (a) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            A = GlobalMethods.toHex(a);"
  <Catalog>
    <col0>            A = GlobalMethods.toHex(a);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (h)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (h)></col0>
  </Catalog>
 
"        switch (h) {"
  <Catalog>
    <col0>        switch (h) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            H = GlobalMethods.toHex(h);"
  <Catalog>
    <col0>            H = GlobalMethods.toHex(h);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (p)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (p)></col0>
  </Catalog>
 
"        switch (p) {"
  <Catalog>
    <col0>        switch (p) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            P = GlobalMethods.toHex(p);"
  <Catalog>
    <col0>            P = GlobalMethods.toHex(p);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (g)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (g)></col0>
  </Catalog>
 
"        switch (g) {"
  <Catalog>
    <col0>        switch (g) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            G = GlobalMethods.toHex(g);"
  <Catalog>
    <col0>            G = GlobalMethods.toHex(g);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (l)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (l)></col0>
  </Catalog>
 
"        switch (l) {"
  <Catalog>
    <col0>        switch (l) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            L = GlobalMethods.toHex(l);"
  <Catalog>
    <col0>            L = GlobalMethods.toHex(l);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (t)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (t)></col0>
  </Catalog>
 
"        switch (t) {"
  <Catalog>
    <col0>        switch (t) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            T = GlobalMethods.toHex(t);"
  <Catalog>
    <col0>            T = GlobalMethods.toHex(t);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "sat":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case sat:></col0>
  </Catalog>
 
"      case "sat": {"
  <Catalog>
    <col0>      case sat: {</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (st)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (st)></col0>
  </Catalog>
 
"        switch (st) {"
  <Catalog>
    <col0>        switch (st) {</col0>
  </Catalog>
 
"          case 2: {"
  <Catalog>
    <col0>          case 2: {</col0>
  </Catalog>
 
"            St = "F";"
  <Catalog>
    <col0>            St = F;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 3: {"
  <Catalog>
    <col0>          case 3: {</col0>
  </Catalog>
 
"            St = "G";"
  <Catalog>
    <col0>            St = G;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 4: {"
  <Catalog>
    <col0>          case 4: {</col0>
  </Catalog>
 
"            St = "H";"
  <Catalog>
    <col0>            St = H;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 5: {"
  <Catalog>
    <col0>          case 5: {</col0>
  </Catalog>
 
"            St = "H";"
  <Catalog>
    <col0>            St = H;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            St = "Y";"
  <Catalog>
    <col0>            St = Y;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        st = p - GlobalMethods.roll1d();"
  <Catalog>
    <col0>        st = p - GlobalMethods.roll1d();</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (s)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (s)></col0>
  </Catalog>
 
"        switch (s) {"
  <Catalog>
    <col0>        switch (s) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            S = GlobalMethods.toHex(s);"
  <Catalog>
    <col0>            S = GlobalMethods.toHex(s);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (a)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (a)></col0>
  </Catalog>
 
"        switch (a) {"
  <Catalog>
    <col0>        switch (a) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            A = GlobalMethods.toHex(a);"
  <Catalog>
    <col0>            A = GlobalMethods.toHex(a);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (h)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (h)></col0>
  </Catalog>
 
"        switch (h) {"
  <Catalog>
    <col0>        switch (h) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            H = GlobalMethods.toHex(h);"
  <Catalog>
    <col0>            H = GlobalMethods.toHex(h);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (p)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (p)></col0>
  </Catalog>
 
"        switch (p) {"
  <Catalog>
    <col0>        switch (p) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            P = GlobalMethods.toHex(p);"
  <Catalog>
    <col0>            P = GlobalMethods.toHex(p);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (g)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (g)></col0>
  </Catalog>
 
"        switch (g) {"
  <Catalog>
    <col0>        switch (g) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            G = GlobalMethods.toHex(g);"
  <Catalog>
    <col0>            G = GlobalMethods.toHex(g);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (l)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (l)></col0>
  </Catalog>
 
"        switch (l) {"
  <Catalog>
    <col0>        switch (l) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            L = GlobalMethods.toHex(l);"
  <Catalog>
    <col0>            L = GlobalMethods.toHex(l);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="switch (t)">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=switch (t)></col0>
  </Catalog>
 
"        switch (t) {"
  <Catalog>
    <col0>        switch (t) {</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            T = GlobalMethods.toHex(t);"
  <Catalog>
    <col0>            T = GlobalMethods.toHex(t);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="switch (worldtype)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=switch (worldtype)></col0>
  </Catalog>
 
"    switch (worldtype) {"
  <Catalog>
    <col0>    switch (worldtype) {</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "Hospitable":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case Hospitable:></col0>
  </Catalog>
 
"      case "Hospitable": {"
  <Catalog>
    <col0>      case Hospitable: {</col0>
  </Catalog>
 
"        //StSAHPGL-T"
  <Catalog>
    <col0>        //StSAHPGL-T</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "Planetoid":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case Planetoid:></col0>
  </Catalog>
 
"      case "Planetoid": {"
  <Catalog>
    <col0>      case Planetoid: {</col0>
  </Catalog>
 
"        //St000PGL-T"
  <Catalog>
    <col0>        //St000PGL-T</col0>
  </Catalog>
 
"        s = 0;"
  <Catalog>
    <col0>        s = 0;</col0>
  </Catalog>
 
"        a = 0;"
  <Catalog>
    <col0>        a = 0;</col0>
  </Catalog>
 
"        h = 0;"
  <Catalog>
    <col0>        h = 0;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "IceWorld":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case IceWorld:></col0>
  </Catalog>
 
"      case "IceWorld": {"
  <Catalog>
    <col0>      case IceWorld: {</col0>
  </Catalog>
 
"        //StSAHPGL-T"
  <Catalog>
    <col0>        //StSAHPGL-T</col0>
  </Catalog>
 
"        //Pop=DM-6;"
  <Catalog>
    <col0>        //Pop=DM-6;</col0>
  </Catalog>
 
"        h -= 6;"
  <Catalog>
    <col0>        h -= 6;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "RadWorld":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case RadWorld:></col0>
  </Catalog>
 
"      case "RadWorld": {"
  <Catalog>
    <col0>      case RadWorld: {</col0>
  </Catalog>
 
"        //StSAH000-0"
  <Catalog>
    <col0>        //StSAH000-0</col0>
  </Catalog>
 
"        //Size=2D"
  <Catalog>
    <col0>        //Size=2D</col0>
  </Catalog>
 
"        s = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        s = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        p = 0;"
  <Catalog>
    <col0>        p = 0;</col0>
  </Catalog>
 
"        g = 0;"
  <Catalog>
    <col0>        g = 0;</col0>
  </Catalog>
 
"        l = 0;"
  <Catalog>
    <col0>        l = 0;</col0>
  </Catalog>
 
"        t = 0;"
  <Catalog>
    <col0>        t = 0;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "Inferno":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case Inferno:></col0>
  </Catalog>
 
"      case "Inferno": {"
  <Catalog>
    <col0>      case Inferno: {</col0>
  </Catalog>
 
"        //YSB0000-0"
  <Catalog>
    <col0>        //YSB0000-0</col0>
  </Catalog>
 
"        //Size=2D"
  <Catalog>
    <col0>        //Size=2D</col0>
  </Catalog>
 
"        s = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        s = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        a = 11;"
  <Catalog>
    <col0>        a = 11;</col0>
  </Catalog>
 
"        h = 0;"
  <Catalog>
    <col0>        h = 0;</col0>
  </Catalog>
 
"        p = 0;"
  <Catalog>
    <col0>        p = 0;</col0>
  </Catalog>
 
"        g = 0;"
  <Catalog>
    <col0>        g = 0;</col0>
  </Catalog>
 
"        l = 0;"
  <Catalog>
    <col0>        l = 0;</col0>
  </Catalog>
 
"        t = 0;"
  <Catalog>
    <col0>        t = 0;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "BigWorld":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case BigWorld:></col0>
  </Catalog>
 
"      case "BigWorld": {"
  <Catalog>
    <col0>      case BigWorld: {</col0>
  </Catalog>
 
"        //StSAHPGL-T"
  <Catalog>
    <col0>        //StSAHPGL-T</col0>
  </Catalog>
 
"        //Size=2D+7"
  <Catalog>
    <col0>        //Size=2D7</col0>
  </Catalog>
 
"        s = GlobalMethods.getRoll(2) + 7;"
  <Catalog>
    <col0>        s = GlobalMethods.getRoll(2)  7;</col0>
  </Catalog>
 
"        //Any siz=B+ = BigWorld"
  <Catalog>
    <col0>        //Any siz=B = BigWorld</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "Worldlet":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case Worldlet:></col0>
  </Catalog>
 
"      case "Worldlet": {"
  <Catalog>
    <col0>      case Worldlet: {</col0>
  </Catalog>
 
"        //StSAHPGL-T"
  <Catalog>
    <col0>        //StSAHPGL-T</col0>
  </Catalog>
 
"        //Size=1D-3"
  <Catalog>
    <col0>        //Size=1D-3</col0>
  </Catalog>
 
"        s = GlobalMethods.getRoll(1) - 3;"
  <Catalog>
    <col0>        s = GlobalMethods.getRoll(1) - 3;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "InnerWorld":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case InnerWorld:></col0>
  </Catalog>
 
"      case "InnerWorld": {"
  <Catalog>
    <col0>      case InnerWorld: {</col0>
  </Catalog>
 
"        //StSAHPGL-T"
  <Catalog>
    <col0>        //StSAHPGL-T</col0>
  </Catalog>
 
"        //Pop=DM-4;"
  <Catalog>
    <col0>        //Pop=DM-4;</col0>
  </Catalog>
 
"        p -= 4;"
  <Catalog>
    <col0>        p -= 4;</col0>
  </Catalog>
 
"        //Hyd=DM-4;"
  <Catalog>
    <col0>        //Hyd=DM-4;</col0>
  </Catalog>
 
"        h -= 4;"
  <Catalog>
    <col0>        h -= 4;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="case "StormWorld":">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=case StormWorld:></col0>
  </Catalog>
 
"      case "StormWorld": {"
  <Catalog>
    <col0>      case StormWorld: {</col0>
  </Catalog>
 
"        //StSAHPGL-T"
  <Catalog>
    <col0>        //StSAHPGL-T</col0>
  </Catalog>
 
"        //Size=2D"
  <Catalog>
    <col0>        //Size=2D</col0>
  </Catalog>
 
"        s = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        s = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        //Atm=DM-4;"
  <Catalog>
    <col0>        //Atm=DM-4;</col0>
  </Catalog>
 
"        a -= 4;"
  <Catalog>
    <col0>        a -= 4;</col0>
  </Catalog>
 
"        //Hyd=DM-4;"
  <Catalog>
    <col0>        //Hyd=DM-4;</col0>
  </Catalog>
 
"        h -= 4;"
  <Catalog>
    <col0>        h -= 4;</col0>
  </Catalog>
 
"        //Pop=DM-4;"
  <Catalog>
    <col0>        //Pop=DM-4;</col0>
  </Catalog>
 
"        p -= 4;"
  <Catalog>
    <col0>        p -= 4;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="mod numbers">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=mod numbers></col0>
  </Catalog>
 
"    if (p <= 0) {"
  <Catalog>
    <col0>    if (p <= 0) {</col0>
  </Catalog>
 
"      g = 0;"
  <Catalog>
    <col0>      g = 0;</col0>
  </Catalog>
 
"      l = 0;"
  <Catalog>
    <col0>      l = 0;</col0>
  </Catalog>
 
"      t = 0;"
  <Catalog>
    <col0>      t = 0;</col0>
  </Catalog>
 
"      st = 0;"
  <Catalog>
    <col0>      st = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (p > maxpop) {"
  <Catalog>
    <col0>    if (p > maxpop) {</col0>
  </Catalog>
 
"      p = maxpop;"
  <Catalog>
    <col0>      p = maxpop;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (st < 0) {"
  <Catalog>
    <col0>    if (st < 0) {</col0>
  </Catalog>
 
"      st = 0;"
  <Catalog>
    <col0>      st = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (s < 0) {"
  <Catalog>
    <col0>    if (s < 0) {</col0>
  </Catalog>
 
"      s = 0;"
  <Catalog>
    <col0>      s = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (a < 0) {"
  <Catalog>
    <col0>    if (a < 0) {</col0>
  </Catalog>
 
"      a = 0;"
  <Catalog>
    <col0>      a = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (h < 0) {"
  <Catalog>
    <col0>    if (h < 0) {</col0>
  </Catalog>
 
"      h = 0;"
  <Catalog>
    <col0>      h = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (p < 0) {"
  <Catalog>
    <col0>    if (p < 0) {</col0>
  </Catalog>
 
"      p = 0;"
  <Catalog>
    <col0>      p = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (g < 0) {"
  <Catalog>
    <col0>    if (g < 0) {</col0>
  </Catalog>
 
"      g = 0;"
  <Catalog>
    <col0>      g = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (l < 0) {"
  <Catalog>
    <col0>    if (l < 0) {</col0>
  </Catalog>
 
"      l = 0;"
  <Catalog>
    <col0>      l = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (t < 0) {"
  <Catalog>
    <col0>    if (t < 0) {</col0>
  </Catalog>
 
"      t = 0;"
  <Catalog>
    <col0>      t = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (p == 0) {"
  <Catalog>
    <col0>    if (p == 0) {</col0>
  </Catalog>
 
"      St = "Y";"
  <Catalog>
    <col0>      St = Y;</col0>
  </Catalog>
 
"      g = 0;"
  <Catalog>
    <col0>      g = 0;</col0>
  </Catalog>
 
"      l = 0;"
  <Catalog>
    <col0>      l = 0;</col0>
  </Catalog>
 
"      t = 0;"
  <Catalog>
    <col0>      t = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getSp() == "A") {"
  <Catalog>
    <col0>    if (getSp() == A) {</col0>
  </Catalog>
 
"      t += 6;"
  <Catalog>
    <col0>      t = 6;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getSp() == "B") {"
  <Catalog>
    <col0>    if (getSp() == B) {</col0>
  </Catalog>
 
"      t += 4;"
  <Catalog>
    <col0>      t = 4;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getSp() == "C") {"
  <Catalog>
    <col0>    if (getSp() == C) {</col0>
  </Catalog>
 
"      t += 2;"
  <Catalog>
    <col0>      t = 2;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getSp() == "X") {"
  <Catalog>
    <col0>    if (getSp() == X) {</col0>
  </Catalog>
 
"      t += -4;"
  <Catalog>
    <col0>      t = -4;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getSp() == "F") {//Spaceport NOT StarPort"
  <Catalog>
    <col0>    if (getSp() == F) {//Spaceport NOT StarPort</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getsize() == "0" | getsize() == "1") {"
  <Catalog>
    <col0>    if (getsize() == 0 | getsize() == 1) {</col0>
  </Catalog>
 
"      t += 2;"
  <Catalog>
    <col0>      t = 2;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getsize() == "2" | getsize() == "3" | getsize() == "4") {"
  <Catalog>
    <col0>    if (getsize() == 2 | getsize() == 3 | getsize() == 4) {</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getatmo() == "0" | getatmo() == "1" | getatmo() == "2" | getatmo() == "3") {"
  <Catalog>
    <col0>    if (getatmo() == 0 | getatmo() == 1 | getatmo() == 2 | getatmo() == 3) {</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getatmo() == "A" | getatmo() == "B" | getatmo() == "C" | getatmo() == "D" | getatmo() == "E" | getatmo() == "F") {"
  <Catalog>
    <col0>    if (getatmo() == A | getatmo() == B | getatmo() == C | getatmo() == D | getatmo() == E | getatmo() == F) {</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (gethydro() == "9") {"
  <Catalog>
    <col0>    if (gethydro() == 9) {</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (gethydro() == "A") {"
  <Catalog>
    <col0>    if (gethydro() == A) {</col0>
  </Catalog>
 
"      t += 2;"
  <Catalog>
    <col0>      t = 2;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getpop() == "1" | getpop() == "2" | getpop() == "3" | getpop() == "4" | getpop() == "5") {"
  <Catalog>
    <col0>    if (getpop() == 1 | getpop() == 2 | getpop() == 3 | getpop() == 4 | getpop() == 5) {</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getgov() == "0" | getgov() == "5") {"
  <Catalog>
    <col0>    if (getgov() == 0 | getgov() == 5) {</col0>
  </Catalog>
 
"      t += 1;"
  <Catalog>
    <col0>      t = 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (getgov() == "D") {"
  <Catalog>
    <col0>    if (getgov() == D) {</col0>
  </Catalog>
 
"      t += -2;"
  <Catalog>
    <col0>      t = -2;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    t += GlobalMethods.getRoll(1);"
  <Catalog>
    <col0>    t = GlobalMethods.getRoll(1);</col0>
  </Catalog>
 
"    if (p == 0) {"
  <Catalog>
    <col0>    if (p == 0) {</col0>
  </Catalog>
 
"      t = 0;"
  <Catalog>
    <col0>      t = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (t > GlobalMethods.fromHex(gettl()) - 1) {"
  <Catalog>
    <col0>    if (t > GlobalMethods.fromHex(gettl()) - 1) {</col0>
  </Catalog>
 
"      t = GlobalMethods.fromHex(gettl()) - 1;"
  <Catalog>
    <col0>      t = GlobalMethods.fromHex(gettl()) - 1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (s < 0) {"
  <Catalog>
    <col0>    if (s < 0) {</col0>
  </Catalog>
 
"      s = 0;"
  <Catalog>
    <col0>      s = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    int[] parts = {st, s, a, h, p, g, l, t};"
  <Catalog>
    <col0>    int[] parts = {st, s, a, h, p, g, l, t};</col0>
  </Catalog>
 
"    //modSize"
  <Catalog>
    <col0>    //modSize</col0>
  </Catalog>
 
"    if (orbit[habz].contains("GG")) {"
  <Catalog>
    <col0>    if (orbit[habz].contains(GG)) {</col0>
  </Catalog>
 
"      int start = orbit[habz].indexOf("S=") + 2;"
  <Catalog>
    <col0>      int start = orbit[habz].indexOf(S=)  2;</col0>
  </Catalog>
 
"      int end = orbit[habz].substring(start).indexOf("@");"
  <Catalog>
    <col0>      int end = orbit[habz].substring(start).indexOf(@);</col0>
  </Catalog>
 
"      if (s > ws - 3) {"
  <Catalog>
    <col0>      if (s > ws - 3) {</col0>
  </Catalog>
 
"        s = ws - 3;"
  <Catalog>
    <col0>        s = ws - 3;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else if (s > GlobalMethods.fromHex(getsize()) - 3) {"
  <Catalog>
    <col0>    } else if (s > GlobalMethods.fromHex(getsize()) - 3) {</col0>
  </Catalog>
 
"      s = GlobalMethods.fromHex(getsize()) - 3;"
  <Catalog>
    <col0>      s = GlobalMethods.fromHex(getsize()) - 3;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //modTech();"
  <Catalog>
    <col0>    //modTech();</col0>
  </Catalog>
 
"    uwp = St;"
  <Catalog>
    <col0>    uwp = St;</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(s);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(s);</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(a);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(a);</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(h);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(h);</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(p);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(p);</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(g);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(g);</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(l);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(l);</col0>
  </Catalog>
 
"    uwp += "-";"
  <Catalog>
    <col0>    uwp = -;</col0>
  </Catalog>
 
"    uwp += GlobalMethods.toHex(t);"
  <Catalog>
    <col0>    uwp = GlobalMethods.toHex(t);</col0>
  </Catalog>
 
"    return "\t" + uwp;"
  <Catalog>
    <col0>    return \t  uwp;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getOtherWorld(int orb) {"
  <Catalog>
    <col0>  private String getOtherWorld(int orb) {</col0>
  </Catalog>
 
"    String world = "";"
  <Catalog>
    <col0>    String world = ;</col0>
  </Catalog>
 
"    hz = Integer.parseInt(GlobalMethods.getHZ(Stars[0]));"
  <Catalog>
    <col0>    hz = Integer.parseInt(GlobalMethods.getHZ(Stars[0]));</col0>
  </Catalog>
 
"    int x = GlobalMethods.getRoll(1) - 1;"
  <Catalog>
    <col0>    int x = GlobalMethods.getRoll(1) - 1;</col0>
  </Catalog>
 
"    if (orb < hz - 1) {//Inner"
  <Catalog>
    <col0>    if (orb < hz - 1) {//Inner</col0>
  </Catalog>
 
"      return InnerWorlds[x];"
  <Catalog>
    <col0>      return InnerWorlds[x];</col0>
  </Catalog>
 
"    } else if (orb > hz + 1) {"
  <Catalog>
    <col0>    } else if (orb > hz  1) {</col0>
  </Catalog>
 
"      return OuterWorlds[x];"
  <Catalog>
    <col0>      return OuterWorlds[x];</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      return HospitableWorlds[x];"
  <Catalog>
    <col0>      return HospitableWorlds[x];</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static int getD10Limit(String string) {"
  <Catalog>
    <col0>  private static int getD10Limit(String string) {</col0>
  </Catalog>
 
"    setStarData(string);"
  <Catalog>
    <col0>    setStarData(string);</col0>
  </Catalog>
 
"    int ret = Integer.parseInt(GlobalMethods.getStringFromTable("TD", t + d, s,"
  <Catalog>
    <col0>    int ret = Integer.parseInt(GlobalMethods.getStringFromTable(TD, t  d, s,</col0>
  </Catalog>
 
"      D10Limit));"
  <Catalog>
    <col0>      D10Limit));</col0>
  </Catalog>
 
"    return ret;"
  <Catalog>
    <col0>    return ret;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static int getD100Limit(String string) {"
  <Catalog>
    <col0>  private static int getD100Limit(String string) {</col0>
  </Catalog>
 
"    setStarData(string);"
  <Catalog>
    <col0>    setStarData(string);</col0>
  </Catalog>
 
"    int ret = Integer.parseInt(GlobalMethods.getStringFromTable("TD", t + d, s,"
  <Catalog>
    <col0>    int ret = Integer.parseInt(GlobalMethods.getStringFromTable(TD, t  d, s,</col0>
  </Catalog>
 
"      D100Limit));"
  <Catalog>
    <col0>      D100Limit));</col0>
  </Catalog>
 
"    return ret;"
  <Catalog>
    <col0>    return ret;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static int getD1000Limit(String string) {"
  <Catalog>
    <col0>  private static int getD1000Limit(String string) {</col0>
  </Catalog>
 
"    setStarData(string);"
  <Catalog>
    <col0>    setStarData(string);</col0>
  </Catalog>
 
"    int ret = Integer.parseInt(GlobalMethods.getStringFromTable("TD", t + d, s,"
  <Catalog>
    <col0>    int ret = Integer.parseInt(GlobalMethods.getStringFromTable(TD, t  d, s,</col0>
  </Catalog>
 
"      D1000Limit));"
  <Catalog>
    <col0>      D1000Limit));</col0>
  </Catalog>
 
"    return ret;"
  <Catalog>
    <col0>    return ret;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getSDBTactics() {"
  <Catalog>
    <col0>  private String getSDBTactics() {</col0>
  </Catalog>
 
"    //DEFENCE"
  <Catalog>
    <col0>    //DEFENCE</col0>
  </Catalog>
 
"    string = "\tDEFENCE" + CRLF;"
  <Catalog>
    <col0>    string = \tDEFENCE  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Hide in Water" + CRLF;"
  <Catalog>
    <col0>    string = \t  Hide in Water  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Defend vs Invaders" + CRLF;"
  <Catalog>
    <col0>    string = \t  Defend vs Invaders  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Defend Homeworld" + CRLF;"
  <Catalog>
    <col0>    string = \t  Defend Homeworld  CRLF;</col0>
  </Catalog>
 
"    //if water"
  <Catalog>
    <col0>    //if water</col0>
  </Catalog>
 
"    if (GlobalMethods.fromHex(getHydro()) > 2) {"
  <Catalog>
    <col0>    if (GlobalMethods.fromHex(getHydro()) > 2) {</col0>
  </Catalog>
 
"      string += "\t  Hide in Ocean" + CRLF;"
  <Catalog>
    <col0>      string = \t  Hide in Ocean  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //if gg"
  <Catalog>
    <col0>    //if gg</col0>
  </Catalog>
 
"    if (g > 0) {"
  <Catalog>
    <col0>    if (g > 0) {</col0>
  </Catalog>
 
"      string += "\t  Defend " + g + " Gas Giants" + CRLF;"
  <Catalog>
    <col0>      string = \t  Defend   g   Gas Giants  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //if pop"
  <Catalog>
    <col0>    //if pop</col0>
  </Catalog>
 
"    if (GlobalMethods.fromHex(getPop()) > 0) {"
  <Catalog>
    <col0>    if (GlobalMethods.fromHex(getPop()) > 0) {</col0>
  </Catalog>
 
"      string += "\t  Defend Population" + CRLF;"
  <Catalog>
    <col0>      string = \t  Defend Population  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //if base"
  <Catalog>
    <col0>    //if base</col0>
  </Catalog>
 
"    if (!data[8].contains("-")) {"
  <Catalog>
    <col0>    if (!data[8].contains(-)) {</col0>
  </Catalog>
 
"      string += "\t  Defend Bases" + CRLF;"
  <Catalog>
    <col0>      string = \t  Defend Bases  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return string;"
  <Catalog>
    <col0>    return string;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getSquadronTactics() {"
  <Catalog>
    <col0>  private String getSquadronTactics() {</col0>
  </Catalog>
 
"    //ATTACK"
  <Catalog>
    <col0>    //ATTACK</col0>
  </Catalog>
 
"    string = "\tATTACK" + CRLF;"
  <Catalog>
    <col0>    string = \tATTACK  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Attack vs Defenders" + CRLF;"
  <Catalog>
    <col0>    string = \t  Attack vs Defenders  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Attack Homeworld" + CRLF;"
  <Catalog>
    <col0>    string = \t  Attack Homeworld  CRLF;</col0>
  </Catalog>
 
"    //if water"
  <Catalog>
    <col0>    //if water</col0>
  </Catalog>
 
"    if (GlobalMethods.fromHex(getHydro()) > 2) {"
  <Catalog>
    <col0>    if (GlobalMethods.fromHex(getHydro()) > 2) {</col0>
  </Catalog>
 
"      string += "\t  Attack Ocean" + CRLF;"
  <Catalog>
    <col0>      string = \t  Attack Ocean  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //if gg"
  <Catalog>
    <col0>    //if gg</col0>
  </Catalog>
 
"    if (g > 0) {"
  <Catalog>
    <col0>    if (g > 0) {</col0>
  </Catalog>
 
"      string += "\t  Attack " + g + " Gas Giants" + CRLF;"
  <Catalog>
    <col0>      string = \t  Attack   g   Gas Giants  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //if pop"
  <Catalog>
    <col0>    //if pop</col0>
  </Catalog>
 
"    if (GlobalMethods.fromHex(getPop()) > 0) {"
  <Catalog>
    <col0>    if (GlobalMethods.fromHex(getPop()) > 0) {</col0>
  </Catalog>
 
"      string += "\t  Attack Population" + CRLF;"
  <Catalog>
    <col0>      string = \t  Attack Population  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //if base"
  <Catalog>
    <col0>    //if base</col0>
  </Catalog>
 
"    if (!data[8].contains("-")) {"
  <Catalog>
    <col0>    if (!data[8].contains(-)) {</col0>
  </Catalog>
 
"      string += "\t  Attack Bases" + CRLF;"
  <Catalog>
    <col0>      string = \t  Attack Bases  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return string;"
  <Catalog>
    <col0>    return string;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getDefTactics() {"
  <Catalog>
    <col0>  private String getDefTactics() {</col0>
  </Catalog>
 
"    //DEFENCE"
  <Catalog>
    <col0>    //DEFENCE</col0>
  </Catalog>
 
"    string = "\tDEFENCE" + CRLF;"
  <Catalog>
    <col0>    string = \tDEFENCE  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Defend Starport" + CRLF;"
  <Catalog>
    <col0>    string = \t  Defend Starport  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Defend vs Invaders" + CRLF;"
  <Catalog>
    <col0>    string = \t  Defend vs Invaders  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Go Hidden" + CRLF;"
  <Catalog>
    <col0>    string = \t  Go Hidden  CRLF;</col0>
  </Catalog>
 
"    return string;"
  <Catalog>
    <col0>    return string;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getTroopTactics() {"
  <Catalog>
    <col0>  private String getTroopTactics() {</col0>
  </Catalog>
 
"    //ATTACK"
  <Catalog>
    <col0>    //ATTACK</col0>
  </Catalog>
 
"    string = "\tATTACK" + CRLF;"
  <Catalog>
    <col0>    string = \tATTACK  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Attack Starport" + CRLF;"
  <Catalog>
    <col0>    string = \t  Attack Starport  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Attack vs Invaders" + CRLF;"
  <Catalog>
    <col0>    string = \t  Attack vs Invaders  CRLF;</col0>
  </Catalog>
 
"    string += "\t  Attack Hidden" + CRLF;"
  <Catalog>
    <col0>    string = \t  Attack Hidden  CRLF;</col0>
  </Catalog>
 
"    return string;"
  <Catalog>
    <col0>    return string;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getFuelTactics() {"
  <Catalog>
    <col0>  private String getFuelTactics() {</col0>
  </Catalog>
 
"    //Ocean"
  <Catalog>
    <col0>    //Ocean</col0>
  </Catalog>
 
"    string = "\tREFUELLING" + CRLF;"
  <Catalog>
    <col0>    string = \tREFUELLING  CRLF;</col0>
  </Catalog>
 
"    if (GlobalMethods.fromHex(getHydro()) > 0) {"
  <Catalog>
    <col0>    if (GlobalMethods.fromHex(getHydro()) > 0) {</col0>
  </Catalog>
 
"      string += "\t  Refuel in Ocean";"
  <Catalog>
    <col0>      string = \t  Refuel in Ocean;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //Ice"
  <Catalog>
    <col0>    //Ice</col0>
  </Catalog>
 
"    //GG"
  <Catalog>
    <col0>    //GG</col0>
  </Catalog>
 
"    if (g > 0) {"
  <Catalog>
    <col0>    if (g > 0) {</col0>
  </Catalog>
 
"      string += "\t  Refuel at Gas Giant" + CRLF;"
  <Catalog>
    <col0>      string = \t  Refuel at Gas Giant  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (string.length() == 14) {"
  <Catalog>
    <col0>    if (string.length() == 14) {</col0>
  </Catalog>
 
"      return "";"
  <Catalog>
    <col0>      return ;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return string;"
  <Catalog>
    <col0>    return string;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void downloadOptions() {"
  <Catalog>
    <col0>  private void downloadOptions() {</col0>
  </Catalog>
 
"    int ret;"
  <Catalog>
    <col0>    int ret;</col0>
  </Catalog>
 
"    ret = JOptionPane.showOptionDialog(jp, "One,All,Cancel", "DOWNLOAD","
  <Catalog>
    <col0>    ret = JOptionPane.showOptionDialog(jp, One,All,Cancel, DOWNLOAD</col0>
  </Catalog>
 
"      JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null,"
  <Catalog>
    <col0>      JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null,</col0>
  </Catalog>
 
"      1);"
  <Catalog>
    <col0>      1);</col0>
  </Catalog>
 
"    JOptionPane.showMessageDialog(jf, "" + ret);"
  <Catalog>
    <col0>    JOptionPane.showMessageDialog(jf,   ret);</col0>
  </Catalog>
 
"    if (ret == 0) {"
  <Catalog>
    <col0>    if (ret == 0) {</col0>
  </Catalog>
 
"      downloadSector();"
  <Catalog>
    <col0>      downloadSector();</col0>
  </Catalog>
 
"      restart();"
  <Catalog>
    <col0>      restart();</col0>
  </Catalog>
 
"    } else if (ret == 1) {"
  <Catalog>
    <col0>    } else if (ret == 1) {</col0>
  </Catalog>
 
"//      JOptionPane.showMessageDialog(jp, "Warning: THIS TAKES AGES, IT WILL TELL YOU WHEN DONE");"
  <Catalog>
    <col0>//      JOptionPane.showMessageDialog(jp, Warning: THIS TAKES AGES, IT WILL TELL YOU WHEN DONE);</col0>
  </Catalog>
 
"      ret = JOptionPane.showOptionDialog(jp,"
  <Catalog>
    <col0>      ret = JOptionPane.showOptionDialog(jp,</col0>
  </Catalog>
 
"        "Warning: THIS TAKES AGES, IT WILL TELL YOU WHEN DONE", "DOWNLOAD","
  <Catalog>
    <col0>        Warning: THIS TAKES AGES, IT WILL TELL YOU WHEN DONE, DOWNLOAD</col0>
  </Catalog>
 
"        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,"
  <Catalog>
    <col0>        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,</col0>
  </Catalog>
 
"        new Object[]{"OK", "Cancel"}, 1);"
  <Catalog>
    <col0>        new Object[]{OK, Cancel}, 1);</col0>
  </Catalog>
 
"      if (ret == 0) {"
  <Catalog>
    <col0>      if (ret == 0) {</col0>
  </Catalog>
 
"        downloadSectors();"
  <Catalog>
    <col0>        downloadSectors();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else if (ret == 2) {"
  <Catalog>
    <col0>    } else if (ret == 2) {</col0>
  </Catalog>
 
"      return;"
  <Catalog>
    <col0>      return;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void downloadSectors() {"
  <Catalog>
    <col0>  private void downloadSectors() {</col0>
  </Catalog>
 
"    String[] sectors = jta4Sectors.getText().split("\n");"
  <Catalog>
    <col0>    String[] sectors = jta4Sectors.getText().split(\n);</col0>
  </Catalog>
 
"    for (int i = 0; i < sectors.length; i++) {"
  <Catalog>
    <col0>    for (int i = 0; i < sectors.length; i) {</col0>
  </Catalog>
 
"      fname = sectors[i].replace(" ", "%20");"
  <Catalog>
    <col0>      fname = sectors[i].replace( , %20);</col0>
  </Catalog>
 
"      webpath = dat + "/" + fname;"
  <Catalog>
    <col0>      webpath = dat  /  fname;</col0>
  </Catalog>
 
"      downloadSector();"
  <Catalog>
    <col0>      downloadSector();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    restart();"
  <Catalog>
    <col0>    restart();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void downloadSector() {"
  <Catalog>
    <col0>  private void downloadSector() {</col0>
  </Catalog>
 
"    readWeb(webpath);"
  <Catalog>
    <col0>    readWeb(webpath);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String fix(String wp) {"
  <Catalog>
    <col0>  private String fix(String wp) {</col0>
  </Catalog>
 
"    String search = " ";"
  <Catalog>
    <col0>    String search =  ;</col0>
  </Catalog>
 
"    String rep = "%20";"
  <Catalog>
    <col0>    String rep = %20;</col0>
  </Catalog>
 
"    webpath = (webpath.replace(search, rep).replace("\\", "/"));"
  <Catalog>
    <col0>    webpath = (webpath.replace(search, rep).replace(\\, /));</col0>
  </Catalog>
 
"    return webpath;"
  <Catalog>
    <col0>    return webpath;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void restart() {"
  <Catalog>
    <col0>  private void restart() {</col0>
  </Catalog>
 
"    JOptionPane.showMessageDialog(jf, "Closing, restart program");"
  <Catalog>
    <col0>    JOptionPane.showMessageDialog(jf, Closing, restart program);</col0>
  </Catalog>
 
"    Panel4T5BitSet.main(args);"
  <Catalog>
    <col0>    Panel4T5BitSet.main(args);</col0>
  </Catalog>
 
"    System.exit(0);"
  <Catalog>
    <col0>    System.exit(0);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void help() {"
  <Catalog>
    <col0>  private void help() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    System.out.print(getHex());"
  <Catalog>
    <col0>    System.out.print(getHex());</col0>
  </Catalog>
 
"    System.out.print(getSystemName());"
  <Catalog>
    <col0>    System.out.print(getSystemName());</col0>
  </Catalog>
 
"    System.out.print(getUWP());"
  <Catalog>
    <col0>    System.out.print(getUWP());</col0>
  </Catalog>
 
"    System.out.print(getSP());"
  <Catalog>
    <col0>    System.out.print(getSP());</col0>
  </Catalog>
 
"    System.out.print(getRemarks());"
  <Catalog>
    <col0>    System.out.print(getRemarks());</col0>
  </Catalog>
 
"    System.out.print(getIx());"
  <Catalog>
    <col0>    System.out.print(getIx());</col0>
  </Catalog>
 
"    System.out.print(getEx());"
  <Catalog>
    <col0>    System.out.print(getEx());</col0>
  </Catalog>
 
"    System.out.print(getCx());"
  <Catalog>
    <col0>    System.out.print(getCx());</col0>
  </Catalog>
 
"    System.out.print(getN());"
  <Catalog>
    <col0>    System.out.print(getN());</col0>
  </Catalog>
 
"    System.out.print(getB());"
  <Catalog>
    <col0>    System.out.print(getB());</col0>
  </Catalog>
 
"    System.out.print(getZ());"
  <Catalog>
    <col0>    System.out.print(getZ());</col0>
  </Catalog>
 
"    System.out.print(getPBG());"
  <Catalog>
    <col0>    System.out.print(getPBG());</col0>
  </Catalog>
 
"    System.out.print(getW());"
  <Catalog>
    <col0>    System.out.print(getW());</col0>
  </Catalog>
 
"    System.out.print(getA());"
  <Catalog>
    <col0>    System.out.print(getA());</col0>
  </Catalog>
 
"    System.out.print(getStellar());"
  <Catalog>
    <col0>    System.out.print(getStellar());</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void reduceInners(int orb) {"
  <Catalog>
    <col0>  private void reduceInners(int orb) {</col0>
  </Catalog>
 
"    for (int j = orb - 1; j > orb / 2; j--) {"
  <Catalog>
    <col0>    for (int j = orb - 1; j > orb / 2; j--) {</col0>
  </Catalog>
 
"      if (orb - j >= 0) {"
  <Catalog>
    <col0>      if (orb - j >= 0) {</col0>
  </Catalog>
 
"        orbit[j] += "UNAVAILABLE";"
  <Catalog>
    <col0>        orbit[j] = UNAVAILABLE;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getOrbitLet() {"
  <Catalog>
    <col0>  private String getOrbitLet() {</col0>
  </Catalog>
 
"    return "?";"
  <Catalog>
    <col0>    return ?;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String findSystemName(String hex) {"
  <Catalog>
    <col0>  private String findSystemName(String hex) {</col0>
  </Catalog>
 
"    String name = "";"
  <Catalog>
    <col0>    String name = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].startsWith(hex)) {"
  <Catalog>
    <col0>      if (lines[j].startsWith(hex)) {</col0>
  </Catalog>
 
"        name = lines[j].substring(len[0], len[1]).trim();"
  <Catalog>
    <col0>        name = lines[j].substring(len[0], len[1]).trim();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return name;"
  <Catalog>
    <col0>    return name;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String toEHex(int num) {"
  <Catalog>
    <col0>  private String toEHex(int num) {</col0>
  </Catalog>
 
"    String ret = "0";"
  <Catalog>
    <col0>    String ret = 0;</col0>
  </Catalog>
 
"    ret = GlobalMethods.getStringFromTable("Decimal", "" + num, "eHex", EHex);"
  <Catalog>
    <col0>    ret = GlobalMethods.getStringFromTable(Decimal,   num, eHex, EHex);</col0>
  </Catalog>
 
"    return ret;"
  <Catalog>
    <col0>    return ret;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveSecPic() {"
  <Catalog>
    <col0>  private void saveSecPic() {</col0>
  </Catalog>
 
"    File f = new File(Panel4T5Locator.getSecPath() + FS + jcb4Sec"
  <Catalog>
    <col0>    File f = new File(Panel4T5Locator.getSecPath()  FS  jcb4Sec</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + " Sector.gif");"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()   Sector.gif);</col0>
  </Catalog>
 
"    String imagepath = _SEC + FS + "GIF" + FS + jcb4Sec.getSelectedItem()"
  <Catalog>
    <col0>    String imagepath = _SEC  FS  GIF  FS  jcb4Sec.getSelectedItem()</col0>
  </Catalog>
 
"      .toString().trim() + ".gif";"
  <Catalog>
    <col0>      .toString().trim()  .gif;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      BufferedImage bi = ImageIO.read(new File(imagepath));"
  <Catalog>
    <col0>      BufferedImage bi = ImageIO.read(new File(imagepath));</col0>
  </Catalog>
 
"      Graphics2D g2d = (Graphics2D) bi.getGraphics();"
  <Catalog>
    <col0>      Graphics2D g2d = (Graphics2D) bi.getGraphics();</col0>
  </Catalog>
 
"      g2d.setPaint(Color.black);"
  <Catalog>
    <col0>      g2d.setPaint(Color.black);</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex) {"
  <Catalog>
    <col0>    } catch (IOException ex) {</col0>
  </Catalog>
 
"      System.out.println("6327" + " = " + ex);"
  <Catalog>
    <col0>      System.out.println(6327   =   ex);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    f = new File(Panel4T5Locator.getSysPath() + FS + jcb4Sys"
  <Catalog>
    <col0>    f = new File(Panel4T5Locator.getSysPath()  FS  jcb4Sys</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + FS + jcb4Sec"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()  FS  jcb4Sec</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + " Sector.gif");"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()   Sector.gif);</col0>
  </Catalog>
 
"    imagepath = _SEC + FS + "GIF" + FS + jcb4Sec.getSelectedItem()"
  <Catalog>
    <col0>    imagepath = _SEC  FS  GIF  FS  jcb4Sec.getSelectedItem()</col0>
  </Catalog>
 
"      .toString() + ".gif";"
  <Catalog>
    <col0>      .toString()  .gif;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      BufferedImage bi = ImageIO.read(new File(imagepath));"
  <Catalog>
    <col0>      BufferedImage bi = ImageIO.read(new File(imagepath));</col0>
  </Catalog>
 
"      Graphics2D g2d = (Graphics2D) bi.getGraphics();"
  <Catalog>
    <col0>      Graphics2D g2d = (Graphics2D) bi.getGraphics();</col0>
  </Catalog>
 
"      g2d.setPaint(Color.black);"
  <Catalog>
    <col0>      g2d.setPaint(Color.black);</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex) {"
  <Catalog>
    <col0>    } catch (IOException ex) {</col0>
  </Catalog>
 
"      System.out.println("6146" + " = " + ex);"
  <Catalog>
    <col0>      System.out.println(6146   =   ex);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getSecPath() {"
  <Catalog>
    <col0>  private static String getSecPath() {</col0>
  </Catalog>
 
"    String str = T5 + FS + jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>    String str = T5  FS  jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"    return str;"
  <Catalog>
    <col0>    return str;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveSubPic() {"
  <Catalog>
    <col0>  private void saveSubPic() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    File f = new File(Panel4T5Locator.getSysPath().trim() + FS"
  <Catalog>
    <col0>    File f = new File(Panel4T5Locator.getSysPath().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().trim() + FS"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().trim()  FS</col0>
  </Catalog>
 
"      + jcb4Sys.getSelectedItem().toString().substring(0, 4) + "-Subsector.gif");"
  <Catalog>
    <col0>       jcb4Sys.getSelectedItem().toString().substring(0, 4)  -Subsector.gif);</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      System.out.print("f" + " = " + f.toString() + CRLF);"
  <Catalog>
    <col0>      System.out.print(f   =   f.toString()  CRLF);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    BufferedImage bi = new BufferedImage(panel4Sys.getWidth(), panel4Sys"
  <Catalog>
    <col0>    BufferedImage bi = new BufferedImage(panel4Sys.getWidth(), panel4Sys</col0>
  </Catalog>
 
"      .getHeight(), TYPE_INT_RGB);"
  <Catalog>
    <col0>      .getHeight(), TYPE_INT_RGB);</col0>
  </Catalog>
 
"    Graphics g = panel4Sys.getGraphics();"
  <Catalog>
    <col0>    Graphics g = panel4Sys.getGraphics();</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    Robot r = null;"
  <Catalog>
    <col0>    Robot r = null;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      r = new Robot();"
  <Catalog>
    <col0>      r = new Robot();</col0>
  </Catalog>
 
"    } catch (AWTException ex) {"
  <Catalog>
    <col0>    } catch (AWTException ex) {</col0>
  </Catalog>
 
"      System.out.println("6476" + " = " + ex);"
  <Catalog>
    <col0>      System.out.println(6476   =   ex);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    bi = r.createScreenCapture(new Rectangle("
  <Catalog>
    <col0>    bi = r.createScreenCapture(new Rectangle(</col0>
  </Catalog>
 
"      panel4Sys.getLocationOnScreen().x, panel4Sys.getLocationOnScreen().y,"
  <Catalog>
    <col0>      panel4Sys.getLocationOnScreen().x, panel4Sys.getLocationOnScreen().y,</col0>
  </Catalog>
 
"      panel4Sys.getWidth(), panel4Sys.getHeight()));"
  <Catalog>
    <col0>      panel4Sys.getWidth(), panel4Sys.getHeight()));</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex1) {"
  <Catalog>
    <col0>    } catch (IOException ex1) {</col0>
  </Catalog>
 
"      System.out.println("6483" + " = " + ex1);"
  <Catalog>
    <col0>      System.out.println(6483   =   ex1);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveSubSecPic() {"
  <Catalog>
    <col0>  private void saveSubSecPic() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    findCapital();"
  <Catalog>
    <col0>    findCapital();</col0>
  </Catalog>
 
"    File f = new File(Panel4T5Locator.getSubPath() + FS + jcb4Sub"
  <Catalog>
    <col0>    File f = new File(Panel4T5Locator.getSubPath()  FS  jcb4Sub</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + " Subsector.gif");"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()   Subsector.gif);</col0>
  </Catalog>
 
"    System.out.println("" + " = " + f.toString());"
  <Catalog>
    <col0>    System.out.println(   =   f.toString());</col0>
  </Catalog>
 
"    BufferedImage bi = new BufferedImage(panel4Sys.getWidth(), panel4Sys"
  <Catalog>
    <col0>    BufferedImage bi = new BufferedImage(panel4Sys.getWidth(), panel4Sys</col0>
  </Catalog>
 
"      .getHeight(), TYPE_INT_RGB);"
  <Catalog>
    <col0>      .getHeight(), TYPE_INT_RGB);</col0>
  </Catalog>
 
"    Graphics g = panel4Sys.getGraphics();"
  <Catalog>
    <col0>    Graphics g = panel4Sys.getGraphics();</col0>
  </Catalog>
 
"    Robot r = null;"
  <Catalog>
    <col0>    Robot r = null;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      r = new Robot();"
  <Catalog>
    <col0>      r = new Robot();</col0>
  </Catalog>
 
"      bi = r.createScreenCapture(new Rectangle("
  <Catalog>
    <col0>      bi = r.createScreenCapture(new Rectangle(</col0>
  </Catalog>
 
"        panel4Sys.getLocationOnScreen().x, panel4Sys.getLocationOnScreen().y,"
  <Catalog>
    <col0>        panel4Sys.getLocationOnScreen().x, panel4Sys.getLocationOnScreen().y,</col0>
  </Catalog>
 
"        panel4Sys.getWidth(), panel4Sys.getHeight()));"
  <Catalog>
    <col0>        panel4Sys.getWidth(), panel4Sys.getHeight()));</col0>
  </Catalog>
 
"    } catch (AWTException ex) {"
  <Catalog>
    <col0>    } catch (AWTException ex) {</col0>
  </Catalog>
 
"      System.out.println("6507" + " = " + ex);"
  <Catalog>
    <col0>      System.out.println(6507   =   ex);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex1) {"
  <Catalog>
    <col0>    } catch (IOException ex1) {</col0>
  </Catalog>
 
"      System.out.println("6512" + " = " + ex1);"
  <Catalog>
    <col0>      System.out.println(6512   =   ex1);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static String getSubPath() {"
  <Catalog>
    <col0>  private static String getSubPath() {</col0>
  </Catalog>
 
"    String str = getSecPath() + FS + jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>    String str = getSecPath()  FS  jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"    return str;"
  <Catalog>
    <col0>    return str;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void loadSaved() {"
  <Catalog>
    <col0>  private void loadSaved() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"//      noPic();"
  <Catalog>
    <col0>//      noPic();</col0>
  </Catalog>
 
"      loadTexts();"
  <Catalog>
    <col0>      loadTexts();</col0>
  </Catalog>
 
"      loadOrbitPics();"
  <Catalog>
    <col0>      loadOrbitPics();</col0>
  </Catalog>
 
"//      saveFullPic();"
  <Catalog>
    <col0>//      saveFullPic();</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.println("6848" + " NO SAVED = " + e);"
  <Catalog>
    <col0>        System.out.println(6848   NO SAVED =   e);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      jcb4All.setSelectedItem("jta4Orb");"
  <Catalog>
    <col0>      jcb4All.setSelectedItem(jta4Orb);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void setSubMinMaxXY(String hex) {"
  <Catalog>
    <col0>  private void setSubMinMaxXY(String hex) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//</editor-fold>"
  <Catalog>
    <col0>//</editor-fold></col0>
  </Catalog>
 
"    int x = Integer.parseInt(hex.substring(0, 2));"
  <Catalog>
    <col0>    int x = Integer.parseInt(hex.substring(0, 2));</col0>
  </Catalog>
 
"    int y = Integer.parseInt(hex.substring(2, 4));"
  <Catalog>
    <col0>    int y = Integer.parseInt(hex.substring(2, 4));</col0>
  </Catalog>
 
"    String str = jcb4Sub.getSelectedItem().toString().substring(0, 1);"
  <Catalog>
    <col0>    String str = jcb4Sub.getSelectedItem().toString().substring(0, 1);</col0>
  </Catalog>
 
"    switch (str) {"
  <Catalog>
    <col0>    switch (str) {</col0>
  </Catalog>
 
"      case "A":"
  <Catalog>
    <col0>      case A:</col0>
  </Catalog>
 
"      case "E":"
  <Catalog>
    <col0>      case E:</col0>
  </Catalog>
 
"      case "I":"
  <Catalog>
    <col0>      case I:</col0>
  </Catalog>
 
"      case "M": {"
  <Catalog>
    <col0>      case M: {</col0>
  </Catalog>
 
"        mix = 1;"
  <Catalog>
    <col0>        mix = 1;</col0>
  </Catalog>
 
"        max = 8;"
  <Catalog>
    <col0>        max = 8;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "B":"
  <Catalog>
    <col0>      case B:</col0>
  </Catalog>
 
"      case "F":"
  <Catalog>
    <col0>      case F:</col0>
  </Catalog>
 
"      case "J":"
  <Catalog>
    <col0>      case J:</col0>
  </Catalog>
 
"      case "N": {"
  <Catalog>
    <col0>      case N: {</col0>
  </Catalog>
 
"        mix = 9;"
  <Catalog>
    <col0>        mix = 9;</col0>
  </Catalog>
 
"        max = 16;"
  <Catalog>
    <col0>        max = 16;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "C":"
  <Catalog>
    <col0>      case C:</col0>
  </Catalog>
 
"      case "G":"
  <Catalog>
    <col0>      case G:</col0>
  </Catalog>
 
"      case "K":"
  <Catalog>
    <col0>      case K:</col0>
  </Catalog>
 
"      case "O": {"
  <Catalog>
    <col0>      case O: {</col0>
  </Catalog>
 
"        mix = 17;"
  <Catalog>
    <col0>        mix = 17;</col0>
  </Catalog>
 
"        max = 24;"
  <Catalog>
    <col0>        max = 24;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "D":"
  <Catalog>
    <col0>      case D:</col0>
  </Catalog>
 
"      case "H":"
  <Catalog>
    <col0>      case H:</col0>
  </Catalog>
 
"      case "L":"
  <Catalog>
    <col0>      case L:</col0>
  </Catalog>
 
"      case "P": {"
  <Catalog>
    <col0>      case P: {</col0>
  </Catalog>
 
"        mix = 25;"
  <Catalog>
    <col0>        mix = 25;</col0>
  </Catalog>
 
"        max = 32;"
  <Catalog>
    <col0>        max = 32;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        JOptionPane.showMessageDialog(jf, "" + sub);"
  <Catalog>
    <col0>        JOptionPane.showMessageDialog(jf,   sub);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    switch (str) {"
  <Catalog>
    <col0>    switch (str) {</col0>
  </Catalog>
 
"      case "A":"
  <Catalog>
    <col0>      case A:</col0>
  </Catalog>
 
"      case "B":"
  <Catalog>
    <col0>      case B:</col0>
  </Catalog>
 
"      case "C":"
  <Catalog>
    <col0>      case C:</col0>
  </Catalog>
 
"      case "D": {"
  <Catalog>
    <col0>      case D: {</col0>
  </Catalog>
 
"        miy = 1;"
  <Catalog>
    <col0>        miy = 1;</col0>
  </Catalog>
 
"        may = 10;"
  <Catalog>
    <col0>        may = 10;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "E":"
  <Catalog>
    <col0>      case E:</col0>
  </Catalog>
 
"      case "F":"
  <Catalog>
    <col0>      case F:</col0>
  </Catalog>
 
"      case "G":"
  <Catalog>
    <col0>      case G:</col0>
  </Catalog>
 
"      case "H": {"
  <Catalog>
    <col0>      case H: {</col0>
  </Catalog>
 
"        miy = 11;"
  <Catalog>
    <col0>        miy = 11;</col0>
  </Catalog>
 
"        may = 20;"
  <Catalog>
    <col0>        may = 20;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "I":"
  <Catalog>
    <col0>      case I:</col0>
  </Catalog>
 
"      case "J":"
  <Catalog>
    <col0>      case J:</col0>
  </Catalog>
 
"      case "K":"
  <Catalog>
    <col0>      case K:</col0>
  </Catalog>
 
"      case "L": {"
  <Catalog>
    <col0>      case L: {</col0>
  </Catalog>
 
"        miy = 21;"
  <Catalog>
    <col0>        miy = 21;</col0>
  </Catalog>
 
"        may = 30;"
  <Catalog>
    <col0>        may = 30;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "M":"
  <Catalog>
    <col0>      case M:</col0>
  </Catalog>
 
"      case "N":"
  <Catalog>
    <col0>      case N:</col0>
  </Catalog>
 
"      case "O":"
  <Catalog>
    <col0>      case O:</col0>
  </Catalog>
 
"      case "P": {"
  <Catalog>
    <col0>      case P: {</col0>
  </Catalog>
 
"        miy = 31;"
  <Catalog>
    <col0>        miy = 31;</col0>
  </Catalog>
 
"        may = 40;"
  <Catalog>
    <col0>        may = 40;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        JOptionPane.showMessageDialog(jf, "" + sub);"
  <Catalog>
    <col0>        JOptionPane.showMessageDialog(jf,   sub);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public String getSub(String hex) {"
  <Catalog>
    <col0>  public String getSub(String hex) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    int x = Integer.parseInt(hex.substring(0, 2));"
  <Catalog>
    <col0>    int x = Integer.parseInt(hex.substring(0, 2));</col0>
  </Catalog>
 
"    int y = Integer.parseInt(hex.substring(2, 4));"
  <Catalog>
    <col0>    int y = Integer.parseInt(hex.substring(2, 4));</col0>
  </Catalog>
 
"    String l = "";"
  <Catalog>
    <col0>    String l = ;</col0>
  </Catalog>
 
"    if (x < 9) {"
  <Catalog>
    <col0>    if (x < 9) {</col0>
  </Catalog>
 
"      if (y < 11) {"
  <Catalog>
    <col0>      if (y < 11) {</col0>
  </Catalog>
 
"        l = "A";"
  <Catalog>
    <col0>        l = A;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y > 10 & y < 21) {"
  <Catalog>
    <col0>      if (y > 10 & y < 21) {</col0>
  </Catalog>
 
"        l = "E";"
  <Catalog>
    <col0>        l = E;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y > 20 & y < 31) {"
  <Catalog>
    <col0>      if (y > 20 & y < 31) {</col0>
  </Catalog>
 
"        l = "I";"
  <Catalog>
    <col0>        l = I;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y > 30) {"
  <Catalog>
    <col0>      if (y > 30) {</col0>
  </Catalog>
 
"        l = "M";"
  <Catalog>
    <col0>        l = M;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (x > 8 & x < 17) {"
  <Catalog>
    <col0>    if (x > 8 & x < 17) {</col0>
  </Catalog>
 
"      if (y < 11) {"
  <Catalog>
    <col0>      if (y < 11) {</col0>
  </Catalog>
 
"        l = "B";"
  <Catalog>
    <col0>        l = B;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y > 10 & y < 21) {"
  <Catalog>
    <col0>      if (y > 10 & y < 21) {</col0>
  </Catalog>
 
"        l = "F";"
  <Catalog>
    <col0>        l = F;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y > 20 & y < 31) {"
  <Catalog>
    <col0>      if (y > 20 & y < 31) {</col0>
  </Catalog>
 
"        l = "J";"
  <Catalog>
    <col0>        l = J;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y > 30) {"
  <Catalog>
    <col0>      if (y > 30) {</col0>
  </Catalog>
 
"        l = "N";"
  <Catalog>
    <col0>        l = N;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else if (x > 16 & x < 25) {"
  <Catalog>
    <col0>    } else if (x > 16 & x < 25) {</col0>
  </Catalog>
 
"      if (y < 11) {"
  <Catalog>
    <col0>      if (y < 11) {</col0>
  </Catalog>
 
"        l = "C";"
  <Catalog>
    <col0>        l = C;</col0>
  </Catalog>
 
"      } else if (y > 10 & y < 21) {"
  <Catalog>
    <col0>      } else if (y > 10 & y < 21) {</col0>
  </Catalog>
 
"        l = "G";"
  <Catalog>
    <col0>        l = G;</col0>
  </Catalog>
 
"      } else if (y > 20 & y < 31) {"
  <Catalog>
    <col0>      } else if (y > 20 & y < 31) {</col0>
  </Catalog>
 
"        l = "K";"
  <Catalog>
    <col0>        l = K;</col0>
  </Catalog>
 
"      } else if (y > 30) {"
  <Catalog>
    <col0>      } else if (y > 30) {</col0>
  </Catalog>
 
"        l = "O";"
  <Catalog>
    <col0>        l = O;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } else if (x > 24 & x < 33) {"
  <Catalog>
    <col0>    } else if (x > 24 & x < 33) {</col0>
  </Catalog>
 
"      if (y < 11) {"
  <Catalog>
    <col0>      if (y < 11) {</col0>
  </Catalog>
 
"        l = "D";"
  <Catalog>
    <col0>        l = D;</col0>
  </Catalog>
 
"      } else if (y > 10 & y < 21) {"
  <Catalog>
    <col0>      } else if (y > 10 & y < 21) {</col0>
  </Catalog>
 
"        l = "H";"
  <Catalog>
    <col0>        l = H;</col0>
  </Catalog>
 
"      } else if (y > 20 & y < 31) {"
  <Catalog>
    <col0>      } else if (y > 20 & y < 31) {</col0>
  </Catalog>
 
"        l = "L";"
  <Catalog>
    <col0>        l = L;</col0>
  </Catalog>
 
"      } else if (y > 30) {"
  <Catalog>
    <col0>      } else if (y > 30) {</col0>
  </Catalog>
 
"        l = "P";"
  <Catalog>
    <col0>        l = P;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return l;"
  <Catalog>
    <col0>    return l;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void findCapital() {"
  <Catalog>
    <col0>  private void findCapital() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String check = "";"
  <Catalog>
    <col0>    String check = ;</col0>
  </Catalog>
 
"    for (int j = world1; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = world1; j < lines.length; j) {</col0>
  </Catalog>
 
"      if ((lines[j].contains(" Cx") | lines[j].contains(" Cp") | lines[j]"
  <Catalog>
    <col0>      if ((lines[j].contains( Cx) | lines[j].contains( Cp) | lines[j]</col0>
  </Catalog>
 
"        .contains("Cs "))) {"
  <Catalog>
    <col0>        .contains(Cs ))) {</col0>
  </Catalog>
 
"        check = lines[j].substring(0, 4);"
  <Catalog>
    <col0>        check = lines[j].substring(0, 4);</col0>
  </Catalog>
 
"        System.out.println("check" + " = " + check);"
  <Catalog>
    <col0>        System.out.println(check   =   check);</col0>
  </Catalog>
 
"        for (int k = 0; k < jcb4Sys.getItemCount(); k++) {"
  <Catalog>
    <col0>        for (int k = 0; k < jcb4Sys.getItemCount(); k) {</col0>
  </Catalog>
 
"          if (jcb4Sys.getItemAt(k).toString().startsWith(check)) {"
  <Catalog>
    <col0>          if (jcb4Sys.getItemAt(k).toString().startsWith(check)) {</col0>
  </Catalog>
 
"            jcb4Sys.setSelectedIndex(k);"
  <Catalog>
    <col0>            jcb4Sys.setSelectedIndex(k);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void setLang() {"
  <Catalog>
    <col0>  private void setLang() {</col0>
  </Catalog>
 
"    if (running) {"
  <Catalog>
    <col0>    if (running) {</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        switch (data[12].substring(4, 6)) {"
  <Catalog>
    <col0>        switch (data[12].substring(4, 6)) {</col0>
  </Catalog>
 
"          case "Im": {"
  <Catalog>
    <col0>          case Im: {</col0>
  </Catalog>
 
"            jcb4Lang.setSelectedItem("Vilani");"
  <Catalog>
    <col0>            jcb4Lang.setSelectedItem(Vilani);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "Zh": {"
  <Catalog>
    <col0>          case Zh: {</col0>
  </Catalog>
 
"            jcb4Lang.setSelectedItem("Zhodani");"
  <Catalog>
    <col0>            jcb4Lang.setSelectedItem(Zhodani);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "As": {"
  <Catalog>
    <col0>          case As: {</col0>
  </Catalog>
 
"            jcb4Lang.setSelectedItem("Aslan");"
  <Catalog>
    <col0>            jcb4Lang.setSelectedItem(Aslan);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "Va": {"
  <Catalog>
    <col0>          case Va: {</col0>
  </Catalog>
 
"            jcb4Lang.setSelectedItem("Vargr");"
  <Catalog>
    <col0>            jcb4Lang.setSelectedItem(Vargr);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "Kk": {"
  <Catalog>
    <col0>          case Kk: {</col0>
  </Catalog>
 
"            jcb4Lang.setSelectedItem("K`kree");"
  <Catalog>
    <col0>            jcb4Lang.setSelectedItem(K`kree);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case "Dr": {"
  <Catalog>
    <col0>          case Dr: {</col0>
  </Catalog>
 
"            jcb4Lang.setSelectedItem("Droyne");"
  <Catalog>
    <col0>            jcb4Lang.setSelectedItem(Droyne);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          default: {"
  <Catalog>
    <col0>          default: {</col0>
  </Catalog>
 
"            switch (data[12].substring(6, 8)) {"
  <Catalog>
    <col0>            switch (data[12].substring(6, 8)) {</col0>
  </Catalog>
 
"              case "Zh": {"
  <Catalog>
    <col0>              case Zh: {</col0>
  </Catalog>
 
"                jcb4Lang.setSelectedItem("Zhodani");"
  <Catalog>
    <col0>                jcb4Lang.setSelectedItem(Zhodani);</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case "As": {"
  <Catalog>
    <col0>              case As: {</col0>
  </Catalog>
 
"                jcb4Lang.setSelectedItem("Aslan");"
  <Catalog>
    <col0>                jcb4Lang.setSelectedItem(Aslan);</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case "Va": {"
  <Catalog>
    <col0>              case Va: {</col0>
  </Catalog>
 
"                jcb4Lang.setSelectedItem("Vargr");"
  <Catalog>
    <col0>                jcb4Lang.setSelectedItem(Vargr);</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case "Kk": {"
  <Catalog>
    <col0>              case Kk: {</col0>
  </Catalog>
 
"                jcb4Lang.setSelectedItem("K`kree");"
  <Catalog>
    <col0>                jcb4Lang.setSelectedItem(K`kree);</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case "Dr": {"
  <Catalog>
    <col0>              case Dr: {</col0>
  </Catalog>
 
"                jcb4Lang.setSelectedItem("Droyne");"
  <Catalog>
    <col0>                jcb4Lang.setSelectedItem(Droyne);</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case "Hu":"
  <Catalog>
    <col0>              case Hu:</col0>
  </Catalog>
 
"              case "Im":"
  <Catalog>
    <col0>              case Im:</col0>
  </Catalog>
 
"              default: {"
  <Catalog>
    <col0>              default: {</col0>
  </Catalog>
 
"                jcb4Lang.setSelectedItem("Vilani");"
  <Catalog>
    <col0>                jcb4Lang.setSelectedItem(Vilani);</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        System.out.println("6654" + " = " + e.toString());"
  <Catalog>
    <col0>        System.out.println(6654   =   e.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jtf4Word.setText("");"
  <Catalog>
    <col0>      jtf4Word.setText();</col0>
  </Catalog>
 
"      System.out.println("data[12].substring(6, 8)" + " = " + data[12]"
  <Catalog>
    <col0>      System.out.println(data[12].substring(6, 8)   =   data[12]</col0>
  </Catalog>
 
"        .substring(6, 8));"
  <Catalog>
    <col0>        .substring(6, 8));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void destChange() {"
  <Catalog>
    <col0>  private void destChange() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String sublet = jcb4Sub.getSelectedItem().toString().substring(0, 1);"
  <Catalog>
    <col0>    String sublet = jcb4Sub.getSelectedItem().toString().substring(0, 1);</col0>
  </Catalog>
 
"    String sc = "s";"
  <Catalog>
    <col0>    String sc = s;</col0>
  </Catalog>
 
"    String sb = "s";"
  <Catalog>
    <col0>    String sb = s;</col0>
  </Catalog>
 
"    String ss = "s";"
  <Catalog>
    <col0>    String ss = s;</col0>
  </Catalog>
 
"    String[] neigh = Panel4T5Neighbours.neighbours;//letters"
  <Catalog>
    <col0>    String[] neigh = Panel4T5Neighbours.neighbours;//letters</col0>
  </Catalog>
 
"    String[] outs = Panel4T5Neighbours.outsec;//numbers"
  <Catalog>
    <col0>    String[] outs = Panel4T5Neighbours.outsec;//numbers</col0>
  </Catalog>
 
"    String subs = "";//9 including sublet & surrounding subs"
  <Catalog>
    <col0>    String subs = ;//9 including sublet & surrounding subs</col0>
  </Catalog>
 
"    String outside = "";//0,3 or 5 at corners"
  <Catalog>
    <col0>    String outside = ;//0,3 or 5 at corners</col0>
  </Catalog>
 
"    String inside = "";//9,6 or 4"
  <Catalog>
    <col0>    String inside = ;//9,6 or 4</col0>
  </Catalog>
 
"    int x = 0, y = 0;"
  <Catalog>
    <col0>    int x = 0, y = 0;</col0>
  </Catalog>
 
"    int subnum = 0;//array number of neighbours string"
  <Catalog>
    <col0>    int subnum = 0;//array number of neighbours string</col0>
  </Catalog>
 
"    for (int j = 0; j < neigh.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < neigh.length; j) {</col0>
  </Catalog>
 
"      if (neigh[j].substring(0, 1).equals(sublet)) {"
  <Catalog>
    <col0>      if (neigh[j].substring(0, 1).equals(sublet)) {</col0>
  </Catalog>
 
"        subnum = j;"
  <Catalog>
    <col0>        subnum = j;</col0>
  </Catalog>
 
"        subs = neigh[subnum];"
  <Catalog>
    <col0>        subs = neigh[subnum];</col0>
  </Catalog>
 
"        if (DEBUG) { // true or false"
  <Catalog>
    <col0>        if (DEBUG) { // true or false</col0>
  </Catalog>
 
"          System.out.println("subs" + " = " + subs);"
  <Catalog>
    <col0>          System.out.println(subs   =   subs);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int outlen = outs[subnum].length();"
  <Catalog>
    <col0>    int outlen = outs[subnum].length();</col0>
  </Catalog>
 
"    int letnum = 0;"
  <Catalog>
    <col0>    int letnum = 0;</col0>
  </Catalog>
 
"    // find which list of subsectors outside of sector"
  <Catalog>
    <col0>    // find which list of subsectors outside of sector</col0>
  </Catalog>
 
"    for (int j = 0; j < outlen; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < outlen; j) {</col0>
  </Catalog>
 
"      letnum = Integer.parseInt(outs[subnum].substring(j, j + 1));"
  <Catalog>
    <col0>      letnum = Integer.parseInt(outs[subnum].substring(j, j  1));</col0>
  </Catalog>
 
"      outside += subs.substring(letnum, letnum + 1);"
  <Catalog>
    <col0>      outside = subs.substring(letnum, letnum  1);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    // find which list of subsectors inside of sector"
  <Catalog>
    <col0>    // find which list of subsectors inside of sector</col0>
  </Catalog>
 
"    for (int j = 0; j < 9; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < 9; j) {</col0>
  </Catalog>
 
"      if (!outside.contains(subs.substring(j, j + 1))) {"
  <Catalog>
    <col0>      if (!outside.contains(subs.substring(j, j  1))) {</col0>
  </Catalog>
 
"        inside += subs.substring(j, j + 1);"
  <Catalog>
    <col0>        inside = subs.substring(j, j  1);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (DEBUG) { // true or false"
  <Catalog>
    <col0>      if (DEBUG) { // true or false</col0>
  </Catalog>
 
"        System.out.println("inside" + " = " + inside);"
  <Catalog>
    <col0>        System.out.println(inside   =   inside);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    // find subsector letter of selected world"
  <Catalog>
    <col0>    // find subsector letter of selected world</col0>
  </Catalog>
 
"    sB.setText(getSub(dest.substring(0, 4)));"
  <Catalog>
    <col0>    sB.setText(getSub(dest.substring(0, 4)));</col0>
  </Catalog>
 
"    for (int i = 0; i < outlen; i++) {"
  <Catalog>
    <col0>    for (int i = 0; i < outlen; i) {</col0>
  </Catalog>
 
"      //is dest in subsector?"
  <Catalog>
    <col0>      //is dest in subsector?</col0>
  </Catalog>
 
"      if (sB.getText().equals(sublet)) {"
  <Catalog>
    <col0>      if (sB.getText().equals(sublet)) {</col0>
  </Catalog>
 
"        sC.setText(jcb4Sec.getSelectedItem().toString());"
  <Catalog>
    <col0>        sC.setText(jcb4Sec.getSelectedItem().toString());</col0>
  </Catalog>
 
"        sS.setText(dest);"
  <Catalog>
    <col0>        sS.setText(dest);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        sC.setText("s");"
  <Catalog>
    <col0>        sC.setText(s);</col0>
  </Catalog>
 
"        sS.setText("s");"
  <Catalog>
    <col0>        sS.setText(s);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //is dest inside sector? (which subs are in sec?)"
  <Catalog>
    <col0>      //is dest inside sector? (which subs are in sec?)</col0>
  </Catalog>
 
"      if (inside.contains(sB.getText())) {"
  <Catalog>
    <col0>      if (inside.contains(sB.getText())) {</col0>
  </Catalog>
 
"        sC.setText(jcb4Sec.getSelectedItem().toString());"
  <Catalog>
    <col0>        sC.setText(jcb4Sec.getSelectedItem().toString());</col0>
  </Catalog>
 
"        sS.setText(dest);"
  <Catalog>
    <col0>        sS.setText(dest);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int sx = 0;"
  <Catalog>
    <col0>    int sx = 0;</col0>
  </Catalog>
 
"    int sy = 0;"
  <Catalog>
    <col0>    int sy = 0;</col0>
  </Catalog>
 
"    if (sC.getText() != jcb4Sec.getSelectedItem().toString()) {"
  <Catalog>
    <col0>    if (sC.getText() != jcb4Sec.getSelectedItem().toString()) {</col0>
  </Catalog>
 
"      int minx = 0;"
  <Catalog>
    <col0>      int minx = 0;</col0>
  </Catalog>
 
"      int maxx = 0;"
  <Catalog>
    <col0>      int maxx = 0;</col0>
  </Catalog>
 
"      int miny = 0;"
  <Catalog>
    <col0>      int miny = 0;</col0>
  </Catalog>
 
"      int maxy = 0;"
  <Catalog>
    <col0>      int maxy = 0;</col0>
  </Catalog>
 
"      String[] nei = new String[9];"
  <Catalog>
    <col0>      String[] nei = new String[9];</col0>
  </Catalog>
 
"      for (int j = 0; j < secs.length; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < secs.length; j) {</col0>
  </Catalog>
 
"        if (secs[j].startsWith(jcb4Sec.getSelectedItem().toString())) {"
  <Catalog>
    <col0>        if (secs[j].startsWith(jcb4Sec.getSelectedItem().toString())) {</col0>
  </Catalog>
 
"          //what are coords of sector?"
  <Catalog>
    <col0>          //what are coords of sector?</col0>
  </Catalog>
 
"          String[] sec = secs[j].split(",");"
  <Catalog>
    <col0>          String[] sec = secs[j].split(</col0>
    <col1>);</col1>
  </Catalog>
 
"          sx = Integer.parseInt(sec[1]);"
  <Catalog>
    <col0>          sx = Integer.parseInt(sec[1]);</col0>
  </Catalog>
 
"          sy = Integer.parseInt(sec[2]);"
  <Catalog>
    <col0>          sy = Integer.parseInt(sec[2]);</col0>
  </Catalog>
 
"          nei[0] = secs[j];"
  <Catalog>
    <col0>          nei[0] = secs[j];</col0>
  </Catalog>
 
"          minx = sx - 1;"
  <Catalog>
    <col0>          minx = sx - 1;</col0>
  </Catalog>
 
"          maxx = sx + 1;"
  <Catalog>
    <col0>          maxx = sx  1;</col0>
  </Catalog>
 
"          miny = sy - 1;"
  <Catalog>
    <col0>          miny = sy - 1;</col0>
  </Catalog>
 
"          maxy = sy + 1;"
  <Catalog>
    <col0>          maxy = sy  1;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int count = 1;"
  <Catalog>
    <col0>      int count = 1;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        for (int j = 0; j < secs.length; j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < secs.length; j) {</col0>
  </Catalog>
 
"          String[] sec = secs[j].split(",");"
  <Catalog>
    <col0>          String[] sec = secs[j].split(</col0>
    <col1>);</col1>
  </Catalog>
 
"          x = Integer.parseInt(sec[1]);"
  <Catalog>
    <col0>          x = Integer.parseInt(sec[1]);</col0>
  </Catalog>
 
"          y = Integer.parseInt(sec[2]);"
  <Catalog>
    <col0>          y = Integer.parseInt(sec[2]);</col0>
  </Catalog>
 
"          if (x <= maxx & x >= minx) {"
  <Catalog>
    <col0>          if (x <= maxx & x >= minx) {</col0>
  </Catalog>
 
"            // find neighbours of subsector"
  <Catalog>
    <col0>            // find neighbours of subsector</col0>
  </Catalog>
 
"            if ((y <= maxy & y >= miny) & (!secs[j].contains(jcb4Sec"
  <Catalog>
    <col0>            if ((y <= maxy & y >= miny) & (!secs[j].contains(jcb4Sec</col0>
  </Catalog>
 
"              .getSelectedItem().toString()))) {"
  <Catalog>
    <col0>              .getSelectedItem().toString()))) {</col0>
  </Catalog>
 
"              nei[count] = secs[j];"
  <Catalog>
    <col0>              nei[count] = secs[j];</col0>
  </Catalog>
 
"              count += 1;"
  <Catalog>
    <col0>              count = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        x = sx;"
  <Catalog>
    <col0>        x = sx;</col0>
  </Catalog>
 
"        y = sy;"
  <Catalog>
    <col0>        y = sy;</col0>
  </Catalog>
 
"        for (int j = 0; j < subs.length(); j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < subs.length(); j) {</col0>
  </Catalog>
 
"          if (subs.substring(j, j + 1).equals(sB.getText())) {"
  <Catalog>
    <col0>          if (subs.substring(j, j  1).equals(sB.getText())) {</col0>
  </Catalog>
 
"            switch (j) {"
  <Catalog>
    <col0>            switch (j) {</col0>
  </Catalog>
 
"              case 0: {"
  <Catalog>
    <col0>              case 0: {</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 1: {"
  <Catalog>
    <col0>              case 1: {</col0>
  </Catalog>
 
"                x += -1;"
  <Catalog>
    <col0>                x = -1;</col0>
  </Catalog>
 
"                y += -1;"
  <Catalog>
    <col0>                y = -1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 2: {"
  <Catalog>
    <col0>              case 2: {</col0>
  </Catalog>
 
"                y += - 1;"
  <Catalog>
    <col0>                y = - 1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 3: {"
  <Catalog>
    <col0>              case 3: {</col0>
  </Catalog>
 
"                x += 1;"
  <Catalog>
    <col0>                x = 1;</col0>
  </Catalog>
 
"                y += -1;"
  <Catalog>
    <col0>                y = -1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 4: {"
  <Catalog>
    <col0>              case 4: {</col0>
  </Catalog>
 
"                x += 1;"
  <Catalog>
    <col0>                x = 1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 5: {"
  <Catalog>
    <col0>              case 5: {</col0>
  </Catalog>
 
"                x += 1;"
  <Catalog>
    <col0>                x = 1;</col0>
  </Catalog>
 
"                y += 1;"
  <Catalog>
    <col0>                y = 1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 6: {"
  <Catalog>
    <col0>              case 6: {</col0>
  </Catalog>
 
"                y += 1;"
  <Catalog>
    <col0>                y = 1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 7: {"
  <Catalog>
    <col0>              case 7: {</col0>
  </Catalog>
 
"                x += -1;"
  <Catalog>
    <col0>                x = -1;</col0>
  </Catalog>
 
"                y += 1;"
  <Catalog>
    <col0>                y = 1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              case 8: {"
  <Catalog>
    <col0>              case 8: {</col0>
  </Catalog>
 
"                x += -1;"
  <Catalog>
    <col0>                x = -1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } catch (NumberFormatException e) {"
  <Catalog>
    <col0>      } catch (NumberFormatException e) {</col0>
  </Catalog>
 
"        System.out.println("6803" + " = " + e);"
  <Catalog>
    <col0>        System.out.println(6803   =   e);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      for (String sec : secs) {"
  <Catalog>
    <col0>      for (String sec : secs) {</col0>
  </Catalog>
 
"        if (sec.endsWith("" + x + "," + y)) {"
  <Catalog>
    <col0>        if (sec.endsWith(  x  </col0>
    <col1>  y)) {</col1>
  </Catalog>
 
"          sC.setText(sec.substring(0, sec.indexOf(",")));"
  <Catalog>
    <col0>          sC.setText(sec.substring(0, sec.indexOf(</col0>
    <col1>)));</col1>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      sS.setText(dest);"
  <Catalog>
    <col0>      sS.setText(dest);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    System.out.println(getSysName(new File(_SEC + FS + sC.getText() + ".sec"),"
  <Catalog>
    <col0>    System.out.println(getSysName(new File(_SEC  FS  sC.getText()  .sec),</col0>
  </Catalog>
 
"      sS.getText().substring(0, 4)));"
  <Catalog>
    <col0>      sS.getText().substring(0, 4)));</col0>
  </Catalog>
 
"    showDest();"
  <Catalog>
    <col0>    showDest();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void analyze() {"
  <Catalog>
    <col0>  private void analyze() {</col0>
  </Catalog>
 
"    String[] txt = this.toString().split("[");"
  <Catalog>
    <col0>    String[] txt = this.toString().split([);</col0>
  </Catalog>
 
"    for (int j = 0; j < txt.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < txt.length; j) {</col0>
  </Catalog>
 
"      if (j > 0) {"
  <Catalog>
    <col0>      if (j > 0) {</col0>
  </Catalog>
 
"        System.out.print("  ");"
  <Catalog>
    <col0>        System.out.print(  );</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      System.out.println(" " + txt[j]);"
  <Catalog>
    <col0>      System.out.println(   txt[j]);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void getStar() {"
  <Catalog>
    <col0>  private void getStar() {</col0>
  </Catalog>
 
"    String star = jcb4Star.getSelectedItem().toString();"
  <Catalog>
    <col0>    String star = jcb4Star.getSelectedItem().toString();</col0>
  </Catalog>
 
"    setStarData(star);"
  <Catalog>
    <col0>    setStarData(star);</col0>
  </Catalog>
 
"    String txt = "" + getSysPath() + CRLF;"
  <Catalog>
    <col0>    String txt =   getSysPath()  CRLF;</col0>
  </Catalog>
 
"    txt += "STAR = " + star + CRLF;"
  <Catalog>
    <col0>    txt = STAR =   star  CRLF;</col0>
  </Catalog>
 
"    txt += "getStarColors = " + getStarColors() + CRLF;"
  <Catalog>
    <col0>    txt = getStarColors =   getStarColors()  CRLF;</col0>
  </Catalog>
 
"    txt += "Type = " + t + CRLF;"
  <Catalog>
    <col0>    txt = Type =   t  CRLF;</col0>
  </Catalog>
 
"    switch (t) {"
  <Catalog>
    <col0>    switch (t) {</col0>
  </Catalog>
 
"      case "O": {"
  <Catalog>
    <col0>      case O: {</col0>
  </Catalog>
 
"        col = o;"
  <Catalog>
    <col0>        col = o;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "B": {"
  <Catalog>
    <col0>      case B: {</col0>
  </Catalog>
 
"        col = o;"
  <Catalog>
    <col0>        col = o;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "A": {"
  <Catalog>
    <col0>      case A: {</col0>
  </Catalog>
 
"        col = a;"
  <Catalog>
    <col0>        col = a;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "F": {"
  <Catalog>
    <col0>      case F: {</col0>
  </Catalog>
 
"        col = fi;"
  <Catalog>
    <col0>        col = fi;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "G": {"
  <Catalog>
    <col0>      case G: {</col0>
  </Catalog>
 
"        col = gi;"
  <Catalog>
    <col0>        col = gi;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "K": {"
  <Catalog>
    <col0>      case K: {</col0>
  </Catalog>
 
"        col = k;"
  <Catalog>
    <col0>        col = k;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "M": {"
  <Catalog>
    <col0>      case M: {</col0>
  </Catalog>
 
"        col = m;"
  <Catalog>
    <col0>        col = m;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    txt += "Color = " + col.getRGB() + CRLF;"
  <Catalog>
    <col0>    txt = Color =   col.getRGB()  CRLF;</col0>
  </Catalog>
 
"    txt += "  Red = " + col.getRed() + CRLF;"
  <Catalog>
    <col0>    txt =   Red =   col.getRed()  CRLF;</col0>
  </Catalog>
 
"    txt += "  Green = " + col.getGreen() + CRLF;"
  <Catalog>
    <col0>    txt =   Green =   col.getGreen()  CRLF;</col0>
  </Catalog>
 
"    txt += "  Blue = " + col.getBlue() + CRLF;"
  <Catalog>
    <col0>    txt =   Blue =   col.getBlue()  CRLF;</col0>
  </Catalog>
 
"    txt += "Dec = " + d + CRLF;"
  <Catalog>
    <col0>    txt = Dec =   d  CRLF;</col0>
  </Catalog>
 
"    txt += "Size = " + s + CRLF;"
  <Catalog>
    <col0>    txt = Size =   s  CRLF;</col0>
  </Catalog>
 
"    txt += "getStarData = " + getStarData(star) + CRLF;"
  <Catalog>
    <col0>    txt = getStarData =   getStarData(star)  CRLF;</col0>
  </Catalog>
 
"    txt += "getStellar = " + getStellar() + CRLF;"
  <Catalog>
    <col0>    txt = getStellar =   getStellar()  CRLF;</col0>
  </Catalog>
 
"    txt += "getMinOrbit = " + getMinOrbit(star) + CRLF;"
  <Catalog>
    <col0>    txt = getMinOrbit =   getMinOrbit(star)  CRLF;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private Color getStarCol() {"
  <Catalog>
    <col0>  private Color getStarCol() {</col0>
  </Catalog>
 
"    String star = jcb4Star.getSelectedItem().toString();"
  <Catalog>
    <col0>    String star = jcb4Star.getSelectedItem().toString();</col0>
  </Catalog>
 
"    setStarData(star);"
  <Catalog>
    <col0>    setStarData(star);</col0>
  </Catalog>
 
"    switch (t) {"
  <Catalog>
    <col0>    switch (t) {</col0>
  </Catalog>
 
"      case "O": {"
  <Catalog>
    <col0>      case O: {</col0>
  </Catalog>
 
"        col = o;"
  <Catalog>
    <col0>        col = o;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "B": {"
  <Catalog>
    <col0>      case B: {</col0>
  </Catalog>
 
"        col = o;"
  <Catalog>
    <col0>        col = o;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "A": {"
  <Catalog>
    <col0>      case A: {</col0>
  </Catalog>
 
"        col = a;"
  <Catalog>
    <col0>        col = a;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "F": {"
  <Catalog>
    <col0>      case F: {</col0>
  </Catalog>
 
"        col = fi;"
  <Catalog>
    <col0>        col = fi;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "G": {"
  <Catalog>
    <col0>      case G: {</col0>
  </Catalog>
 
"        col = gi;"
  <Catalog>
    <col0>        col = gi;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "K": {"
  <Catalog>
    <col0>      case K: {</col0>
  </Catalog>
 
"        col = k;"
  <Catalog>
    <col0>        col = k;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "M": {"
  <Catalog>
    <col0>      case M: {</col0>
  </Catalog>
 
"        col = m;"
  <Catalog>
    <col0>        col = m;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return col;"
  <Catalog>
    <col0>    return col;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void updateWebView() {"
  <Catalog>
    <col0>  private void updateWebView() {</col0>
  </Catalog>
 
"    String filename = "file:///C:/T5/Spinward%20Marches/C%20Regina/1910%20Regina/1910%20Regina.html";"
  <Catalog>
    <col0>    String filename = file:///C:/T5/Spinward%20Marches/C%20Regina/1910%20Regina/1910%20Regina.html;</col0>
  </Catalog>
 
"    String start = "file:///";"
  <Catalog>
    <col0>    String start = file:///;</col0>
  </Catalog>
 
"    String sec = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>    String sec = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String sub = jcb4Sub.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    String sub = jcb4Sub.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    String sys = jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    String sys = jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    String file = jcb4Sys.getSelectedItem().toString().trim() + ".html";"
  <Catalog>
    <col0>    String file = jcb4Sys.getSelectedItem().toString().trim()  .html;</col0>
  </Catalog>
 
"    file.replace(" ", "%20");"
  <Catalog>
    <col0>    file.replace( , %20);</col0>
  </Catalog>
 
"    file.replace("/", "/");"
  <Catalog>
    <col0>    file.replace(/, /);</col0>
  </Catalog>
 
"    String all = start + "C:/T5/" + sec + "/" + sub + "/" + sys + "/" + file;"
  <Catalog>
    <col0>    String all = start  C:/T5/  sec  /  sub  /  sys  /  file;</col0>
  </Catalog>
 
"    System.out.println("" + " = " + all);"
  <Catalog>
    <col0>    System.out.println(   =   all);</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("Web Page" + " = " + all);"
  <Catalog>
    <col0>      System.out.println(Web Page   =   all);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    RenameFX.main(new String[]{all});"
  <Catalog>
    <col0>    RenameFX.main(new String[]{all});</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String insertScripts(int times) {"
  <Catalog>
    <col0>  private String insertScripts(int times) {</col0>
  </Catalog>
 
"    String txt = "";"
  <Catalog>
    <col0>    String txt = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < times; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < times; j) {</col0>
  </Catalog>
 
"      System.out.println("User.home = " + System.getProperty("user.home"));"
  <Catalog>
    <col0>      System.out.println(User.home =   System.getProperty(user.home));</col0>
  </Catalog>
 
"      System.out.println("User.dir = " + System.getProperty("user.dir"));"
  <Catalog>
    <col0>      System.out.println(User.dir =   System.getProperty(user.dir));</col0>
  </Catalog>
 
"      txt += "<br><applet code=\"applets/Test1.class\" width=\"600\" height=\"600\"><br>APPLET" + CRLF;"
  <Catalog>
    <col0>      txt = <br><applet code=\applets/Test1.class\ width=\600\ height=\600\><br>APPLET  CRLF;</col0>
  </Catalog>
 
"      txt += "<br><applet code=\"Test1.class\" width=\"600\" height=\"600\"><br>APPLET" + CRLF;"
  <Catalog>
    <col0>      txt = <br><applet code=\Test1.class\ width=\600\ height=\600\><br>APPLET  CRLF;</col0>
  </Catalog>
 
"      txt += "<br><div>applet</div><applet code=\"Test1.class\" width=\"600\" height=\"600\"></applet><br>APPLET" + CRLF"
  <Catalog>
    <col0>      txt = <br><div>applet</div><applet code=\Test1.class\ width=\600\ height=\600\></applet><br>APPLET  CRLF</col0>
  </Catalog>
 
"        + "<br><div>object</div> <object codetype=\"application/java\" classid=\"java:Test1.class\"" + CRLF"
  <Catalog>
    <col0>         <br><div>object</div> <object codetype=\application/java\ classid=\java:Test1.class\  CRLF</col0>
  </Catalog>
 
"        + " width=\"1000\" height=\"600\" 600=\"Test1.class\"></object><br>OBJECT" + CRLF;"
  <Catalog>
    <col0>          width=\1000\ height=\600\ 600=\Test1.class\></object><br>OBJECT  CRLF;</col0>
  </Catalog>
 
"      txt += "<br>END<br>" + CRLF;"
  <Catalog>
    <col0>      txt = <br>END<br>  CRLF;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return txt;"
  <Catalog>
    <col0>    return txt;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void uwp2Chart() {"
  <Catalog>
    <col0>  private void uwp2Chart() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    double sp = GlobalMethods.fromHex(jtf4UWP.getText().substring(0, 1));//S"
  <Catalog>
    <col0>    double sp = GlobalMethods.fromHex(jtf4UWP.getText().substring(0, 1));//S</col0>
  </Catalog>
 
"    switch (jtf4UWP.getText().substring(0, 1)) {"
  <Catalog>
    <col0>    switch (jtf4UWP.getText().substring(0, 1)) {</col0>
  </Catalog>
 
"      case "A": {"
  <Catalog>
    <col0>      case A: {</col0>
  </Catalog>
 
"        sp = 15;"
  <Catalog>
    <col0>        sp = 15;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "B": {"
  <Catalog>
    <col0>      case B: {</col0>
  </Catalog>
 
"        sp = 13;"
  <Catalog>
    <col0>        sp = 13;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "C": {"
  <Catalog>
    <col0>      case C: {</col0>
  </Catalog>
 
"        sp = 11;"
  <Catalog>
    <col0>        sp = 11;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "D": {"
  <Catalog>
    <col0>      case D: {</col0>
  </Catalog>
 
"        sp = 9;"
  <Catalog>
    <col0>        sp = 9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "E": {"
  <Catalog>
    <col0>      case E: {</col0>
  </Catalog>
 
"        sp = 7;"
  <Catalog>
    <col0>        sp = 7;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "X": {"
  <Catalog>
    <col0>      case X: {</col0>
  </Catalog>
 
"        sp = 0;"
  <Catalog>
    <col0>        sp = 0;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "F": {"
  <Catalog>
    <col0>      case F: {</col0>
  </Catalog>
 
"        sp = 4;"
  <Catalog>
    <col0>        sp = 4;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "G": {"
  <Catalog>
    <col0>      case G: {</col0>
  </Catalog>
 
"        sp = 3;"
  <Catalog>
    <col0>        sp = 3;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "H": {"
  <Catalog>
    <col0>      case H: {</col0>
  </Catalog>
 
"        sp = 2;"
  <Catalog>
    <col0>        sp = 2;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Y": {"
  <Catalog>
    <col0>      case Y: {</col0>
  </Catalog>
 
"        sp = 1;"
  <Catalog>
    <col0>        sp = 1;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    double si = GlobalMethods.fromHex(jtf4UWP.getText().substring(1, 2));//S"
  <Catalog>
    <col0>    double si = GlobalMethods.fromHex(jtf4UWP.getText().substring(1, 2));//S</col0>
  </Catalog>
 
"    double at = GlobalMethods.fromHex(jtf4UWP.getText().substring(2, 3));//A"
  <Catalog>
    <col0>    double at = GlobalMethods.fromHex(jtf4UWP.getText().substring(2, 3));//A</col0>
  </Catalog>
 
"    double hy = GlobalMethods.fromHex(jtf4UWP.getText().substring(3, 4));//H"
  <Catalog>
    <col0>    double hy = GlobalMethods.fromHex(jtf4UWP.getText().substring(3, 4));//H</col0>
  </Catalog>
 
"    double po = GlobalMethods.fromHex(jtf4UWP.getText().substring(4, 5));//P"
  <Catalog>
    <col0>    double po = GlobalMethods.fromHex(jtf4UWP.getText().substring(4, 5));//P</col0>
  </Catalog>
 
"    double go = GlobalMethods.fromHex(jtf4UWP.getText().substring(5, 6));//G"
  <Catalog>
    <col0>    double go = GlobalMethods.fromHex(jtf4UWP.getText().substring(5, 6));//G</col0>
  </Catalog>
 
"    double la = GlobalMethods.fromHex(jtf4UWP.getText().substring(6, 7));//L"
  <Catalog>
    <col0>    double la = GlobalMethods.fromHex(jtf4UWP.getText().substring(6, 7));//L</col0>
  </Catalog>
 
"    double tl = GlobalMethods.fromHex(jtf4UWP.getText().substring(8, 9));//T"
  <Catalog>
    <col0>    double tl = GlobalMethods.fromHex(jtf4UWP.getText().substring(8, 9));//T</col0>
  </Catalog>
 
"    double[] values = {sp, si, at, hy, po, go, la, tl};"
  <Catalog>
    <col0>    double[] values = {sp, si, at, hy, po, go, la, tl};</col0>
  </Catalog>
 
"    String[] names = {"SP=" + jtf4UWP.getText().substring(0, 1),"
  <Catalog>
    <col0>    String[] names = {SP=  jtf4UWP.getText().substring(0, 1),</col0>
  </Catalog>
 
"      "Size=" + (int) si, "Atmo=" + (int) at, "Hydro=" + (int) hy,"
  <Catalog>
    <col0>      Size=  (int) si, Atmo=  (int) at, Hydro=  (int) hy,</col0>
  </Catalog>
 
"      "Pop=" + (int) po, "Gov=" + (int) go, "Law" + (int) la,"
  <Catalog>
    <col0>      Pop=  (int) po, Gov=  (int) go, Law  (int) la,</col0>
  </Catalog>
 
"      "Tech=" + (int) tl};"
  <Catalog>
    <col0>      Tech=  (int) tl};</col0>
  </Catalog>
 
"    String title = jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    String title = jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    int tmax = 15;"
  <Catalog>
    <col0>    int tmax = 15;</col0>
  </Catalog>
 
"    new MyChart(values, names, title, tmax);"
  <Catalog>
    <col0>    new MyChart(values, names, title, tmax);</col0>
  </Catalog>
 
"//    panel4Pic = MyChart.jp;"
  <Catalog>
    <col0>//    panel4Pic = MyChart.jp;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void updateChart() {"
  <Catalog>
    <col0>  private void updateChart() {</col0>
  </Catalog>
 
"    startuwp = this.jLabel4.getText().indexOf("-") + 2;"
  <Catalog>
    <col0>    startuwp = this.jLabel4.getText().indexOf(-)  2;</col0>
  </Catalog>
 
"    end = this.jLabel4.getText().length();"
  <Catalog>
    <col0>    end = this.jLabel4.getText().length();</col0>
  </Catalog>
 
"    jtf4UWP.setText(jLabel4.getText().substring(startuwp, end).trim());"
  <Catalog>
    <col0>    jtf4UWP.setText(jLabel4.getText().substring(startuwp, end).trim());</col0>
  </Catalog>
 
"    jtf4UWPActionPerformed(ae);"
  <Catalog>
    <col0>    jtf4UWPActionPerformed(ae);</col0>
  </Catalog>
 
"    jtf4UWPMouseClicked(me);"
  <Catalog>
    <col0>    jtf4UWPMouseClicked(me);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveUWPPic() {"
  <Catalog>
    <col0>  private void saveUWPPic() {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      uwp2Chart();"
  <Catalog>
    <col0>      uwp2Chart();</col0>
  </Catalog>
 
"      updateChart();"
  <Catalog>
    <col0>      updateChart();</col0>
  </Catalog>
 
"      int x = MyChart.jp.getLocationOnScreen().x;"
  <Catalog>
    <col0>      int x = MyChart.jp.getLocationOnScreen().x;</col0>
  </Catalog>
 
"      int y = MyChart.jp.getLocationOnScreen().y;"
  <Catalog>
    <col0>      int y = MyChart.jp.getLocationOnScreen().y;</col0>
  </Catalog>
 
"      int w = MyChart.jp.getWidth();"
  <Catalog>
    <col0>      int w = MyChart.jp.getWidth();</col0>
  </Catalog>
 
"      int h = MyChart.jp.getHeight();"
  <Catalog>
    <col0>      int h = MyChart.jp.getHeight();</col0>
  </Catalog>
 
"      File f = new File(Panel4T5Locator.getSysPath().trim() + FS + jcb4Sys"
  <Catalog>
    <col0>      File f = new File(Panel4T5Locator.getSysPath().trim()  FS  jcb4Sys</col0>
  </Catalog>
 
"        .getSelectedItem().toString().trim() + FS + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>        .getSelectedItem().toString().trim()  FS  jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"        .toString().substring(0, 4) + "-UWP.gif");"
  <Catalog>
    <col0>        .toString().substring(0, 4)  -UWP.gif);</col0>
  </Catalog>
 
"      BufferedImage bi = new BufferedImage(w, h, TYPE_INT_RGB);"
  <Catalog>
    <col0>      BufferedImage bi = new BufferedImage(w, h, TYPE_INT_RGB);</col0>
  </Catalog>
 
"      Graphics2D g = (Graphics2D) MyChart.jp.getGraphics();"
  <Catalog>
    <col0>      Graphics2D g = (Graphics2D) MyChart.jp.getGraphics();</col0>
  </Catalog>
 
"      Robot r = null;"
  <Catalog>
    <col0>      Robot r = null;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        r = new Robot();"
  <Catalog>
    <col0>        r = new Robot();</col0>
  </Catalog>
 
"      } catch (AWTException ex) {"
  <Catalog>
    <col0>      } catch (AWTException ex) {</col0>
  </Catalog>
 
"        System.out.println("6345" + " = " + ex);"
  <Catalog>
    <col0>        System.out.println(6345   =   ex);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      MyChart.jf.setVisible(true);"
  <Catalog>
    <col0>      MyChart.jf.setVisible(true);</col0>
  </Catalog>
 
"      MyChart.component.setVisible(true);"
  <Catalog>
    <col0>      MyChart.component.setVisible(true);</col0>
  </Catalog>
 
"      bi = r.createScreenCapture(new Rectangle(x, y, w, h));"
  <Catalog>
    <col0>      bi = r.createScreenCapture(new Rectangle(x, y, w, h));</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>        ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"      } catch (IOException ex1) {"
  <Catalog>
    <col0>      } catch (IOException ex1) {</col0>
  </Catalog>
 
"        System.out.println("6352" + " = " + ex1);"
  <Catalog>
    <col0>        System.out.println(6352   =   ex1);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("7592" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(7592   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void upp2Chart() {"
  <Catalog>
    <col0>  private void upp2Chart() {</col0>
  </Catalog>
 
"    double st = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring("
  <Catalog>
    <col0>    double st = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring(</col0>
  </Catalog>
 
"      0, 1));//S"
  <Catalog>
    <col0>      0, 1));//S</col0>
  </Catalog>
 
"    double dx = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring("
  <Catalog>
    <col0>    double dx = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring(</col0>
  </Catalog>
 
"      1, 2));//D"
  <Catalog>
    <col0>      1, 2));//D</col0>
  </Catalog>
 
"    double en = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring("
  <Catalog>
    <col0>    double en = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring(</col0>
  </Catalog>
 
"      2, 3));//E"
  <Catalog>
    <col0>      2, 3));//E</col0>
  </Catalog>
 
"    double in = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring("
  <Catalog>
    <col0>    double in = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring(</col0>
  </Catalog>
 
"      3, 4));//I"
  <Catalog>
    <col0>      3, 4));//I</col0>
  </Catalog>
 
"    double ed = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring("
  <Catalog>
    <col0>    double ed = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring(</col0>
  </Catalog>
 
"      4, 5));//E"
  <Catalog>
    <col0>      4, 5));//E</col0>
  </Catalog>
 
"    double so = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring("
  <Catalog>
    <col0>    double so = GlobalMethods.fromHex(jtf4UPP.getText().toUpperCase().substring(</col0>
  </Catalog>
 
"      5, 6));//S"
  <Catalog>
    <col0>      5, 6));//S</col0>
  </Catalog>
 
"    double[] values = {st, dx, en, in, ed, so};"
  <Catalog>
    <col0>    double[] values = {st, dx, en, in, ed, so};</col0>
  </Catalog>
 
"    int tmax = 15;"
  <Catalog>
    <col0>    int tmax = 15;</col0>
  </Catalog>
 
"    for (int j = 0; j < 6; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < 6; j) {</col0>
  </Catalog>
 
"      if (values[j] > tmax) {"
  <Catalog>
    <col0>      if (values[j] > tmax) {</col0>
  </Catalog>
 
"        tmax = (int) values[j];"
  <Catalog>
    <col0>        tmax = (int) values[j];</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String[] names = {"
  <Catalog>
    <col0>    String[] names = {</col0>
  </Catalog>
 
"      jtf4UPP.getText().substring(0, 1).toUpperCase(),"
  <Catalog>
    <col0>      jtf4UPP.getText().substring(0, 1).toUpperCase(),</col0>
  </Catalog>
 
"      jtf4UPP.getText().substring(1, 2).toUpperCase(),"
  <Catalog>
    <col0>      jtf4UPP.getText().substring(1, 2).toUpperCase(),</col0>
  </Catalog>
 
"      jtf4UPP.getText().substring(2, 3).toUpperCase(),"
  <Catalog>
    <col0>      jtf4UPP.getText().substring(2, 3).toUpperCase(),</col0>
  </Catalog>
 
"      jtf4UPP.getText().substring(3, 4).toUpperCase(),"
  <Catalog>
    <col0>      jtf4UPP.getText().substring(3, 4).toUpperCase(),</col0>
  </Catalog>
 
"      jtf4UPP.getText().substring(4, 5).toUpperCase(),"
  <Catalog>
    <col0>      jtf4UPP.getText().substring(4, 5).toUpperCase(),</col0>
  </Catalog>
 
"      jtf4UPP.getText().substring(5, 6).toUpperCase()"
  <Catalog>
    <col0>      jtf4UPP.getText().substring(5, 6).toUpperCase()</col0>
  </Catalog>
 
"    };"
  <Catalog>
    <col0>    };</col0>
  </Catalog>
 
"    new MyChart(values, names, "UPP", tmax);"
  <Catalog>
    <col0>    new MyChart(values, names, UPP, tmax);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void waitASec() {"
  <Catalog>
    <col0>  private void waitASec() {</col0>
  </Catalog>
 
"    LocalTime now = LocalTime.now();"
  <Catalog>
    <col0>    LocalTime now = LocalTime.now();</col0>
  </Catalog>
 
"    LocalTime then = now;"
  <Catalog>
    <col0>    LocalTime then = now;</col0>
  </Catalog>
 
"    do {"
  <Catalog>
    <col0>    do {</col0>
  </Catalog>
 
"      then = LocalTime.now();"
  <Catalog>
    <col0>      then = LocalTime.now();</col0>
  </Catalog>
 
"      System.out.println("" + now.getSecond() + " = " + then.getSecond());"
  <Catalog>
    <col0>      System.out.println(  now.getSecond()   =   then.getSecond());</col0>
  </Catalog>
 
"    } while (then.getSecond() == now.getSecond());"
  <Catalog>
    <col0>    } while (then.getSecond() == now.getSecond());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void t5Check() {"
  <Catalog>
    <col0>  private void t5Check() {</col0>
  </Catalog>
 
"    String[] dirs = new String[]{"T5", "_Sec"};"
  <Catalog>
    <col0>    String[] dirs = new String[]{T5, _Sec};</col0>
  </Catalog>
 
"    File dir = new File(T5);"
  <Catalog>
    <col0>    File dir = new File(T5);</col0>
  </Catalog>
 
"    if (!dir.exists()) {"
  <Catalog>
    <col0>    if (!dir.exists()) {</col0>
  </Catalog>
 
"      dir.mkdir();"
  <Catalog>
    <col0>      dir.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    dir = new File(T5 + FS + "_SEC");"
  <Catalog>
    <col0>    dir = new File(T5  FS  _SEC);</col0>
  </Catalog>
 
"    if (!dir.exists()) {"
  <Catalog>
    <col0>    if (!dir.exists()) {</col0>
  </Catalog>
 
"      dir.mkdir();"
  <Catalog>
    <col0>      dir.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    dir = new File(dir + FS + "GIF");"
  <Catalog>
    <col0>    dir = new File(dir  FS  GIF);</col0>
  </Catalog>
 
"    if (!dir.exists()) {"
  <Catalog>
    <col0>    if (!dir.exists()) {</col0>
  </Catalog>
 
"      dir.mkdir();"
  <Catalog>
    <col0>      dir.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void graphChange() {"
  <Catalog>
    <col0>  private void graphChange() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String[] n = {"St-", "Di-", "At-", "Hy-", "Po-", "Go-", "LL-", "TL-"};"
  <Catalog>
    <col0>    String[] n = {St-, Di-, At-, Hy-, Po-, Go-, LL-, TL-};</col0>
  </Catalog>
 
"    String line = dest;"
  <Catalog>
    <col0>    String line = dest;</col0>
  </Catalog>
 
"    String[] strings = line.split(" ");"
  <Catalog>
    <col0>    String[] strings = line.split( );</col0>
  </Catalog>
 
"    String uwp = "";"
  <Catalog>
    <col0>    String uwp = ;</col0>
  </Catalog>
 
"    double[] v = null;"
  <Catalog>
    <col0>    double[] v = null;</col0>
  </Catalog>
 
"    for (int j = 0; j < strings.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < strings.length; j) {</col0>
  </Catalog>
 
"      if (strings[j].length() == 9) {"
  <Catalog>
    <col0>      if (strings[j].length() == 9) {</col0>
  </Catalog>
 
"        uwp = strings[j];"
  <Catalog>
    <col0>        uwp = strings[j];</col0>
  </Catalog>
 
"        v = calcValues(uwp);"
  <Catalog>
    <col0>        v = calcValues(uwp);</col0>
  </Catalog>
 
"        n[0] = "SP-" + uwp.substring(0, 1);"
  <Catalog>
    <col0>        n[0] = SP-  uwp.substring(0, 1);</col0>
  </Catalog>
 
"        for (int k = 1; k < v.length; k++) {"
  <Catalog>
    <col0>        for (int k = 1; k < v.length; k) {</col0>
  </Catalog>
 
"          n[k] += (int) v[k];"
  <Catalog>
    <col0>          n[k] = (int) v[k];</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int m = 15;"
  <Catalog>
    <col0>    int m = 15;</col0>
  </Catalog>
 
"    if (line.length() == 4) {"
  <Catalog>
    <col0>    if (line.length() == 4) {</col0>
  </Catalog>
 
"      t = "EMPTY SPACE";"
  <Catalog>
    <col0>      t = EMPTY SPACE;</col0>
  </Catalog>
 
"      v = new double[]{0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01};"
  <Catalog>
    <col0>      v = new double[]{0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01};</col0>
  </Catalog>
 
"      n = new String[]{"", "", "", "", "", "", "", ""};"
  <Catalog>
    <col0>      n = new String[]{, , , , , , , };</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      t = line.substring(5, 25).trim();"
  <Catalog>
    <col0>      t = line.substring(5, 25).trim();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    Component comp = new applets.ChartComponent(v, n, t, m);"
  <Catalog>
    <col0>    Component comp = new applets.ChartComponent(v, n, t, m);</col0>
  </Catalog>
 
"    panel4Pic.removeAll();"
  <Catalog>
    <col0>    panel4Pic.removeAll();</col0>
  </Catalog>
 
"    panel4Pic.add(comp);"
  <Catalog>
    <col0>    panel4Pic.add(comp);</col0>
  </Catalog>
 
"    panel4Pic.revalidate();"
  <Catalog>
    <col0>    panel4Pic.revalidate();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private double[] calcValues(String uwp) {"
  <Catalog>
    <col0>  private double[] calcValues(String uwp) {</col0>
  </Catalog>
 
"    double sp = GlobalMethods.fromHex(uwp.substring(0, 1));//S"
  <Catalog>
    <col0>    double sp = GlobalMethods.fromHex(uwp.substring(0, 1));//S</col0>
  </Catalog>
 
"    switch (uwp.substring(0, 1)) {"
  <Catalog>
    <col0>    switch (uwp.substring(0, 1)) {</col0>
  </Catalog>
 
"      case "A": {"
  <Catalog>
    <col0>      case A: {</col0>
  </Catalog>
 
"        sp = 15;"
  <Catalog>
    <col0>        sp = 15;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "B": {"
  <Catalog>
    <col0>      case B: {</col0>
  </Catalog>
 
"        sp = 13;"
  <Catalog>
    <col0>        sp = 13;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "C": {"
  <Catalog>
    <col0>      case C: {</col0>
  </Catalog>
 
"        sp = 11;"
  <Catalog>
    <col0>        sp = 11;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "D": {"
  <Catalog>
    <col0>      case D: {</col0>
  </Catalog>
 
"        sp = 9;"
  <Catalog>
    <col0>        sp = 9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "E": {"
  <Catalog>
    <col0>      case E: {</col0>
  </Catalog>
 
"        sp = 7;"
  <Catalog>
    <col0>        sp = 7;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "X": {"
  <Catalog>
    <col0>      case X: {</col0>
  </Catalog>
 
"        sp = 0;"
  <Catalog>
    <col0>        sp = 0;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "F": {"
  <Catalog>
    <col0>      case F: {</col0>
  </Catalog>
 
"        sp = 4;"
  <Catalog>
    <col0>        sp = 4;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "G": {"
  <Catalog>
    <col0>      case G: {</col0>
  </Catalog>
 
"        sp = 3;"
  <Catalog>
    <col0>        sp = 3;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "H": {"
  <Catalog>
    <col0>      case H: {</col0>
  </Catalog>
 
"        sp = 2;"
  <Catalog>
    <col0>        sp = 2;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Y": {"
  <Catalog>
    <col0>      case Y: {</col0>
  </Catalog>
 
"        sp = 1;"
  <Catalog>
    <col0>        sp = 1;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    double si = GlobalMethods.fromHex(uwp.substring(1, 2));//S"
  <Catalog>
    <col0>    double si = GlobalMethods.fromHex(uwp.substring(1, 2));//S</col0>
  </Catalog>
 
"    double at = GlobalMethods.fromHex(uwp.substring(2, 3));//A"
  <Catalog>
    <col0>    double at = GlobalMethods.fromHex(uwp.substring(2, 3));//A</col0>
  </Catalog>
 
"    double hy = GlobalMethods.fromHex(uwp.substring(3, 4));//H"
  <Catalog>
    <col0>    double hy = GlobalMethods.fromHex(uwp.substring(3, 4));//H</col0>
  </Catalog>
 
"    double po = GlobalMethods.fromHex(uwp.substring(4, 5));//P"
  <Catalog>
    <col0>    double po = GlobalMethods.fromHex(uwp.substring(4, 5));//P</col0>
  </Catalog>
 
"    double go = GlobalMethods.fromHex(uwp.substring(5, 6));//G"
  <Catalog>
    <col0>    double go = GlobalMethods.fromHex(uwp.substring(5, 6));//G</col0>
  </Catalog>
 
"    double la = GlobalMethods.fromHex(uwp.substring(6, 7));//L"
  <Catalog>
    <col0>    double la = GlobalMethods.fromHex(uwp.substring(6, 7));//L</col0>
  </Catalog>
 
"    double tl = GlobalMethods.fromHex(uwp.substring(8, 9));//T"
  <Catalog>
    <col0>    double tl = GlobalMethods.fromHex(uwp.substring(8, 9));//T</col0>
  </Catalog>
 
"    double[] values = {sp, si, at, hy, po, go, la, tl};"
  <Catalog>
    <col0>    double[] values = {sp, si, at, hy, po, go, la, tl};</col0>
  </Catalog>
 
"    return (values);"
  <Catalog>
    <col0>    return (values);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveAll() {"
  <Catalog>
    <col0>  private void saveAll() {</col0>
  </Catalog>
 
"    saveTexts();"
  <Catalog>
    <col0>    saveTexts();</col0>
  </Catalog>
 
"    splitText();"
  <Catalog>
    <col0>    splitText();</col0>
  </Catalog>
 
"    loadTexts();"
  <Catalog>
    <col0>    loadTexts();</col0>
  </Catalog>
 
"    saveHTML();"
  <Catalog>
    <col0>    saveHTML();</col0>
  </Catalog>
 
"    saveSystemPic();//Big System"
  <Catalog>
    <col0>    saveSystemPic();//Big System</col0>
  </Catalog>
 
"    saveSecPic();//Sector"
  <Catalog>
    <col0>    saveSecPic();//Sector</col0>
  </Catalog>
 
"    saveSubPic();//SubSector"
  <Catalog>
    <col0>    saveSubPic();//SubSector</col0>
  </Catalog>
 
"    saveUWPPic();//UWP"
  <Catalog>
    <col0>    saveUWPPic();//UWP</col0>
  </Catalog>
 
"    int old = jcb4Sys.getSelectedIndex();"
  <Catalog>
    <col0>    int old = jcb4Sys.getSelectedIndex();</col0>
  </Catalog>
 
"    jButton1MousePressed(me);"
  <Catalog>
    <col0>    jButton1MousePressed(me);</col0>
  </Catalog>
 
"    jButton1ActionPerformed(ae);"
  <Catalog>
    <col0>    jButton1ActionPerformed(ae);</col0>
  </Catalog>
 
"    jcb4Sys.setSelectedIndex(old);"
  <Catalog>
    <col0>    jcb4Sys.setSelectedIndex(old);</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.saveCounters();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.saveCounters();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String sortOutSubName() {"
  <Catalog>
    <col0>  private String sortOutSubName() {</col0>
  </Catalog>
 
"    String file = _SEC + FS + sC.getText() + ".sec";"
  <Catalog>
    <col0>    String file = _SEC  FS  sC.getText()  .sec;</col0>
  </Catalog>
 
"    String[] lines = GlobalMethods.getLinesFromFile(new File(file));"
  <Catalog>
    <col0>    String[] lines = GlobalMethods.getLinesFromFile(new File(file));</col0>
  </Catalog>
 
"    for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].toLowerCase().contains("subsector " + sB.getText()"
  <Catalog>
    <col0>      if (lines[j].toLowerCase().contains(subsector   sB.getText()</col0>
  </Catalog>
 
"        .toLowerCase().substring(0, 1))) {"
  <Catalog>
    <col0>        .toLowerCase().substring(0, 1))) {</col0>
  </Catalog>
 
"        return (lines[j].substring(12).replace(":", ""));"
  <Catalog>
    <col0>        return (lines[j].substring(12).replace(:, ));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return "";"
  <Catalog>
    <col0>    return ;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String viewAllSecBit(int i) {"
  <Catalog>
    <col0>  private String viewAllSecBit(int i) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String ret = "";"
  <Catalog>
    <col0>    String ret = ;</col0>
  </Catalog>
 
"    if (sC.getText() != "sc") {"
  <Catalog>
    <col0>    if (sC.getText() != sc) {</col0>
  </Catalog>
 
"      String oSec = T5 + FS + "_SEC" + FS + sC.getText() + ".sec";"
  <Catalog>
    <col0>      String oSec = T5  FS  _SEC  FS  sC.getText()  .sec;</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>        System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"        System.out.println("Other" + " = " + oSec);"
  <Catalog>
    <col0>        System.out.println(Other   =   oSec);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      File f = new File(oSec);"
  <Catalog>
    <col0>      File f = new File(oSec);</col0>
  </Catalog>
 
"      int s = 0;"
  <Catalog>
    <col0>      int s = 0;</col0>
  </Catalog>
 
"      int e = 0;"
  <Catalog>
    <col0>      int e = 0;</col0>
  </Catalog>
 
"      if (f.exists()) {"
  <Catalog>
    <col0>      if (f.exists()) {</col0>
  </Catalog>
 
"        String oLine = "";"
  <Catalog>
    <col0>        String oLine = ;</col0>
  </Catalog>
 
"        String[] oLines = GlobalMethods.getLinesFromFile(f);"
  <Catalog>
    <col0>        String[] oLines = GlobalMethods.getLinesFromFile(f);</col0>
  </Catalog>
 
"        int w1 = 0;"
  <Catalog>
    <col0>        int w1 = 0;</col0>
  </Catalog>
 
"        for (int j = 0; j < oLines.length; j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < oLines.length; j) {</col0>
  </Catalog>
 
"          if (oLines[j].startsWith("---- ")) {"
  <Catalog>
    <col0>          if (oLines[j].startsWith(---- )) {</col0>
  </Catalog>
 
"            w1 = j;"
  <Catalog>
    <col0>            w1 = j;</col0>
  </Catalog>
 
"            oLine = oLines[j];"
  <Catalog>
    <col0>            oLine = oLines[j];</col0>
  </Catalog>
 
"            //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>            //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"            if (DEBUG) {"
  <Catalog>
    <col0>            if (DEBUG) {</col0>
  </Catalog>
 
"              System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>              System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"              System.out.println("" + " = " + getSpaceInfo(oLine));"
  <Catalog>
    <col0>              System.out.println(   =   getSpaceInfo(oLine));</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            //</editor-fold>"
  <Catalog>
    <col0>            //</editor-fold></col0>
  </Catalog>
 
"            int start = 0;"
  <Catalog>
    <col0>            int start = 0;</col0>
  </Catalog>
 
"            int end = 0;"
  <Catalog>
    <col0>            int end = 0;</col0>
  </Catalog>
 
"            for (int l = 0; l < len.length; l++) {"
  <Catalog>
    <col0>            for (int l = 0; l < len.length; l) {</col0>
  </Catalog>
 
"              //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>              //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"              if (DEBUG) {"
  <Catalog>
    <col0>              if (DEBUG) {</col0>
  </Catalog>
 
"                System.out.println(" Start" + " = " + start);"
  <Catalog>
    <col0>                System.out.println( Start   =   start);</col0>
  </Catalog>
 
"                System.out.println(" len[" + l + "]" + " = " + len[l]);"
  <Catalog>
    <col0>                System.out.println( len[  l  ]   =   len[l]);</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              //</editor-fold>"
  <Catalog>
    <col0>              //</editor-fold></col0>
  </Catalog>
 
"              end = start + len[l];"
  <Catalog>
    <col0>              end = start  len[l];</col0>
  </Catalog>
 
"              System.out.println(" End" + " = " + end + CRLF);"
  <Catalog>
    <col0>              System.out.println( End   =   end  CRLF);</col0>
  </Catalog>
 
"              if (l == i) {"
  <Catalog>
    <col0>              if (l == i) {</col0>
  </Catalog>
 
"                s = start;"
  <Catalog>
    <col0>                s = start;</col0>
  </Catalog>
 
"                e = end;"
  <Catalog>
    <col0>                e = end;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              start = end + 1;"
  <Catalog>
    <col0>              start = end  1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        ret = oSec + CRLF;"
  <Catalog>
    <col0>        ret = oSec  CRLF;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return ret;"
  <Catalog>
    <col0>    return ret;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String viewAllSubBit(int i) {"
  <Catalog>
    <col0>  private String viewAllSubBit(int i) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String search = sB.getText();"
  <Catalog>
    <col0>    String search = sB.getText();</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEB">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEB></col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>      System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"      System.out.println("searchFor(" + search + ")");"
  <Catalog>
    <col0>      System.out.println(searchFor(  search  ));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    return search;"
  <Catalog>
    <col0>    return search;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String viewAllSysBit(int i) {"
  <Catalog>
    <col0>  private String viewAllSysBit(int i) {</col0>
  </Catalog>
 
"    return "" + i;"
  <Catalog>
    <col0>    return   i;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String sortOutSysName() {"
  <Catalog>
    <col0>  private String sortOutSysName() {</col0>
  </Catalog>
 
"    String file = _SEC + FS + sC.getText() + ".sec";"
  <Catalog>
    <col0>    String file = _SEC  FS  sC.getText()  .sec;</col0>
  </Catalog>
 
"    String[] lines = GlobalMethods.getLinesFromFile(new File(file));"
  <Catalog>
    <col0>    String[] lines = GlobalMethods.getLinesFromFile(new File(file));</col0>
  </Catalog>
 
"    for (int j = 0; j < lines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < lines.length; j) {</col0>
  </Catalog>
 
"      if (lines[j].toLowerCase().startsWith(sS.getText().toLowerCase()"
  <Catalog>
    <col0>      if (lines[j].toLowerCase().startsWith(sS.getText().toLowerCase()</col0>
  </Catalog>
 
"        .substring(0, 4))) {"
  <Catalog>
    <col0>        .substring(0, 4))) {</col0>
  </Catalog>
 
"        return (lines[j]);"
  <Catalog>
    <col0>        return (lines[j]);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return "";"
  <Catalog>
    <col0>    return ;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void Orbits() {"
  <Catalog>
    <col0>  private void Orbits() {</col0>
  </Catalog>
 
"    int numstars = jcb4Star.getItemCount() - 1;"
  <Catalog>
    <col0>    int numstars = jcb4Star.getItemCount() - 1;</col0>
  </Catalog>
 
"    String[][] orbi = new String[numstars][20];"
  <Catalog>
    <col0>    String[][] orbi = new String[numstars][20];</col0>
  </Catalog>
 
"    int[] minorbit = new int[numstars];"
  <Catalog>
    <col0>    int[] minorbit = new int[numstars];</col0>
  </Catalog>
 
"    int[] maxorbit = new int[numstars];"
  <Catalog>
    <col0>    int[] maxorbit = new int[numstars];</col0>
  </Catalog>
 
"    int[] orbitspaces = new int[numstars];"
  <Catalog>
    <col0>    int[] orbitspaces = new int[numstars];</col0>
  </Catalog>
 
"    JTextArea jta = jta4Orb;"
  <Catalog>
    <col0>    JTextArea jta = jta4Orb;</col0>
  </Catalog>
 
"    jta.append("numstars" + " = " + numstars + CRLF);"
  <Catalog>
    <col0>    jta.append(numstars   =   numstars  CRLF);</col0>
  </Catalog>
 
"    for (int j = min; j < orbits; j++) {"
  <Catalog>
    <col0>    for (int j = min; j < orbits; j) {</col0>
  </Catalog>
 
"      System.out.println("" + j + " = " + orbit[j]);"
  <Catalog>
    <col0>      System.out.println(  j   =   orbit[j]);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    System.out.println("");"
  <Catalog>
    <col0>    System.out.println();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void launch() {"
  <Catalog>
    <col0>  private void launch() {</col0>
  </Catalog>
 
"    JPanel jp = new Panel4T5Launch();"
  <Catalog>
    <col0>    JPanel jp = new Panel4T5Launch();</col0>
  </Catalog>
 
"    JFrame jf = new Frame4(jp);"
  <Catalog>
    <col0>    JFrame jf = new Frame4(jp);</col0>
  </Catalog>
 
"    jf.setBounds(1200, 0, 600, 600);"
  <Catalog>
    <col0>    jf.setBounds(1200, 0, 600, 600);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //<editor-fold defaultstate="collapsed" desc="createOrbitDetail">"
  <Catalog>
    <col0>  //<editor-fold defaultstate=collapsed desc=createOrbitDetail></col0>
  </Catalog>
 
"  private void createOrbitDetail() {"
  <Catalog>
    <col0>  private void createOrbitDetail() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="setup">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=setup></col0>
  </Catalog>
 
"    jta4Orb.setText("");"
  <Catalog>
    <col0>    jta4Orb.setText();</col0>
  </Catalog>
 
"    for (int j = 0; j < orbit.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < orbit.length; j) {</col0>
  </Catalog>
 
"      orbit[j] = "";"
  <Catalog>
    <col0>      orbit[j] = ;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    stars = jcb4Star.getItemCount();"
  <Catalog>
    <col0>    stars = jcb4Star.getItemCount();</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      g = Integer.parseInt(data[10].substring(8, 9));"
  <Catalog>
    <col0>      g = Integer.parseInt(data[10].substring(8, 9));</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      g = 0;"
  <Catalog>
    <col0>      g = 0;</col0>
  </Catalog>
 
"      System.out.println("5146" + " createOrbitDetail() = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(5146   createOrbitDetail() =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      b = Integer.parseInt(data[10].substring(7, 8));"
  <Catalog>
    <col0>      b = Integer.parseInt(data[10].substring(7, 8));</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      b = 0;"
  <Catalog>
    <col0>      b = 0;</col0>
  </Catalog>
 
"      System.out.println("5153" + " createOrbitDetail() = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(5153   createOrbitDetail() =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      orbitnum = Integer.parseInt(data[11].substring(4));"
  <Catalog>
    <col0>      orbitnum = Integer.parseInt(data[11].substring(4));</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      orbitnum = 0;"
  <Catalog>
    <col0>      orbitnum = 0;</col0>
  </Catalog>
 
"      System.out.println("5159" + " createOrbitDetail() = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(5159   createOrbitDetail() =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //upto 4 systems with seperate orbital lists"
  <Catalog>
    <col0>    //upto 4 systems with seperate orbital lists</col0>
  </Catalog>
 
"    orbitnum = -1;"
  <Catalog>
    <col0>    orbitnum = -1;</col0>
  </Catalog>
 
"    eo1 = -1;"
  <Catalog>
    <col0>    eo1 = -1;</col0>
  </Catalog>
 
"    eo2 = -1;"
  <Catalog>
    <col0>    eo2 = -1;</col0>
  </Catalog>
 
"    eo3 = -1;"
  <Catalog>
    <col0>    eo3 = -1;</col0>
  </Catalog>
 
"    stars = jcb4Star.getItemCount();"
  <Catalog>
    <col0>    stars = jcb4Star.getItemCount();</col0>
  </Catalog>
 
"    Stars = new String[stars];"
  <Catalog>
    <col0>    Stars = new String[stars];</col0>
  </Catalog>
 
"    for (int j = 0; j < stars; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < stars; j) {</col0>
  </Catalog>
 
"      Stars[j] = new String(jcb4Star.getItemAt(j).toString());"
  <Catalog>
    <col0>      Stars[j] = new String(jcb4Star.getItemAt(j).toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    Primary = jcb4Star.getItemAt(0).toString();"
  <Catalog>
    <col0>    Primary = jcb4Star.getItemAt(0).toString();</col0>
  </Catalog>
 
"    jta4Orb.setText("Primary = " + Primary + CRLF);// + getStarData(Stars[0]));"
  <Catalog>
    <col0>    jta4Orb.setText(Primary =   Primary  CRLF);//  getStarData(Stars[0]));</col0>
  </Catalog>
 
"    orbit = new String[orbits];"
  <Catalog>
    <col0>    orbit = new String[orbits];</col0>
  </Catalog>
 
"    for (int j = 0; j < orbit.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < orbit.length; j) {</col0>
  </Catalog>
 
"      orbit[j] = "";"
  <Catalog>
    <col0>      orbit[j] = ;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int rnd1;"
  <Catalog>
    <col0>    int rnd1;</col0>
  </Catalog>
 
"    addStarDetail(-1, jcb4Star.getItemAt(0).toString());"
  <Catalog>
    <col0>    addStarDetail(-1, jcb4Star.getItemAt(0).toString());</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    systems = 1;"
  <Catalog>
    <col0>    systems = 1;</col0>
  </Catalog>
 
"    orbitnum = -1;"
  <Catalog>
    <col0>    orbitnum = -1;</col0>
  </Catalog>
 
"    eo1 = 0;"
  <Catalog>
    <col0>    eo1 = 0;</col0>
  </Catalog>
 
"    eo2 = 0;"
  <Catalog>
    <col0>    eo2 = 0;</col0>
  </Catalog>
 
"    eo3 = 0;"
  <Catalog>
    <col0>    eo3 = 0;</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="if (stars == 1)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=if (stars == 1)></col0>
  </Catalog>
 
"    if (stars == 1) {//no extras required"
  <Catalog>
    <col0>    if (stars == 1) {//no extras required</col0>
  </Catalog>
 
"      es0 = "Primary";"
  <Catalog>
    <col0>      es0 = Primary;</col0>
  </Catalog>
 
"      orbitnum = -1;"
  <Catalog>
    <col0>      orbitnum = -1;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="if (stars == 2)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=if (stars == 2)></col0>
  </Catalog>
 
"    if (stars == 2) {//pick random for 2nd}"
  <Catalog>
    <col0>    if (stars == 2) {//pick random for 2nd}</col0>
  </Catalog>
 
"      rnd1 = (int) (Math.random() * 3) + 1;"
  <Catalog>
    <col0>      rnd1 = (int) (Math.random() * 3)  1;</col0>
  </Catalog>
 
"      switch (rnd1) {"
  <Catalog>
    <col0>      switch (rnd1) {</col0>
  </Catalog>
 
"        case 1: {"
  <Catalog>
    <col0>        case 1: {</col0>
  </Catalog>
 
"          es1 = "Inner";"
  <Catalog>
    <col0>          es1 = Inner;</col0>
  </Catalog>
 
"          eo1 = GlobalMethods.roll1d() - 1;"
  <Catalog>
    <col0>          eo1 = GlobalMethods.roll1d() - 1;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 2: {"
  <Catalog>
    <col0>        case 2: {</col0>
  </Catalog>
 
"          es1 = "Outer";"
  <Catalog>
    <col0>          es1 = Outer;</col0>
  </Catalog>
 
"          eo1 = GlobalMethods.roll1d() + 5;"
  <Catalog>
    <col0>          eo1 = GlobalMethods.roll1d()  5;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 3: {"
  <Catalog>
    <col0>        case 3: {</col0>
  </Catalog>
 
"          es1 = "Remote";"
  <Catalog>
    <col0>          es1 = Remote;</col0>
  </Catalog>
 
"          eo1 = GlobalMethods.roll1d() + 11;"
  <Catalog>
    <col0>          eo1 = GlobalMethods.roll1d()  11;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      es2 = null;"
  <Catalog>
    <col0>      es2 = null;</col0>
  </Catalog>
 
"      eo2 = 0;"
  <Catalog>
    <col0>      eo2 = 0;</col0>
  </Catalog>
 
"      es3 = null;"
  <Catalog>
    <col0>      es3 = null;</col0>
  </Catalog>
 
"      eo3 = 0;"
  <Catalog>
    <col0>      eo3 = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="if (stars == 3)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=if (stars == 3)></col0>
  </Catalog>
 
"    if (stars == 3) {//pick MT, include others}"
  <Catalog>
    <col0>    if (stars == 3) {//pick MT, include others}</col0>
  </Catalog>
 
"      rnd1 = (int) (Math.random() * 3) + 1;"
  <Catalog>
    <col0>      rnd1 = (int) (Math.random() * 3)  1;</col0>
  </Catalog>
 
"      switch (rnd1) {"
  <Catalog>
    <col0>      switch (rnd1) {</col0>
  </Catalog>
 
"        case 1: {//Inner system clear"
  <Catalog>
    <col0>        case 1: {//Inner system clear</col0>
  </Catalog>
 
"          es1 = "Outer";"
  <Catalog>
    <col0>          es1 = Outer;</col0>
  </Catalog>
 
"          eo1 = GlobalMethods.roll1d() + 5;"
  <Catalog>
    <col0>          eo1 = GlobalMethods.roll1d()  5;</col0>
  </Catalog>
 
"          es2 = "Remote";"
  <Catalog>
    <col0>          es2 = Remote;</col0>
  </Catalog>
 
"          eo2 = GlobalMethods.roll1d() + 11;"
  <Catalog>
    <col0>          eo2 = GlobalMethods.roll1d()  11;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 2: {//Outer system clear"
  <Catalog>
    <col0>        case 2: {//Outer system clear</col0>
  </Catalog>
 
"          es1 = "Inner";"
  <Catalog>
    <col0>          es1 = Inner;</col0>
  </Catalog>
 
"          eo1 = GlobalMethods.roll1d() - 1;"
  <Catalog>
    <col0>          eo1 = GlobalMethods.roll1d() - 1;</col0>
  </Catalog>
 
"          es2 = "Remote";"
  <Catalog>
    <col0>          es2 = Remote;</col0>
  </Catalog>
 
"          eo2 = GlobalMethods.roll1d() + 11;"
  <Catalog>
    <col0>          eo2 = GlobalMethods.roll1d()  11;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 3: {//Remote system clear"
  <Catalog>
    <col0>        case 3: {//Remote system clear</col0>
  </Catalog>
 
"          es1 = "Inner";"
  <Catalog>
    <col0>          es1 = Inner;</col0>
  </Catalog>
 
"          eo1 = GlobalMethods.roll1d() - 1;"
  <Catalog>
    <col0>          eo1 = GlobalMethods.roll1d() - 1;</col0>
  </Catalog>
 
"          es2 = "Outer";"
  <Catalog>
    <col0>          es2 = Outer;</col0>
  </Catalog>
 
"          eo2 = GlobalMethods.roll1d() + 5;"
  <Catalog>
    <col0>          eo2 = GlobalMethods.roll1d()  5;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      es3 = null;"
  <Catalog>
    <col0>      es3 = null;</col0>
  </Catalog>
 
"      eo3 = 0;"
  <Catalog>
    <col0>      eo3 = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="if (stars == 4)">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=if (stars == 4)></col0>
  </Catalog>
 
"    if (stars == 4) {//pick all, include all}"
  <Catalog>
    <col0>    if (stars == 4) {//pick all, include all}</col0>
  </Catalog>
 
"      es1 = "Inner";"
  <Catalog>
    <col0>      es1 = Inner;</col0>
  </Catalog>
 
"      eo1 = GlobalMethods.roll1d() - 1;"
  <Catalog>
    <col0>      eo1 = GlobalMethods.roll1d() - 1;</col0>
  </Catalog>
 
"      es2 = "Outer";"
  <Catalog>
    <col0>      es2 = Outer;</col0>
  </Catalog>
 
"      eo2 = GlobalMethods.roll1d() + 5;"
  <Catalog>
    <col0>      eo2 = GlobalMethods.roll1d()  5;</col0>
  </Catalog>
 
"      es3 = "Remote";"
  <Catalog>
    <col0>      es3 = Remote;</col0>
  </Catalog>
 
"      eo3 = GlobalMethods.roll1d() + 11;"
  <Catalog>
    <col0>      eo3 = GlobalMethods.roll1d()  11;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="ADD STARS">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=ADD STARS></col0>
  </Catalog>
 
"    //PLACE STARS IN ORBITS"
  <Catalog>
    <col0>    //PLACE STARS IN ORBITS</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      eo1 = nearestTo(eo1);"
  <Catalog>
    <col0>      eo1 = nearestTo(eo1);</col0>
  </Catalog>
 
"      orbit[eo1] += "STAR " + jcb4Star.getItemAt(1).toString();// + getStarData(Stars[1]);"
  <Catalog>
    <col0>      orbit[eo1] = STAR   jcb4Star.getItemAt(1).toString();//  getStarData(Stars[1]);</col0>
  </Catalog>
 
"      if (orbit[eo1].contains("BD")) {"
  <Catalog>
    <col0>      if (orbit[eo1].contains(BD)) {</col0>
  </Catalog>
 
"        orbit[eo1] += "\tBrown Dwarf\tS=24";"
  <Catalog>
    <col0>        orbit[eo1] = \tBrown Dwarf\tS=24;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.println("o2" + " = " + eo1);"
  <Catalog>
    <col0>        System.out.println(o2   =   eo1);</col0>
  </Catalog>
 
"        System.out.println("" + eo1 + " = " + orbit[eo1]);"
  <Catalog>
    <col0>        System.out.println(  eo1   =   orbit[eo1]);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      eo2 = nearestTo(eo2);"
  <Catalog>
    <col0>      eo2 = nearestTo(eo2);</col0>
  </Catalog>
 
"      orbit[eo2] += "STAR " + jcb4Star.getItemAt(2).toString();// + getStarData(Stars[2]);"
  <Catalog>
    <col0>      orbit[eo2] = STAR   jcb4Star.getItemAt(2).toString();//  getStarData(Stars[2]);</col0>
  </Catalog>
 
"      if (orbit[eo2].contains("BD")) {"
  <Catalog>
    <col0>      if (orbit[eo2].contains(BD)) {</col0>
  </Catalog>
 
"        orbit[eo2] += "\tBrown Dwarf\tS=24";"
  <Catalog>
    <col0>        orbit[eo2] = \tBrown Dwarf\tS=24;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.println("o3" + " = " + eo2);"
  <Catalog>
    <col0>        System.out.println(o3   =   eo2);</col0>
  </Catalog>
 
"        System.out.println("" + eo2 + " = " + orbit[eo2]);"
  <Catalog>
    <col0>        System.out.println(  eo2   =   orbit[eo2]);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      eo3 = nearestTo(eo3);"
  <Catalog>
    <col0>      eo3 = nearestTo(eo3);</col0>
  </Catalog>
 
"      orbit[eo3] += "STAR " + jcb4Star.getItemAt(3).toString();// + getStarData(Stars[3]);"
  <Catalog>
    <col0>      orbit[eo3] = STAR   jcb4Star.getItemAt(3).toString();//  getStarData(Stars[3]);</col0>
  </Catalog>
 
"      if (orbit[eo3].contains("BD")) {"
  <Catalog>
    <col0>      if (orbit[eo3].contains(BD)) {</col0>
  </Catalog>
 
"        orbit[eo3] += "\tBrown Dwarf\tS=24";"
  <Catalog>
    <col0>        orbit[eo3] = \tBrown Dwarf\tS=24;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.println("o4" + " = " + eo3);"
  <Catalog>
    <col0>        System.out.println(o4   =   eo3);</col0>
  </Catalog>
 
"        System.out.println("" + eo3 + " = " + orbit[eo3]);"
  <Catalog>
    <col0>        System.out.println(  eo3   =   orbit[eo3]);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //ADD OTHER PARTS OF SYSTEM"
  <Catalog>
    <col0>    //ADD OTHER PARTS OF SYSTEM</col0>
  </Catalog>
 
"    addMainworld();"
  <Catalog>
    <col0>    addMainworld();</col0>
  </Catalog>
 
"    showHab(Stars[0]);"
  <Catalog>
    <col0>    showHab(Stars[0]);</col0>
  </Catalog>
 
"    addGGs();"
  <Catalog>
    <col0>    addGGs();</col0>
  </Catalog>
 
"    addPBs();"
  <Catalog>
    <col0>    addPBs();</col0>
  </Catalog>
 
"    addOthers();"
  <Catalog>
    <col0>    addOthers();</col0>
  </Catalog>
 
"    int starss = 1;"
  <Catalog>
    <col0>    int starss = 1;</col0>
  </Catalog>
 
"    for (int j = min; j < orbits; j++) {"
  <Catalog>
    <col0>    for (int j = min; j < orbits; j) {</col0>
  </Catalog>
 
"      orbit[j] = fixRingMoons(j);//Put alphabetically by orbits range"
  <Catalog>
    <col0>      orbit[j] = fixRingMoons(j);//Put alphabetically by orbits range</col0>
  </Catalog>
 
"      jta4Orb.append(j + " = " + orbit[j] + CRLF);"
  <Catalog>
    <col0>      jta4Orb.append(j   =   orbit[j]  CRLF);</col0>
  </Catalog>
 
"      if (orbit[j].startsWith("STAR")) {"
  <Catalog>
    <col0>      if (orbit[j].startsWith(STAR)) {</col0>
  </Catalog>
 
"        if (!orbit[j].contains("BD")) {"
  <Catalog>
    <col0>        if (!orbit[j].contains(BD)) {</col0>
  </Catalog>
 
"          addStarDetail(j, jcb4Star.getItemAt(starss).toString() + CRLF);"
  <Catalog>
    <col0>          addStarDetail(j, jcb4Star.getItemAt(starss).toString()  CRLF);</col0>
  </Catalog>
 
"          starss += 1;"
  <Catalog>
    <col0>          starss = 1;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          starss += 1;"
  <Catalog>
    <col0>          starss = 1;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int syscount = jcb4Star.getItemCount();"
  <Catalog>
    <col0>    int syscount = jcb4Star.getItemCount();</col0>
  </Catalog>
 
"    for (int j = 0; j < Integer.parseInt("" + jcb4Star.getItemCount()); j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < Integer.parseInt(  jcb4Star.getItemCount()); j) {</col0>
  </Catalog>
 
"      if (jcb4Star.getItemAt(j).toString().contains("BD")) {"
  <Catalog>
    <col0>      if (jcb4Star.getItemAt(j).toString().contains(BD)) {</col0>
  </Catalog>
 
"        syscount -= 1;"
  <Catalog>
    <col0>        syscount -= 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jta4Orb.append("Extra Stars = " + (Stars.length - 1) + CRLF);"
  <Catalog>
    <col0>    jta4Orb.append(Extra Stars =   (Stars.length - 1)  CRLF);</col0>
  </Catalog>
 
"    jta4Orb.append("Unfilled = " + countUnused() + CRLF);"
  <Catalog>
    <col0>    jta4Orb.append(Unfilled =   countUnused()  CRLF);</col0>
  </Catalog>
 
"    jta4Orb.append(getW(null) + CRLF);"
  <Catalog>
    <col0>    jta4Orb.append(getW(null)  CRLF);</col0>
  </Catalog>
 
"    jta4Orb.append("syscount = " + syscount + CRLF);"
  <Catalog>
    <col0>    jta4Orb.append(syscount =   syscount  CRLF);</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      int s = Stars.length - 1;"
  <Catalog>
    <col0>      int s = Stars.length - 1;</col0>
  </Catalog>
 
"      int u = countUnused();"
  <Catalog>
    <col0>      int u = countUnused();</col0>
  </Catalog>
 
"      int w = Integer.parseInt(data[11].substring(4));"
  <Catalog>
    <col0>      int w = Integer.parseInt(data[11].substring(4));</col0>
  </Catalog>
 
"      int sum = s + u + w;"
  <Catalog>
    <col0>      int sum = s  u  w;</col0>
  </Catalog>
 
"      if (sum < orbits) {"
  <Catalog>
    <col0>      if (sum < orbits) {</col0>
  </Catalog>
 
"        //        xcreateOrbitDetail();"
  <Catalog>
    <col0>        //        xcreateOrbitDetail();</col0>
  </Catalog>
 
"        //createOrbitDetail();"
  <Catalog>
    <col0>        //createOrbitDetail();</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"        if (DEBUG) {"
  <Catalog>
    <col0>        if (DEBUG) {</col0>
  </Catalog>
 
"          System.out.print("5332" + " = " + "createOrbitDetail" + CRLF);"
  <Catalog>
    <col0>          System.out.print(5332   =   createOrbitDetail  CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("4573 createOrbitDetail()" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(4573 createOrbitDetail()   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int count = 0;"
  <Catalog>
    <col0>    int count = 0;</col0>
  </Catalog>
 
"    min = Integer.parseInt(getMinOrbit(jcb4Star.getItemAt(0).toString()));"
  <Catalog>
    <col0>    min = Integer.parseInt(getMinOrbit(jcb4Star.getItemAt(0).toString()));</col0>
  </Catalog>
 
"    jta4Orb.append("min" + " = " + min + CRLF);"
  <Catalog>
    <col0>    jta4Orb.append(min   =   min  CRLF);</col0>
  </Catalog>
 
"    for (int j = min; j < orbit.length; j++) {"
  <Catalog>
    <col0>    for (int j = min; j < orbit.length; j) {</col0>
  </Catalog>
 
"      if (!"".equals(orbit[j])) {"
  <Catalog>
    <col0>      if (!.equals(orbit[j])) {</col0>
  </Catalog>
 
"        count += 1;"
  <Catalog>
    <col0>        count = 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jta4Orb.append("count" + " = " + count + CRLF);"
  <Catalog>
    <col0>    jta4Orb.append(count   =   count  CRLF);</col0>
  </Catalog>
 
"//    createSystemPic(jcb4Star.getSelectedItem().toString());"
  <Catalog>
    <col0>//    createSystemPic(jcb4Star.getSelectedItem().toString());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
"//</editor-fold>"
  <Catalog>
    <col0>//</editor-fold></col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private int nearestTo(int orb) {"
  <Catalog>
    <col0>  private int nearestTo(int orb) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    max = getMaxOrbit(0);"
  <Catalog>
    <col0>    max = getMaxOrbit(0);</col0>
  </Catalog>
 
"    int adiff = max;"
  <Catalog>
    <col0>    int adiff = max;</col0>
  </Catalog>
 
"    int bdiff = min;"
  <Catalog>
    <col0>    int bdiff = min;</col0>
  </Catalog>
 
"    int r;"
  <Catalog>
    <col0>    int r;</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    for (int j = min; j < max; j++) {"
  <Catalog>
    <col0>    for (int j = min; j < max; j) {</col0>
  </Catalog>
 
"      if ((j <= orb) && ("".equals(orbit[j]))) {"
  <Catalog>
    <col0>      if ((j <= orb) && (.equals(orbit[j]))) {</col0>
  </Catalog>
 
"        bdiff = orb - j;"
  <Catalog>
    <col0>        bdiff = orb - j;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if ((j >= orb) && ("".equals(orbit[j]))) {"
  <Catalog>
    <col0>      if ((j >= orb) && (.equals(orbit[j]))) {</col0>
  </Catalog>
 
"        adiff = j - orb;"
  <Catalog>
    <col0>        adiff = j - orb;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if ((bdiff <= adiff) & (bdiff >= 0)) {"
  <Catalog>
    <col0>    if ((bdiff <= adiff) & (bdiff >= 0)) {</col0>
  </Catalog>
 
"      r = orb - bdiff;"
  <Catalog>
    <col0>      r = orb - bdiff;</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      r = orb + adiff;"
  <Catalog>
    <col0>      r = orb  adiff;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      System.out.print("orb" + " = " + orb + CRLF);"
  <Catalog>
    <col0>      System.out.print(orb   =   orb  CRLF);</col0>
  </Catalog>
 
"      System.out.println(" bdiff" + " = " + bdiff);"
  <Catalog>
    <col0>      System.out.println( bdiff   =   bdiff);</col0>
  </Catalog>
 
"      System.out.println(" adiff" + " = " + adiff);"
  <Catalog>
    <col0>      System.out.println( adiff   =   adiff);</col0>
  </Catalog>
 
"      System.out.println(" r" + " = " + r);"
  <Catalog>
    <col0>      System.out.println( r   =   r);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    return r;"
  <Catalog>
    <col0>    return r;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addMainworld() {"
  <Catalog>
    <col0>  private void addMainworld() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    rings = 0;"
  <Catalog>
    <col0>    rings = 0;</col0>
  </Catalog>
 
"    if (UWP.substring(1, 2).equals("0")) {"
  <Catalog>
    <col0>    if (UWP.substring(1, 2).equals(0)) {</col0>
  </Catalog>
 
"      mwtype = "Asteroid belt";"
  <Catalog>
    <col0>      mwtype = Asteroid belt;</col0>
  </Catalog>
 
"      HZ = GlobalMethods.getHZ(Stars[0]);"
  <Catalog>
    <col0>      HZ = GlobalMethods.getHZ(Stars[0]);</col0>
  </Catalog>
 
"      int varb = GlobalMethods.roll2d();"
  <Catalog>
    <col0>      int varb = GlobalMethods.roll2d();</col0>
  </Catalog>
 
"      HZVar = GlobalMethods.getStringFromTable("2D", "" + varb, "Belt","
  <Catalog>
    <col0>      HZVar = GlobalMethods.getStringFromTable(2D,   varb, Belt</col0>
  </Catalog>
 
"        Placement);"
  <Catalog>
    <col0>        Placement);</col0>
  </Catalog>
 
"      int hz = Integer.parseInt(HZ);"
  <Catalog>
    <col0>      int hz = Integer.parseInt(HZ);</col0>
  </Catalog>
 
"      int var = Integer.parseInt(HZVar);"
  <Catalog>
    <col0>      int var = Integer.parseInt(HZVar);</col0>
  </Catalog>
 
"      habz = hz + var;"
  <Catalog>
    <col0>      habz = hz  var;</col0>
  </Catalog>
 
"      habz = nearestTo(habz);"
  <Catalog>
    <col0>      habz = nearestTo(habz);</col0>
  </Catalog>
 
"      if (habz < 0) {"
  <Catalog>
    <col0>      if (habz < 0) {</col0>
  </Catalog>
 
"        habz = 0;"
  <Catalog>
    <col0>        habz = 0;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (habz > Integer.parseInt(HZ)) {"
  <Catalog>
    <col0>      if (habz > Integer.parseInt(HZ)) {</col0>
  </Catalog>
 
"        Climate = "Cold";"
  <Catalog>
    <col0>        Climate = Cold;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (habz < Integer.parseInt(HZ)) {"
  <Catalog>
    <col0>      if (habz < Integer.parseInt(HZ)) {</col0>
  </Catalog>
 
"        Climate = "Hot";"
  <Catalog>
    <col0>        Climate = Hot;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (habz == Integer.parseInt(HZ)) {"
  <Catalog>
    <col0>      if (habz == Integer.parseInt(HZ)) {</col0>
  </Catalog>
 
"        Climate = "Temperate";"
  <Catalog>
    <col0>        Climate = Temperate;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      orbit[habz] += "Asteroid Belt\t" + data[1].substring(7) + "\t" + UWP + "\t" + "(" + Climate + ")";"
  <Catalog>
    <col0>      orbit[habz] = Asteroid Belt\t  data[1].substring(7)  \t  UWP  \t  (  Climate  );</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      int worldflux = GlobalMethods.rollFlux();"
  <Catalog>
    <col0>      int worldflux = GlobalMethods.rollFlux();</col0>
  </Catalog>
 
"      int hzvar = GlobalMethods.rollFlux();"
  <Catalog>
    <col0>      int hzvar = GlobalMethods.rollFlux();</col0>
  </Catalog>
 
"      mwtype = GlobalMethods.getStringFromTable("Flux", "" + worldflux, "World","
  <Catalog>
    <col0>      mwtype = GlobalMethods.getStringFromTable(Flux,   worldflux, World</col0>
  </Catalog>
 
"        MainworldType);"
  <Catalog>
    <col0>        MainworldType);</col0>
  </Catalog>
 
"      if (mwtype.contains("Satellite")) {"
  <Catalog>
    <col0>      if (mwtype.contains(Satellite)) {</col0>
  </Catalog>
 
"        if (mwtype.contains("Close")) {"
  <Catalog>
    <col0>        if (mwtype.contains(Close)) {</col0>
  </Catalog>
 
"          string = "Close";"
  <Catalog>
    <col0>          string = Close;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (mwtype.contains("Far")) {"
  <Catalog>
    <col0>        if (mwtype.contains(Far)) {</col0>
  </Catalog>
 
"          string = "Far";"
  <Catalog>
    <col0>          string = Far;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (g > 0) {"
  <Catalog>
    <col0>        if (g > 0) {</col0>
  </Catalog>
 
"          wtype = getGG();"
  <Catalog>
    <col0>          wtype = getGG();</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          wtype = "BigWorld";"
  <Catalog>
    <col0>          wtype = BigWorld;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      worldflux = GlobalMethods.rollFlux();"
  <Catalog>
    <col0>      worldflux = GlobalMethods.rollFlux();</col0>
  </Catalog>
 
"      dist = GlobalMethods.getStringFromTable("Flux", "" + worldflux, string,"
  <Catalog>
    <col0>      dist = GlobalMethods.getStringFromTable(Flux,   worldflux, string,</col0>
  </Catalog>
 
"        MainworldType);"
  <Catalog>
    <col0>        MainworldType);</col0>
  </Catalog>
 
"      HZ = GlobalMethods.getHZ(Stars[0]);"
  <Catalog>
    <col0>      HZ = GlobalMethods.getHZ(Stars[0]);</col0>
  </Catalog>
 
"      HZVar = GlobalMethods.getStringFromTable("Flux", "" + hzvar, "HZ Var","
  <Catalog>
    <col0>      HZVar = GlobalMethods.getStringFromTable(Flux,   hzvar, HZ Var</col0>
  </Catalog>
 
"        MainworldType);"
  <Catalog>
    <col0>        MainworldType);</col0>
  </Catalog>
 
"      int hz = Integer.parseInt(HZ);"
  <Catalog>
    <col0>      int hz = Integer.parseInt(HZ);</col0>
  </Catalog>
 
"      int var = Integer.parseInt(HZVar);"
  <Catalog>
    <col0>      int var = Integer.parseInt(HZVar);</col0>
  </Catalog>
 
"      if (var < 0) {"
  <Catalog>
    <col0>      if (var < 0) {</col0>
  </Catalog>
 
"        Climate = "Hot";"
  <Catalog>
    <col0>        Climate = Hot;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (var > 0) {"
  <Catalog>
    <col0>      if (var > 0) {</col0>
  </Catalog>
 
"        Climate = "Cold";"
  <Catalog>
    <col0>        Climate = Cold;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (var == 0) {"
  <Catalog>
    <col0>      if (var == 0) {</col0>
  </Catalog>
 
"        Climate = "Temperate";"
  <Catalog>
    <col0>        Climate = Temperate;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      habz = (hz + var);"
  <Catalog>
    <col0>      habz = (hz  var);</col0>
  </Catalog>
 
"      if (habz < 0) {"
  <Catalog>
    <col0>      if (habz < 0) {</col0>
  </Catalog>
 
"        habz = 0;"
  <Catalog>
    <col0>        habz = 0;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      orbit[habz] += "Mainworld\t" + data[1].substring(7) + "\t" + UWP + "\t" + "(" + Climate + ")";"
  <Catalog>
    <col0>      orbit[habz] = Mainworld\t  data[1].substring(7)  \t  UWP  \t  (  Climate  );</col0>
  </Catalog>
 
"      if (mwtype.contains("Satellite") | data[1].contains("Regina")) {"
  <Catalog>
    <col0>      if (mwtype.contains(Satellite) | data[1].contains(Regina)) {</col0>
  </Catalog>
 
"        orbit[habz] += CRLF + "\tOrbits " + getGG() + " @ orbit R";"
  <Catalog>
    <col0>        orbit[habz] = CRLF  \tOrbits   getGG()   @ orbit R;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      addMoons(habz);"
  <Catalog>
    <col0>      addMoons(habz);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      System.out.print("orbitm" + " = " + habz + CRLF);"
  <Catalog>
    <col0>      System.out.print(orbitm   =   habz  CRLF);</col0>
  </Catalog>
 
"      System.out.println("Mainwold @ " + habz + " = " + orbit[habz]);"
  <Catalog>
    <col0>      System.out.println(Mainwold @   habz   =   orbit[habz]);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addGGs() {"
  <Catalog>
    <col0>  private void addGGs() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      rings = 0;"
  <Catalog>
    <col0>      rings = 0;</col0>
  </Catalog>
 
"      for (int j = 0; j < g; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < g; j) {</col0>
  </Catalog>
 
"        gg = getGG();"
  <Catalog>
    <col0>        gg = getGG();</col0>
  </Catalog>
 
"        int roll = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        int roll = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        String str;"
  <Catalog>
    <col0>        String str;</col0>
  </Catalog>
 
"        int sgg = 0;"
  <Catalog>
    <col0>        int sgg = 0;</col0>
  </Catalog>
 
"        if (roll < 4) {"
  <Catalog>
    <col0>        if (roll < 4) {</col0>
  </Catalog>
 
"          str = "SGG";"
  <Catalog>
    <col0>          str = SGG;</col0>
  </Catalog>
 
"          sgg += 1;"
  <Catalog>
    <col0>          sgg = 1;</col0>
  </Catalog>
 
"          if (sgg % 2 == 0) {"
  <Catalog>
    <col0>          if (sgg % 2 == 0) {</col0>
  </Catalog>
 
"            str = "IG";"
  <Catalog>
    <col0>            str = IG;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          str = "LGG";"
  <Catalog>
    <col0>          str = LGG;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        roll = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        roll = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable("2D","
  <Catalog>
    <col0>        orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable(2D</col0>
  </Catalog>
 
"          "" + roll, str, Placement));"
  <Catalog>
    <col0>            roll, str, Placement));</col0>
  </Catalog>
 
"        orbitnum += habz;"
  <Catalog>
    <col0>        orbitnum = habz;</col0>
  </Catalog>
 
"        orbitnum = nearestTo(orbitnum);"
  <Catalog>
    <col0>        orbitnum = nearestTo(orbitnum);</col0>
  </Catalog>
 
"        orbit[orbitnum] += gg;"
  <Catalog>
    <col0>        orbit[orbitnum] = gg;</col0>
  </Catalog>
 
"        addMoons(orbitnum);"
  <Catalog>
    <col0>        addMoons(orbitnum);</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"        if (DEBUG) {"
  <Catalog>
    <col0>        if (DEBUG) {</col0>
  </Catalog>
 
"          System.out.print("orbitg" + " = " + orbitnum + CRLF);"
  <Catalog>
    <col0>          System.out.print(orbitg   =   orbitnum  CRLF);</col0>
  </Catalog>
 
"          System.out.println("GG @ " + orbitnum + " = " + orbit[orbitnum]);"
  <Catalog>
    <col0>          System.out.println(GG @   orbitnum   =   orbit[orbitnum]);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (NumberFormatException e) {"
  <Catalog>
    <col0>    } catch (NumberFormatException e) {</col0>
  </Catalog>
 
"      System.out.println("8241" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(8241   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addPBs() {"
  <Catalog>
    <col0>  private void addPBs() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      for (int j = 0; j < b; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < b; j) {</col0>
  </Catalog>
 
"        int roll = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        int roll = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable("2D","
  <Catalog>
    <col0>        orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable(2D</col0>
  </Catalog>
 
"          "" + roll, "Belt", Placement));"
  <Catalog>
    <col0>            roll, Belt, Placement));</col0>
  </Catalog>
 
"        orbitnum = nearestTo(orbitnum);"
  <Catalog>
    <col0>        orbitnum = nearestTo(orbitnum);</col0>
  </Catalog>
 
"        orbit[orbitnum] += "Planetoid belt" + getOtherStats("Planetoid", "world");"
  <Catalog>
    <col0>        orbit[orbitnum] = Planetoid belt  getOtherStats(Planetoid, world);</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"        if (DEBUG) {"
  <Catalog>
    <col0>        if (DEBUG) {</col0>
  </Catalog>
 
"          System.out.print("orbitb" + " = " + orbitnum + CRLF);"
  <Catalog>
    <col0>          System.out.print(orbitb   =   orbitnum  CRLF);</col0>
  </Catalog>
 
"          System.out.println("PB @ " + orbitnum + " = " + orbit[orbitnum]);"
  <Catalog>
    <col0>          System.out.println(PB @   orbitnum   =   orbit[orbitnum]);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("4797" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(4797   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addOthers() {"
  <Catalog>
    <col0>  private void addOthers() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    rings = 0;"
  <Catalog>
    <col0>    rings = 0;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      int pb = 0;"
  <Catalog>
    <col0>      int pb = 0;</col0>
  </Catalog>
 
"      int gg = 0;"
  <Catalog>
    <col0>      int gg = 0;</col0>
  </Catalog>
 
"      int Objects = Integer.parseInt(data[11].substring(4)) - (1 + b + g);"
  <Catalog>
    <col0>      int Objects = Integer.parseInt(data[11].substring(4)) - (1  b  g);</col0>
  </Catalog>
 
"      for (int j = 0; j < Objects; j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < Objects; j) {</col0>
  </Catalog>
 
"        int roll = GlobalMethods.getRoll(2);"
  <Catalog>
    <col0>        int roll = GlobalMethods.getRoll(2);</col0>
  </Catalog>
 
"        orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable("2D","
  <Catalog>
    <col0>        orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable(2D</col0>
  </Catalog>
 
"          "" + roll, "World1", Placement));"
  <Catalog>
    <col0>            roll, World1, Placement));</col0>
  </Catalog>
 
"        if (j == Objects - 1) {"
  <Catalog>
    <col0>        if (j == Objects - 1) {</col0>
  </Catalog>
 
"          orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable("2D","
  <Catalog>
    <col0>          orbitnum = Integer.parseInt(GlobalMethods.getStringFromTable(2D</col0>
  </Catalog>
 
"            "" + roll, "World2", Placement));"
  <Catalog>
    <col0>              roll, World2, Placement));</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        orbitnum = nearestTo(orbitnum);"
  <Catalog>
    <col0>        orbitnum = nearestTo(orbitnum);</col0>
  </Catalog>
 
"        if (orbitnum < orbits & orbitnum >= 0) {"
  <Catalog>
    <col0>        if (orbitnum < orbits & orbitnum >= 0) {</col0>
  </Catalog>
 
"          String s = getOtherWorld(Integer.parseInt(HZ));"
  <Catalog>
    <col0>          String s = getOtherWorld(Integer.parseInt(HZ));</col0>
  </Catalog>
 
"          orbit[orbitnum] += "World  (" + s + ")" + getOtherStats(s, "world");"
  <Catalog>
    <col0>          orbit[orbitnum] = World  (  s  )  getOtherStats(s, world);</col0>
  </Catalog>
 
"          addMoons(orbitnum);"
  <Catalog>
    <col0>          addMoons(orbitnum);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"        if (DEBUG) {"
  <Catalog>
    <col0>        if (DEBUG) {</col0>
  </Catalog>
 
"          System.out.print("orbito" + " = " + orbitnum + CRLF);"
  <Catalog>
    <col0>          System.out.print(orbito   =   orbitnum  CRLF);</col0>
  </Catalog>
 
"          System.out.println("World @ " + orbitnum + " = " + orbit[orbitnum]);"
  <Catalog>
    <col0>          System.out.println(World @   orbitnum   =   orbit[orbitnum]);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("4823" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(4823   =   e.toString());</col0>
  </Catalog>
 
"      return;"
  <Catalog>
    <col0>      return;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void addStarDetail(int orb, String star) {"
  <Catalog>
    <col0>  private void addStarDetail(int orb, String star) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (!star.contains("BD")) {"
  <Catalog>
    <col0>    if (!star.contains(BD)) {</col0>
  </Catalog>
 
"      String type = null;"
  <Catalog>
    <col0>      String type = null;</col0>
  </Catalog>
 
"      int dec = 0;"
  <Catalog>
    <col0>      int dec = 0;</col0>
  </Catalog>
 
"      String size = null;"
  <Catalog>
    <col0>      String size = null;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        type = star.substring(0, 1);"
  <Catalog>
    <col0>        type = star.substring(0, 1);</col0>
  </Catalog>
 
"        if (type.equals("BD")) {"
  <Catalog>
    <col0>        if (type.equals(BD)) {</col0>
  </Catalog>
 
"          return;"
  <Catalog>
    <col0>          return;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        dec = Integer.parseInt(star.substring(1, 2));"
  <Catalog>
    <col0>        dec = Integer.parseInt(star.substring(1, 2));</col0>
  </Catalog>
 
"        size = star.substring(3);"
  <Catalog>
    <col0>        size = star.substring(3);</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        type = "M";"
  <Catalog>
    <col0>        type = M;</col0>
  </Catalog>
 
"        dec = 0;"
  <Catalog>
    <col0>        dec = 0;</col0>
  </Catalog>
 
"        size = "D";"
  <Catalog>
    <col0>        size = D;</col0>
  </Catalog>
 
"        System.out.println("4326" + " = " + e.toString());"
  <Catalog>
    <col0>        System.out.println(4326   =   e.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      int num = orb - 3;"
  <Catalog>
    <col0>      int num = orb - 3;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"        if (DEBUG) {"
  <Catalog>
    <col0>        if (DEBUG) {</col0>
  </Catalog>
 
"          System.out.print("
  <Catalog>
    <col0>          System.out.print(</col0>
  </Catalog>
 
"            "getStarData(star)" + " = " + "" + getStarData(star) + CRLF);"
  <Catalog>
    <col0>            getStarData(star)   =     getStarData(star)  CRLF);</col0>
  </Catalog>
 
"          System.out.println("getD10Limit(star)" + " = " + getD10Limit(star));"
  <Catalog>
    <col0>          System.out.println(getD10Limit(star)   =   getD10Limit(star));</col0>
  </Catalog>
 
"          System.out.println("getD100Limit(star)" + " = " + getD100Limit(star));"
  <Catalog>
    <col0>          System.out.println(getD100Limit(star)   =   getD100Limit(star));</col0>
  </Catalog>
 
"          System.out"
  <Catalog>
    <col0>          System.out</col0>
  </Catalog>
 
"            .println("getD1000Limit(star)" + " = " + getD1000Limit(star));"
  <Catalog>
    <col0>            .println(getD1000Limit(star)   =   getD1000Limit(star));</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        jta4Orb.append(getStarData(star));"
  <Catalog>
    <col0>        jta4Orb.append(getStarData(star));</col0>
  </Catalog>
 
"        int d10Limit = getD10Limit(star);"
  <Catalog>
    <col0>        int d10Limit = getD10Limit(star);</col0>
  </Catalog>
 
"        int d100Limit = getD100Limit(star);"
  <Catalog>
    <col0>        int d100Limit = getD100Limit(star);</col0>
  </Catalog>
 
"        int d1000Limit = getD1000Limit(star);"
  <Catalog>
    <col0>        int d1000Limit = getD1000Limit(star);</col0>
  </Catalog>
 
"        jta4Orb.append("\td10Limit" + " = " + d10Limit + CRLF);"
  <Catalog>
    <col0>        jta4Orb.append(\td10Limit   =   d10Limit  CRLF);</col0>
  </Catalog>
 
"        jta4Orb.append("\td100Limit" + " = " + d100Limit + CRLF);"
  <Catalog>
    <col0>        jta4Orb.append(\td100Limit   =   d100Limit  CRLF);</col0>
  </Catalog>
 
"        jta4Orb.append("\td1000Limit" + " = " + d1000Limit + CRLF);"
  <Catalog>
    <col0>        jta4Orb.append(\td1000Limit   =   d1000Limit  CRLF);</col0>
  </Catalog>
 
"        if (num < 0 & orb != -1) {"
  <Catalog>
    <col0>        if (num < 0 & orb != -1) {</col0>
  </Catalog>
 
"          jta4Orb.append("\tNO Orbits" + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\tNO Orbits  CRLF);</col0>
  </Catalog>
 
"        } else if (orb == -1) {"
  <Catalog>
    <col0>        } else if (orb == -1) {</col0>
  </Catalog>
 
"          jta4Orb.append("\tMin Orbit = " + getMinOrbit(star) + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\tMin Orbit =   getMinOrbit(star)  CRLF);</col0>
  </Catalog>
 
"          jta4Orb.append("\tHZ =  " + GlobalMethods.getHZ(star) + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\tHZ =    GlobalMethods.getHZ(star)  CRLF);</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          jta4Orb.append("\tMin Orbit = " + getMinOrbit(star) + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\tMin Orbit =   getMinOrbit(star)  CRLF);</col0>
  </Catalog>
 
"          jta4Orb.append("\tMax Orbit =  " + num + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\tMax Orbit =    num  CRLF);</col0>
  </Catalog>
 
"          jta4Orb.append("\tHZ =  " + GlobalMethods.getHZ(star) + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\tHZ =    GlobalMethods.getHZ(star)  CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        System.out.println("8451" + " = " + e.toString());"
  <Catalog>
    <col0>        System.out.println(8451   =   e.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (orb != 99 | orb <= 0) {"
  <Catalog>
    <col0>      if (orb != 99 | orb <= 0) {</col0>
  </Catalog>
 
"        for (int j = 0; j <= num; j++) {"
  <Catalog>
    <col0>        for (int j = 0; j <= num; j) {</col0>
  </Catalog>
 
"          jta4Orb.append("\t" + orb + "-" + j + " = " + CRLF);"
  <Catalog>
    <col0>          jta4Orb.append(\t  orb  -  j   =   CRLF);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void setStarData(String st) {"
  <Catalog>
    <col0>  private static void setStarData(String st) {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      if (st.length() != 2) {"
  <Catalog>
    <col0>      if (st.length() != 2) {</col0>
  </Catalog>
 
"        t = st.substring(0, 1);"
  <Catalog>
    <col0>        t = st.substring(0, 1);</col0>
  </Catalog>
 
"        d = Integer.parseInt(st.substring(1, 2));"
  <Catalog>
    <col0>        d = Integer.parseInt(st.substring(1, 2));</col0>
  </Catalog>
 
"        s = st.substring(2).trim();"
  <Catalog>
    <col0>        s = st.substring(2).trim();</col0>
  </Catalog>
 
"        if (t == "M" & d == 9) {"
  <Catalog>
    <col0>        if (t == M & d == 9) {</col0>
  </Catalog>
 
"          d = 9;"
  <Catalog>
    <col0>          d = 9;</col0>
  </Catalog>
 
"        } else if (d < 5) {"
  <Catalog>
    <col0>        } else if (d < 5) {</col0>
  </Catalog>
 
"          d = 0;"
  <Catalog>
    <col0>          d = 0;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          d = 5;"
  <Catalog>
    <col0>          d = 5;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("5314" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(5314   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showHab(String star) {"
  <Catalog>
    <col0>  private void showHab(String star) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    String result = "";"
  <Catalog>
    <col0>    String result = ;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println(GlobalMethods.getHZ(star));"
  <Catalog>
    <col0>      System.out.println(GlobalMethods.getHZ(star));</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveDestTreeMap() {"
  <Catalog>
    <col0>  private void saveDestTreeMap() {</col0>
  </Catalog>
 
"    TreeMap<String, String> tm = new TreeMap<>();"
  <Catalog>
    <col0>    TreeMap<String, String> tm = new TreeMap<>();</col0>
  </Catalog>
 
"    String name = "";"
  <Catalog>
    <col0>    String name = ;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      name = getSysName(new File(_SEC + FS + sC.getText() + ".sec"), sS"
  <Catalog>
    <col0>      name = getSysName(new File(_SEC  FS  sC.getText()  .sec), sS</col0>
  </Catalog>
 
"        .getText().substring(0, 4));"
  <Catalog>
    <col0>        .getText().substring(0, 4));</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      name = "Empty Space".toUpperCase();"
  <Catalog>
    <col0>      name = Empty Space.toUpperCase();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    tm.put("Sec", sC.getText().toString());"
  <Catalog>
    <col0>    tm.put(Sec, sC.getText().toString());</col0>
  </Catalog>
 
"    tm.put("Sub", sB.getText().toString());"
  <Catalog>
    <col0>    tm.put(Sub, sB.getText().toString());</col0>
  </Catalog>
 
"    tm.put("Sys", name);"
  <Catalog>
    <col0>    tm.put(Sys, name);</col0>
  </Catalog>
 
"    tm.put("LineInfo", sS.getText().toString().trim());"
  <Catalog>
    <col0>    tm.put(LineInfo, sS.getText().toString().trim());</col0>
  </Catalog>
 
"    tm.put("Jump", "" + js4Dist.getValue());"
  <Catalog>
    <col0>    tm.put(Jump,   js4Dist.getValue());</col0>
  </Catalog>
 
"    File f = new File(getSecPath());"
  <Catalog>
    <col0>    File f = new File(getSecPath());</col0>
  </Catalog>
 
"    if (!f.exists()) {"
  <Catalog>
    <col0>    if (!f.exists()) {</col0>
  </Catalog>
 
"      f.mkdir();"
  <Catalog>
    <col0>      f.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    f = new File(getSubPath());"
  <Catalog>
    <col0>    f = new File(getSubPath());</col0>
  </Catalog>
 
"    if (!f.exists()) {"
  <Catalog>
    <col0>    if (!f.exists()) {</col0>
  </Catalog>
 
"      f.mkdir();"
  <Catalog>
    <col0>      f.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      f = new File(getSysPath());"
  <Catalog>
    <col0>      f = new File(getSysPath());</col0>
  </Catalog>
 
"      if (!f.exists()) {"
  <Catalog>
    <col0>      if (!f.exists()) {</col0>
  </Catalog>
 
"        f.mkdir();"
  <Catalog>
    <col0>        f.mkdir();</col0>
  </Catalog>
 
"        System.out.println("8449" + " = " + f.toString());"
  <Catalog>
    <col0>        System.out.println(8449   =   f.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      f = new File(getSysPath() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>      f = new File(getSysPath()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .trim());"
  <Catalog>
    <col0>        .trim());</col0>
  </Catalog>
 
"      if (!f.exists()) {"
  <Catalog>
    <col0>      if (!f.exists()) {</col0>
  </Catalog>
 
"        f.mkdir();"
  <Catalog>
    <col0>        f.mkdir();</col0>
  </Catalog>
 
"        System.out.println("8454" + " = " + f.toString());"
  <Catalog>
    <col0>        System.out.println(8454   =   f.toString());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(jp,e.toString());"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(jp,e.toString());</col0>
  </Catalog>
 
"      System.out.println("8458" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(8458   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String hex = dest.substring(0, 4);"
  <Catalog>
    <col0>    String hex = dest.substring(0, 4);</col0>
  </Catalog>
 
"//    string = getSysPath() + FS + "Jump " + js4Dist.getModel().getValue() + " TO " + hex + " " + title + ".treemap";"
  <Catalog>
    <col0>//    string = getSysPath()  FS  Jump   js4Dist.getModel().getValue()   TO   hex     title  .treemap;</col0>
  </Catalog>
 
"    String text = "";"
  <Catalog>
    <col0>    String text = ;</col0>
  </Catalog>
 
"    text += "Sector=" + tm.get("Sec") + CRLF;"
  <Catalog>
    <col0>    text = Sector=  tm.get(Sec)  CRLF;</col0>
  </Catalog>
 
"    text += "Subsector=" + tm.get("Sub") + CRLF;"
  <Catalog>
    <col0>    text = Subsector=  tm.get(Sub)  CRLF;</col0>
  </Catalog>
 
"    text += "System=" + tm.get("Sys") + CRLF;"
  <Catalog>
    <col0>    text = System=  tm.get(Sys)  CRLF;</col0>
  </Catalog>
 
"    text += "LineInfo=" + tm.get("LineInfo") + CRLF;"
  <Catalog>
    <col0>    text = LineInfo=  tm.get(LineInfo)  CRLF;</col0>
  </Catalog>
 
"    text += "Jump=" + tm.get("Jump") + CRLF;"
  <Catalog>
    <col0>    text = Jump=  tm.get(Jump)  CRLF;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      GlobalMethods.saveTextFile(getSysPath() + FS + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>      GlobalMethods.saveTextFile(getSysPath()  FS  jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"        .toString().trim(), "Jump " + js4Dist.getModel().getValue()"
  <Catalog>
    <col0>        .toString().trim(), Jump   js4Dist.getModel().getValue()</col0>
  </Catalog>
 
"        + " TO " + hex + " " + name, ".treemap", text);"
  <Catalog>
    <col0>          TO   hex     name, .treemap, text);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(jp,e.toString());"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(jp,e.toString());</col0>
  </Catalog>
 
"      System.out.println("8474" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(8474   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void saveHomeTreeMap() {"
  <Catalog>
    <col0>  private void saveHomeTreeMap() {</col0>
  </Catalog>
 
"    TreeMap<String, String> tm = new TreeMap<>();"
  <Catalog>
    <col0>    TreeMap<String, String> tm = new TreeMap<>();</col0>
  </Catalog>
 
"    tm.put("Sec", jcb4Sec.getSelectedItem().toString());"
  <Catalog>
    <col0>    tm.put(Sec, jcb4Sec.getSelectedItem().toString());</col0>
  </Catalog>
 
"    tm.put("Sub", jcb4Sub.getSelectedItem().toString());"
  <Catalog>
    <col0>    tm.put(Sub, jcb4Sub.getSelectedItem().toString());</col0>
  </Catalog>
 
"    tm.put("Sys", jcb4Sys.getSelectedItem().toString().trim());"
  <Catalog>
    <col0>    tm.put(Sys, jcb4Sys.getSelectedItem().toString().trim());</col0>
  </Catalog>
 
"    tm.put("Lang", jcb4Lang.getSelectedItem().toString());"
  <Catalog>
    <col0>    tm.put(Lang, jcb4Lang.getSelectedItem().toString());</col0>
  </Catalog>
 
"    tm.put("UWP", UWP);"
  <Catalog>
    <col0>    tm.put(UWP, UWP);</col0>
  </Catalog>
 
"    tm.put("SDBs", sdbs1.getText());"
  <Catalog>
    <col0>    tm.put(SDBs, sdbs1.getText());</col0>
  </Catalog>
 
"    tm.put("Rons", squadrons.getText());"
  <Catalog>
    <col0>    tm.put(Rons, squadrons.getText());</col0>
  </Catalog>
 
"    tm.put("Def CF", defbats.getText());"
  <Catalog>
    <col0>    tm.put(Def CF, defbats.getText());</col0>
  </Catalog>
 
"    tm.put("Troop", troopunits.getText());"
  <Catalog>
    <col0>    tm.put(Troop, troopunits.getText());</col0>
  </Catalog>
 
"    tm.put("P", jLabel8.getText());"
  <Catalog>
    <col0>    tm.put(P, jLabel8.getText());</col0>
  </Catalog>
 
"    tm.put("B", jLabel9.getText());"
  <Catalog>
    <col0>    tm.put(B, jLabel9.getText());</col0>
  </Catalog>
 
"    tm.put("G", jLabel10.getText());"
  <Catalog>
    <col0>    tm.put(G, jLabel10.getText());</col0>
  </Catalog>
 
"    tm.put("W", jLabel12.getText());"
  <Catalog>
    <col0>    tm.put(W, jLabel12.getText());</col0>
  </Catalog>
 
"    File f = new File(getSecPath());"
  <Catalog>
    <col0>    File f = new File(getSecPath());</col0>
  </Catalog>
 
"    if (!f.exists()) {"
  <Catalog>
    <col0>    if (!f.exists()) {</col0>
  </Catalog>
 
"      f.mkdir();"
  <Catalog>
    <col0>      f.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    f = new File(getSubPath());"
  <Catalog>
    <col0>    f = new File(getSubPath());</col0>
  </Catalog>
 
"    if (!f.exists()) {"
  <Catalog>
    <col0>    if (!f.exists()) {</col0>
  </Catalog>
 
"      f.mkdir();"
  <Catalog>
    <col0>      f.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    f = new File(getSysPath());"
  <Catalog>
    <col0>    f = new File(getSysPath());</col0>
  </Catalog>
 
"    if (!f.exists()) {"
  <Catalog>
    <col0>    if (!f.exists()) {</col0>
  </Catalog>
 
"      f.mkdir();"
  <Catalog>
    <col0>      f.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    f = new File(getSysPath() + FS + jcb4Sys.getSelectedItem().toString().trim());"
  <Catalog>
    <col0>    f = new File(getSysPath()  FS  jcb4Sys.getSelectedItem().toString().trim());</col0>
  </Catalog>
 
"    if (!f.exists()) {"
  <Catalog>
    <col0>    if (!f.exists()) {</col0>
  </Catalog>
 
"      f.mkdir();"
  <Catalog>
    <col0>      f.mkdir();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    string = getSysPath() + FS + jcb4Sys.getSelectedItem().toString().trim() + FS + jcb4Sys"
  <Catalog>
    <col0>    string = getSysPath()  FS  jcb4Sys.getSelectedItem().toString().trim()  FS  jcb4Sys</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + ".treemap";"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()  .treemap;</col0>
  </Catalog>
 
"    String text = "";"
  <Catalog>
    <col0>    String text = ;</col0>
  </Catalog>
 
"    text += "Sector=" + tm.get("Sec") + CRLF;"
  <Catalog>
    <col0>    text = Sector=  tm.get(Sec)  CRLF;</col0>
  </Catalog>
 
"    text += "Subsector=" + tm.get("Sub") + CRLF;"
  <Catalog>
    <col0>    text = Subsector=  tm.get(Sub)  CRLF;</col0>
  </Catalog>
 
"    text += "System=" + tm.get("Sys") + CRLF;"
  <Catalog>
    <col0>    text = System=  tm.get(Sys)  CRLF;</col0>
  </Catalog>
 
"    text += "Language=" + tm.get("Lang") + CRLF;"
  <Catalog>
    <col0>    text = Language=  tm.get(Lang)  CRLF;</col0>
  </Catalog>
 
"    text += "UWP=" + tm.get("UWP") + CRLF;"
  <Catalog>
    <col0>    text = UWP=  tm.get(UWP)  CRLF;</col0>
  </Catalog>
 
"    text += "SDBs=" + tm.get("SDBs") + CRLF;"
  <Catalog>
    <col0>    text = SDBs=  tm.get(SDBs)  CRLF;</col0>
  </Catalog>
 
"    text += "Rons=" + tm.get("Rons") + CRLF;"
  <Catalog>
    <col0>    text = Rons=  tm.get(Rons)  CRLF;</col0>
  </Catalog>
 
"    text += "Def CF=" + tm.get("Def CF") + CRLF;"
  <Catalog>
    <col0>    text = Def CF=  tm.get(Def CF)  CRLF;</col0>
  </Catalog>
 
"    text += "Troop=" + tm.get("Troop") + CRLF;"
  <Catalog>
    <col0>    text = Troop=  tm.get(Troop)  CRLF;</col0>
  </Catalog>
 
"    text += "P=" + tm.get("P") + CRLF;"
  <Catalog>
    <col0>    text = P=  tm.get(P)  CRLF;</col0>
  </Catalog>
 
"    text += "B=" + tm.get("B") + CRLF;"
  <Catalog>
    <col0>    text = B=  tm.get(B)  CRLF;</col0>
  </Catalog>
 
"    text += "G=" + tm.get("G") + CRLF;"
  <Catalog>
    <col0>    text = G=  tm.get(G)  CRLF;</col0>
  </Catalog>
 
"    text += "W=" + tm.get("W") + CRLF;"
  <Catalog>
    <col0>    text = W=  tm.get(W)  CRLF;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      GlobalMethods.saveTextFile(getSysPath() + FS + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>      GlobalMethods.saveTextFile(getSysPath()  FS  jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"        .toString().trim(), jcb4Sys.getSelectedItem().toString().trim(),"
  <Catalog>
    <col0>        .toString().trim(), jcb4Sys.getSelectedItem().toString().trim(),</col0>
  </Catalog>
 
"        ".treemap", text);"
  <Catalog>
    <col0>        .treemap, text);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(jp,e.toString());"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(jp,e.toString());</col0>
  </Catalog>
 
"      System.out.println("8528" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(8528   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  /**"
  <Catalog>
    <col0>  /**</col0>
  </Catalog>
 
"   @param i index of star"
  <Catalog>
    <col0>   @param i index of star</col0>
  </Catalog>
 
"   @return maximum orbit for star"
  <Catalog>
    <col0>   @return maximum orbit for star</col0>
  </Catalog>
 
"   */"
  <Catalog>
    <col0>   */</col0>
  </Catalog>
 
"  public static int getMaxOrbit(int i) {"
  <Catalog>
    <col0>  public static int getMaxOrbit(int i) {</col0>
  </Catalog>
 
"    switch (i) {"
  <Catalog>
    <col0>    switch (i) {</col0>
  </Catalog>
 
"      case 0: {"
  <Catalog>
    <col0>      case 0: {</col0>
  </Catalog>
 
"        return orbit.length - 1;"
  <Catalog>
    <col0>        return orbit.length - 1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      default: {"
  <Catalog>
    <col0>      default: {</col0>
  </Catalog>
 
"        return 10;"
  <Catalog>
    <col0>        return 10;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void showDest() {"
  <Catalog>
    <col0>  private void showDest() {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("\tSec" + " = " + sC.getText());"
  <Catalog>
    <col0>      System.out.println(\tSec   =   sC.getText());</col0>
  </Catalog>
 
"      System.out.println("\tSub" + " = " + sB.getText());"
  <Catalog>
    <col0>      System.out.println(\tSub   =   sB.getText());</col0>
  </Catalog>
 
"      System.out.println("\tSys" + " = " + sS.getText());"
  <Catalog>
    <col0>      System.out.println(\tSys   =   sS.getText());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String getSysName(File file, String hex) {"
  <Catalog>
    <col0>  private String getSysName(File file, String hex) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    int num2 = 0;"
  <Catalog>
    <col0>    int num2 = 0;</col0>
  </Catalog>
 
"    String[] l = GlobalMethods.getLinesFromFile(file);"
  <Catalog>
    <col0>    String[] l = GlobalMethods.getLinesFromFile(file);</col0>
  </Catalog>
 
"    for (int j = 0; j < l.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < l.length; j) {</col0>
  </Catalog>
 
"      if (l[j].startsWith("---- ")) {"
  <Catalog>
    <col0>      if (l[j].startsWith(---- )) {</col0>
  </Catalog>
 
"        num = j;"
  <Catalog>
    <col0>        num = j;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (l[j].startsWith(hex)) {"
  <Catalog>
    <col0>      if (l[j].startsWith(hex)) {</col0>
  </Catalog>
 
"        num2 = j;"
  <Catalog>
    <col0>        num2 = j;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (num2 == 0) {"
  <Catalog>
    <col0>    if (num2 == 0) {</col0>
  </Catalog>
 
"      return "EMPTY SPACE";"
  <Catalog>
    <col0>      return EMPTY SPACE;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    startuwp = 5;"
  <Catalog>
    <col0>    startuwp = 5;</col0>
  </Catalog>
 
"    String t = l[num2].substring(startuwp).trim();"
  <Catalog>
    <col0>    String t = l[num2].substring(startuwp).trim();</col0>
  </Catalog>
 
"    end = t.indexOf(" ") + startuwp;"
  <Catalog>
    <col0>    end = t.indexOf( )  startuwp;</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      System.out.println(l[num]);"
  <Catalog>
    <col0>      System.out.println(l[num]);</col0>
  </Catalog>
 
"      System.out.println("start" + " = " + startuwp);"
  <Catalog>
    <col0>      System.out.println(start   =   startuwp);</col0>
  </Catalog>
 
"      System.out.println("end" + " = " + end);"
  <Catalog>
    <col0>      System.out.println(end   =   end);</col0>
  </Catalog>
 
"      System.out.println("(end-start)" + " = " + (end - startuwp));"
  <Catalog>
    <col0>      System.out.println((end-start)   =   (end - startuwp));</col0>
  </Catalog>
 
"      System.out.println(l[num2]);"
  <Catalog>
    <col0>      System.out.println(l[num2]);</col0>
  </Catalog>
 
"      System.out.println(l[num2].substring(startuwp, end).trim());"
  <Catalog>
    <col0>      System.out.println(l[num2].substring(startuwp, end).trim());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    return l[num2].substring(startuwp, end).trim();"
  <Catalog>
    <col0>    return l[num2].substring(startuwp, end).trim();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String calcBreakdown(String string) {"
  <Catalog>
    <col0>  private String calcBreakdown(String string) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="Variables">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=Variables></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    int[] counted = null;"
  <Catalog>
    <col0>    int[] counted = null;</col0>
  </Catalog>
 
"    int[][] counted2 = new int[9][20];"
  <Catalog>
    <col0>    int[][] counted2 = new int[9][20];</col0>
  </Catalog>
 
"    int[][] counted5 = new int[4][20];"
  <Catalog>
    <col0>    int[][] counted5 = new int[4][20];</col0>
  </Catalog>
 
"    int[][] counted6 = new int[4][20];"
  <Catalog>
    <col0>    int[][] counted6 = new int[4][20];</col0>
  </Catalog>
 
"    int worlds = lines.length - world1;"
  <Catalog>
    <col0>    int worlds = lines.length - world1;</col0>
  </Catalog>
 
"    int parts = len.length;//14"
  <Catalog>
    <col0>    int parts = len.length;//14</col0>
  </Catalog>
 
"    int[] start = new int[parts];"
  <Catalog>
    <col0>    int[] start = new int[parts];</col0>
  </Catalog>
 
"    int[] end = new int[parts];"
  <Catalog>
    <col0>    int[] end = new int[parts];</col0>
  </Catalog>
 
"    String[][] columns = new String[worlds][parts];"
  <Catalog>
    <col0>    String[][] columns = new String[worlds][parts];</col0>
  </Catalog>
 
"    s = "" + CRLF;"
  <Catalog>
    <col0>    s =   CRLF;</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="comment">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=comment></col0>
  </Catalog>
 
"    String[] partnames = {"Hex", "Name", "UWP", "Trade", "Importance", "Economic","
  <Catalog>
    <col0>    String[] partnames = {Hex, Name, UWP, Trade, Importance, Economic</col0>
  </Catalog>
 
"      "Cultural", "Nobles", "Bases", "Zone", "PBGs", "Worlds", "Allied", "Stellar"};"
  <Catalog>
    <col0>      Cultural, Nobles, Bases, Zone, PBGs, Worlds, Allied, Stellar};</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="set up positions of start and end markers">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=set up positions of start and end markers></col0>
  </Catalog>
 
"    for (int num = 0; num < len.length; num++) {"
  <Catalog>
    <col0>    for (int num = 0; num < len.length; num) {</col0>
  </Catalog>
 
"      if (num > 0) {"
  <Catalog>
    <col0>      if (num > 0) {</col0>
  </Catalog>
 
"        start[num] = start[num - 1] + len[num - 1] + 1;"
  <Catalog>
    <col0>        start[num] = start[num - 1]  len[num - 1]  1;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      end[num] = start[num] + len[num];"
  <Catalog>
    <col0>      end[num] = start[num]  len[num];</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="place strings in array">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=place strings in array></col0>
  </Catalog>
 
"    for (int line = world1; line < lines.length; line++) {"
  <Catalog>
    <col0>    for (int line = world1; line < lines.length; line) {</col0>
  </Catalog>
 
"      for (int bit = 0; bit < parts; bit++) {"
  <Catalog>
    <col0>      for (int bit = 0; bit < parts; bit) {</col0>
  </Catalog>
 
"        columns[line - world1][bit] = lines[line]"
  <Catalog>
    <col0>        columns[line - world1][bit] = lines[line]</col0>
  </Catalog>
 
"          .substring(start[bit], end[bit]);"
  <Catalog>
    <col0>          .substring(start[bit], end[bit]);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //0-HEX"
  <Catalog>
    <col0>    //0-HEX</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //1-NAME"
  <Catalog>
    <col0>    //1-NAME</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //2-UWP"
  <Catalog>
    <col0>    //2-UWP</col0>
  </Catalog>
 
"    num = 2;"
  <Catalog>
    <col0>    num = 2;</col0>
  </Catalog>
 
"    String column = "";"
  <Catalog>
    <col0>    String column = ;</col0>
  </Catalog>
 
"    String[] uwpbits = {"", "", "", "", "", "", "", "", ""};"
  <Catalog>
    <col0>    String[] uwpbits = {, , , , , , , , };</col0>
  </Catalog>
 
"    int[][] ints = new int[14][];"
  <Catalog>
    <col0>    int[][] ints = new int[14][];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //3-REMARKS"
  <Catalog>
    <col0>    //3-REMARKS</col0>
  </Catalog>
 
"    String[] remnames = {"As", "De", "Fl", "Ga", "He", "Ic", "Oc", "Va","
  <Catalog>
    <col0>    String[] remnames = {As, De, Fl, Ga, He, Ic, Oc, Va</col0>
  </Catalog>
 
"      "Wa", "Di", "Ba", "Lo", "Ni", "Ph", "Hi", "Pa", "Ag", "Na", "Pi","
  <Catalog>
    <col0>      Wa, Di, Ba, Lo, Ni, Ph, Hi, Pa, Ag, Na, Pi</col0>
  </Catalog>
 
"      "In", "Po", "Pr", "Ri", "Fr", "Ho", "Co", "Lk", "Tr", "Tu", "Tz","
  <Catalog>
    <col0>      In, Po, Pr, Ri, Fr, Ho, Co, Lk, Tr, Tu, Tz</col0>
  </Catalog>
 
"      "Fa", "Mi", "Mr", "Px", "Pe", "Re", "Cp", "Cs", "Cx", "Cy","
  <Catalog>
    <col0>      Fa, Mi, Mr, Px, Pe, Re, Cp, Cs, Cx, Cy</col0>
  </Catalog>
 
"      "Sa", "Fo", "Pz", "Da", "Ab", "An"};"
  <Catalog>
    <col0>      Sa, Fo, Pz, Da, Ab, An};</col0>
  </Catalog>
 
"    ints[3] = new int[remnames.length];"
  <Catalog>
    <col0>    ints[3] = new int[remnames.length];</col0>
  </Catalog>
 
"    String st = "";"
  <Catalog>
    <col0>    String st = ;</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //4-IMPORTANCE"
  <Catalog>
    <col0>    //4-IMPORTANCE</col0>
  </Catalog>
 
"    int leng = 11;"
  <Catalog>
    <col0>    int leng = 11;</col0>
  </Catalog>
 
"    ints[4] = new int[leng];"
  <Catalog>
    <col0>    ints[4] = new int[leng];</col0>
  </Catalog>
 
"    int[] ras = new int[leng];"
  <Catalog>
    <col0>    int[] ras = new int[leng];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //5-ECONOMY"
  <Catalog>
    <col0>    //5-ECONOMY</col0>
  </Catalog>
 
"    //    String[] ecobits = {"0", "0", "0", "0"};"
  <Catalog>
    <col0>    //    String[] ecobits = {0, 0, 0, 0};</col0>
  </Catalog>
 
"    String[] ecobits = {"", "", "", "0"};"
  <Catalog>
    <col0>    String[] ecobits = {, , , 0};</col0>
  </Catalog>
 
"    ints[5] = new int[ecobits.length];"
  <Catalog>
    <col0>    ints[5] = new int[ecobits.length];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //6-CULTURE"
  <Catalog>
    <col0>    //6-CULTURE</col0>
  </Catalog>
 
"    String[] culbits = {"", "", "", ""};"
  <Catalog>
    <col0>    String[] culbits = {, , , };</col0>
  </Catalog>
 
"    ints[6] = new int[culbits.length];"
  <Catalog>
    <col0>    ints[6] = new int[culbits.length];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //7-NOBLES"
  <Catalog>
    <col0>    //7-NOBLES</col0>
  </Catalog>
 
"    String[] noblenames = {"B-Knight-11", "c-Baronet-12", "C-Baron-13", "D-Marquis-14","
  <Catalog>
    <col0>    String[] noblenames = {B-Knight-11, c-Baronet-12, C-Baron-13, D-Marquis-14</col0>
  </Catalog>
 
"      "e-Viscount-15", "E-Count-16", "f-Duke-17", "F-Duke-18", "G-Archduke-19", "H-Emperor-20"};"
  <Catalog>
    <col0>      e-Viscount-15, E-Count-16, f-Duke-17, F-Duke-18, G-Archduke-19, H-Emperor-20};</col0>
  </Catalog>
 
"    ints[7] = new int[noblenames.length];"
  <Catalog>
    <col0>    ints[7] = new int[noblenames.length];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //8-BASES"
  <Catalog>
    <col0>    //8-BASES</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="basenames">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=basenames></col0>
  </Catalog>
 
"    String[] ctbasenames = {"
  <Catalog>
    <col0>    String[] ctbasenames = {</col0>
  </Catalog>
 
"      "A-Naval Base and Scout Base-Imperial","
  <Catalog>
    <col0>      A-Naval Base and Scout Base-Imperial</col0>
  </Catalog>
 
"      "B-Naval Base and Way Station-Imperial","
  <Catalog>
    <col0>      B-Naval Base and Way Station-Imperial</col0>
  </Catalog>
 
"      "C-Corsair Base-Vargr","
  <Catalog>
    <col0>      C-Corsair Base-Vargr</col0>
  </Catalog>
 
"      "D-Depot-Imperial","
  <Catalog>
    <col0>      D-Depot-Imperial</col0>
  </Catalog>
 
"      "E-Embassy Center-Hiver","
  <Catalog>
    <col0>      E-Embassy Center-Hiver</col0>
  </Catalog>
 
"      "F-Military and Naval Base","
  <Catalog>
    <col0>      F-Military and Naval Base</col0>
  </Catalog>
 
"      "G-Naval Base-Vargr","
  <Catalog>
    <col0>      G-Naval Base-Vargr</col0>
  </Catalog>
 
"      "H-Naval Base and Corsair Base-Vargr","
  <Catalog>
    <col0>      H-Naval Base and Corsair Base-Vargr</col0>
  </Catalog>
 
"      "J-Naval Base","
  <Catalog>
    <col0>      J-Naval Base</col0>
  </Catalog>
 
"      "K-Naval Base-K’kree","
  <Catalog>
    <col0>      K-Naval Base-K’kree</col0>
  </Catalog>
 
"      "L-Naval Base-Hiver","
  <Catalog>
    <col0>      L-Naval Base-Hiver</col0>
  </Catalog>
 
"      "M-Military Base","
  <Catalog>
    <col0>      M-Military Base</col0>
  </Catalog>
 
"      "N-Naval Base-Imperial","
  <Catalog>
    <col0>      N-Naval Base-Imperial</col0>
  </Catalog>
 
"      "O-Naval Outpost-K’kree","
  <Catalog>
    <col0>      O-Naval Outpost-K’kree</col0>
  </Catalog>
 
"      "P-Naval Base-Droyne","
  <Catalog>
    <col0>      P-Naval Base-Droyne</col0>
  </Catalog>
 
"      "Q-Military Garrison-Droyne","
  <Catalog>
    <col0>      Q-Military Garrison-Droyne</col0>
  </Catalog>
 
"      "R-Clan Base-Aslan","
  <Catalog>
    <col0>      R-Clan Base-Aslan</col0>
  </Catalog>
 
"      "S-Scout Base-Imperial","
  <Catalog>
    <col0>      S-Scout Base-Imperial</col0>
  </Catalog>
 
"      "T-Tlauku Base-Aslan","
  <Catalog>
    <col0>      T-Tlauku Base-Aslan</col0>
  </Catalog>
 
"      "U-Tlauku and Clan Base-Aslan","
  <Catalog>
    <col0>      U-Tlauku and Clan Base-Aslan</col0>
  </Catalog>
 
"      "V-Scout/Exploration Base","
  <Catalog>
    <col0>      V-Scout/Exploration Base</col0>
  </Catalog>
 
"      "W-Way Station-Imperial","
  <Catalog>
    <col0>      W-Way Station-Imperial</col0>
  </Catalog>
 
"      "X-Relay Station-Zhodani","
  <Catalog>
    <col0>      X-Relay Station-Zhodani</col0>
  </Catalog>
 
"      "Y-Depot-Zhodani","
  <Catalog>
    <col0>      Y-Depot-Zhodani</col0>
  </Catalog>
 
"      "Z-Naval/Military Base-Zhodani"};"
  <Catalog>
    <col0>      Z-Naval/Military Base-Zhodani};</col0>
  </Catalog>
 
"    String[] t5basenames = {"
  <Catalog>
    <col0>    String[] t5basenames = {</col0>
  </Catalog>
 
"      "C-Corsair Base-Vargr","
  <Catalog>
    <col0>      C-Corsair Base-Vargr</col0>
  </Catalog>
 
"      "D-Naval Depot-Any","
  <Catalog>
    <col0>      D-Naval Depot-Any</col0>
  </Catalog>
 
"      "K-Naval Base-Any","
  <Catalog>
    <col0>      K-Naval Base-Any</col0>
  </Catalog>
 
"      "M-Military Base-Any","
  <Catalog>
    <col0>      M-Military Base-Any</col0>
  </Catalog>
 
"      "N-Naval Base-Imperial","
  <Catalog>
    <col0>      N-Naval Base-Imperial</col0>
  </Catalog>
 
"      "R-Clan Base-Aslan","
  <Catalog>
    <col0>      R-Clan Base-Aslan</col0>
  </Catalog>
 
"      "S-Scout Base-Imperial","
  <Catalog>
    <col0>      S-Scout Base-Imperial</col0>
  </Catalog>
 
"      "T-Tlaukhu Base-Aslan","
  <Catalog>
    <col0>      T-Tlaukhu Base-Aslan</col0>
  </Catalog>
 
"      "V-Exploration Base-Any","
  <Catalog>
    <col0>      V-Exploration Base-Any</col0>
  </Catalog>
 
"      "W-Scout Way Station-Imperial","
  <Catalog>
    <col0>      W-Scout Way Station-Imperial</col0>
  </Catalog>
 
"      "X-Relay Station-Zhodani""
  <Catalog>
    <col0>      X-Relay Station-Zhodani</col0>
  </Catalog>
 
"    };"
  <Catalog>
    <col0>    };</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String[] basenames;"
  <Catalog>
    <col0>    String[] basenames;</col0>
  </Catalog>
 
"    //    basenames = ctbasenames;"
  <Catalog>
    <col0>    //    basenames = ctbasenames;</col0>
  </Catalog>
 
"    basenames = t5basenames;"
  <Catalog>
    <col0>    basenames = t5basenames;</col0>
  </Catalog>
 
"    ints[8] = new int[basenames.length];"
  <Catalog>
    <col0>    ints[8] = new int[basenames.length];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //9-ZONE"
  <Catalog>
    <col0>    //9-ZONE</col0>
  </Catalog>
 
"    String[] zonenames = {"Green", "Amber", "Red"};"
  <Catalog>
    <col0>    String[] zonenames = {Green, Amber, Red};</col0>
  </Catalog>
 
"    ints[9] = new int[zonenames.length];"
  <Catalog>
    <col0>    ints[9] = new int[zonenames.length];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //10-PBG"
  <Catalog>
    <col0>    //10-PBG</col0>
  </Catalog>
 
"    ints[10] = new int[20];"
  <Catalog>
    <col0>    ints[10] = new int[20];</col0>
  </Catalog>
 
"    String[] pop = {"No", "Low", "Medium", "HIGH"};"
  <Catalog>
    <col0>    String[] pop = {No, Low, Medium, HIGH};</col0>
  </Catalog>
 
"    String[] vals = {"0-2", "3-5", "6-8", "9+"};"
  <Catalog>
    <col0>    String[] vals = {0-2, 3-5, 6-8, 9};</col0>
  </Catalog>
 
"    String[] xtra = {"Unpopulated", "Thousands", "Millions", "Billions"};"
  <Catalog>
    <col0>    String[] xtra = {Unpopulated, Thousands, Millions, Billions};</col0>
  </Catalog>
 
"    String pvars = "";"
  <Catalog>
    <col0>    String pvars = ;</col0>
  </Catalog>
 
"    String bvars = "";"
  <Catalog>
    <col0>    String bvars = ;</col0>
  </Catalog>
 
"    String gvars = "";"
  <Catalog>
    <col0>    String gvars = ;</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //11-WORLDS"
  <Catalog>
    <col0>    //11-WORLDS</col0>
  </Catalog>
 
"    int nworlds = 20;"
  <Catalog>
    <col0>    int nworlds = 20;</col0>
  </Catalog>
 
"    ints[11] = new int[nworlds];"
  <Catalog>
    <col0>    ints[11] = new int[nworlds];</col0>
  </Catalog>
 
"    String sworlds = "";"
  <Catalog>
    <col0>    String sworlds = ;</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="comment">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=comment></col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //12-ALLIED"
  <Catalog>
    <col0>    //12-ALLIED</col0>
  </Catalog>
 
"    ints[12] = new int[6];"
  <Catalog>
    <col0>    ints[12] = new int[6];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //13-STELLAR"
  <Catalog>
    <col0>    //13-STELLAR</col0>
  </Catalog>
 
"    ints[13] = new int[6];"
  <Catalog>
    <col0>    ints[13] = new int[6];</col0>
  </Catalog>
 
"    //--------------------------------------------------------------------------"
  <Catalog>
    <col0>    //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="step 1 SET ARRAY SIZES & COUNTS">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=step 1 SET ARRAY SIZES & COUNTS></col0>
  </Catalog>
 
"    for (int world = 0; world < worlds; world++) {"
  <Catalog>
    <col0>    for (int world = 0; world < worlds; world) {</col0>
  </Catalog>
 
"      for (int part = 0; part < parts; part++) {"
  <Catalog>
    <col0>      for (int part = 0; part < parts; part) {</col0>
  </Catalog>
 
"        column = columns[world][part];"
  <Catalog>
    <col0>        column = columns[world][part];</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="SET ARRAY SIZES & COUNTS">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=SET ARRAY SIZES & COUNTS></col0>
  </Catalog>
 
"        String[] ra = {""};"
  <Catalog>
    <col0>        String[] ra = {};</col0>
  </Catalog>
 
"        switch (part) {"
  <Catalog>
    <col0>        switch (part) {</col0>
  </Catalog>
 
"          //<editor-fold defaultstate="collapsed" desc="comment">"
  <Catalog>
    <col0>          //<editor-fold defaultstate=collapsed desc=comment></col0>
  </Catalog>
 
"          case 0: {//Hex"
  <Catalog>
    <col0>          case 0: {//Hex</col0>
  </Catalog>
 
"            ints[part] = new int[0];"
  <Catalog>
    <col0>            ints[part] = new int[0];</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 1: {//Name"
  <Catalog>
    <col0>          case 1: {//Name</col0>
  </Catalog>
 
"            ints[part] = new int[0];"
  <Catalog>
    <col0>            ints[part] = new int[0];</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 2: {//UWP"
  <Catalog>
    <col0>          case 2: {//UWP</col0>
  </Catalog>
 
"            ints[part] = new int[9];"
  <Catalog>
    <col0>            ints[part] = new int[9];</col0>
  </Catalog>
 
"            for (i = 0; i < ints[part].length; i++) {"
  <Catalog>
    <col0>            for (i = 0; i < ints[part].length; i) {</col0>
  </Catalog>
 
"              column = columns[world][part].substring(i, i + 1);"
  <Catalog>
    <col0>              column = columns[world][part].substring(i, i  1);</col0>
  </Catalog>
 
"              if (!uwpbits[i].contains(column)) {"
  <Catalog>
    <col0>              if (!uwpbits[i].contains(column)) {</col0>
  </Catalog>
 
"                uwpbits[i] += column;"
  <Catalog>
    <col0>                uwpbits[i] = column;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"              ints[part][i] = uwpbits[i].length();"
  <Catalog>
    <col0>              ints[part][i] = uwpbits[i].length();</col0>
  </Catalog>
 
"              counted = new int[ints[part][i]];"
  <Catalog>
    <col0>              counted = new int[ints[part][i]];</col0>
  </Catalog>
 
"              for (int n = 0; n < counted.length; n++) {"
  <Catalog>
    <col0>              for (int n = 0; n < counted.length; n) {</col0>
  </Catalog>
 
"                if (column.contains(sortString(uwpbits[i], 1)"
  <Catalog>
    <col0>                if (column.contains(sortString(uwpbits[i], 1)</col0>
  </Catalog>
 
"                  .substring(n, n + 1))) {"
  <Catalog>
    <col0>                  .substring(n, n  1))) {</col0>
  </Catalog>
 
"                  counted2[i][n] += 1;"
  <Catalog>
    <col0>                  counted2[i][n] = 1;</col0>
  </Catalog>
 
"                }"
  <Catalog>
    <col0>                }</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 3: {//Trade"
  <Catalog>
    <col0>          case 3: {//Trade</col0>
  </Catalog>
 
"            column = columns[world][part];"
  <Catalog>
    <col0>            column = columns[world][part];</col0>
  </Catalog>
 
"            for (int i = 0; i < remnames.length; i++) {"
  <Catalog>
    <col0>            for (int i = 0; i < remnames.length; i) {</col0>
  </Catalog>
 
"              if (column.contains(remnames[i])) {"
  <Catalog>
    <col0>              if (column.contains(remnames[i])) {</col0>
  </Catalog>
 
"                ints[part][i] += 1;"
  <Catalog>
    <col0>                ints[part][i] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 4: {//Importance"
  <Catalog>
    <col0>          case 4: {//Importance</col0>
  </Catalog>
 
"            num = Integer.parseInt(column.replace("{", "").replace("}", "")"
  <Catalog>
    <col0>            num = Integer.parseInt(column.replace({, ).replace(}, )</col0>
  </Catalog>
 
"              .replace(" ", ""));"
  <Catalog>
    <col0>              .replace( , ));</col0>
  </Catalog>
 
"            if (column.contains(" " + num + " ")) {"
  <Catalog>
    <col0>            if (column.contains(   num   )) {</col0>
  </Catalog>
 
"              ints[part][num + 5] += 1;"
  <Catalog>
    <col0>              ints[part][num  5] = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            column = columns[world][4];"
  <Catalog>
    <col0>            column = columns[world][4];</col0>
  </Catalog>
 
"            for (int j = 0; j < ints[4].length; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < ints[4].length; j) {</col0>
  </Catalog>
 
"              if (column.equals(" " + ras[j] + " ")) {"
  <Catalog>
    <col0>              if (column.equals(   ras[j]   )) {</col0>
  </Catalog>
 
"                ints[4][j] += 1;"
  <Catalog>
    <col0>                ints[4][j] = 1;</col0>
  </Catalog>
 
"                break;"
  <Catalog>
    <col0>                break;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          case 5: {//Economic"
  <Catalog>
    <col0>          case 5: {//Economic</col0>
  </Catalog>
 
"            String[] econames = {"Resource", "Labour", "Infrastructure","
  <Catalog>
    <col0>            String[] econames = {Resource, Labour, Infrastructure</col0>
  </Catalog>
 
"              "Efficiency"};"
  <Catalog>
    <col0>              Efficiency};</col0>
  </Catalog>
 
"            column = columns[world][5].substring(1,"
  <Catalog>
    <col0>            column = columns[world][5].substring(1,</col0>
  </Catalog>
 
"              columns[world][5].length() - 1);"
  <Catalog>
    <col0>              columns[world][5].length() - 1);</col0>
  </Catalog>
 
"            for (int j = 0; j < ecobits.length; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < ecobits.length; j) {</col0>
  </Catalog>
 
"              ints[5][j] = ecobits[j].length();"
  <Catalog>
    <col0>              ints[5][j] = ecobits[j].length();</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            for (int j = 0; j < 3; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < 3; j) {</col0>
  </Catalog>
 
"              st = column.substring(j, j + 1);"
  <Catalog>
    <col0>              st = column.substring(j, j  1);</col0>
  </Catalog>
 
"              if (!ecobits[j].contains(st)) {"
  <Catalog>
    <col0>              if (!ecobits[j].contains(st)) {</col0>
  </Catalog>
 
"                ecobits[j] += st;"
  <Catalog>
    <col0>                ecobits[j] = st;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            num = Integer.parseInt(column.substring(3));"
  <Catalog>
    <col0>            num = Integer.parseInt(column.substring(3));</col0>
  </Catalog>
 
"            if (ecobits[3].isEmpty()) {"
  <Catalog>
    <col0>            if (ecobits[3].isEmpty()) {</col0>
  </Catalog>
 
"              ecobits[3] = "" + num;"
  <Catalog>
    <col0>              ecobits[3] =   num;</col0>
  </Catalog>
 
"            } else {"
  <Catalog>
    <col0>            } else {</col0>
  </Catalog>
 
"              int[] nums = new int[ecobits[3].split(",").length];"
  <Catalog>
    <col0>              int[] nums = new int[ecobits[3].split(</col0>
    <col1>).length];</col1>
  </Catalog>
 
"              Arrays.sort(nums);"
  <Catalog>
    <col0>              Arrays.sort(nums);</col0>
  </Catalog>
 
"              if (!ecobits[3].contains("," + num)) {"
  <Catalog>
    <col0>              if (!ecobits[3].contains(</col0>
    <col1>  num)) {</col1>
  </Catalog>
 
"                ecobits[3] += "," + num;"
  <Catalog>
    <col0>                ecobits[3] = </col0>
    <col1>  num;</col1>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            counted = new int[ints[part][0]];"
  <Catalog>
    <col0>            counted = new int[ints[part][0]];</col0>
  </Catalog>
 
"            for (int n = 0; n < counted.length; n++) {"
  <Catalog>
    <col0>            for (int n = 0; n < counted.length; n) {</col0>
  </Catalog>
 
"              if (column.substring(0, 1).equals(sortString(ecobits[0], 1)"
  <Catalog>
    <col0>              if (column.substring(0, 1).equals(sortString(ecobits[0], 1)</col0>
  </Catalog>
 
"                .substring(n, n + 1))) {"
  <Catalog>
    <col0>                .substring(n, n  1))) {</col0>
  </Catalog>
 
"                counted5[0][n] += 1;"
  <Catalog>
    <col0>                counted5[0][n] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            counted = new int[ints[part][1]];"
  <Catalog>
    <col0>            counted = new int[ints[part][1]];</col0>
  </Catalog>
 
"            for (int n = 0; n < counted.length; n++) {"
  <Catalog>
    <col0>            for (int n = 0; n < counted.length; n) {</col0>
  </Catalog>
 
"              if (column.substring(1, 2).equals(sortString(ecobits[1], 1)"
  <Catalog>
    <col0>              if (column.substring(1, 2).equals(sortString(ecobits[1], 1)</col0>
  </Catalog>
 
"                .substring(n, n + 1))) {"
  <Catalog>
    <col0>                .substring(n, n  1))) {</col0>
  </Catalog>
 
"                counted5[1][n] += 1;"
  <Catalog>
    <col0>                counted5[1][n] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            counted = new int[ints[part][2]];"
  <Catalog>
    <col0>            counted = new int[ints[part][2]];</col0>
  </Catalog>
 
"            for (int n = 0; n < counted.length; n++) {"
  <Catalog>
    <col0>            for (int n = 0; n < counted.length; n) {</col0>
  </Catalog>
 
"              if (column.substring(2, 3).equals(sortString(ecobits[2], 1)"
  <Catalog>
    <col0>              if (column.substring(2, 3).equals(sortString(ecobits[2], 1)</col0>
  </Catalog>
 
"                .substring(n, n + 1))) {"
  <Catalog>
    <col0>                .substring(n, n  1))) {</col0>
  </Catalog>
 
"                counted5[2][n] += 1;"
  <Catalog>
    <col0>                counted5[2][n] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            counted = new int[11];"
  <Catalog>
    <col0>            counted = new int[11];</col0>
  </Catalog>
 
"            counted5[3][Integer.parseInt(column.substring(3)) + 5] += 1;"
  <Catalog>
    <col0>            counted5[3][Integer.parseInt(column.substring(3))  5] = 1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //CULTURE"
  <Catalog>
    <col0>          //CULTURE</col0>
  </Catalog>
 
"          case 6: {//Cultural"
  <Catalog>
    <col0>          case 6: {//Cultural</col0>
  </Catalog>
 
"            String[] culturenames = {"Homogeneity", "Acceptance", "Strangeness","
  <Catalog>
    <col0>            String[] culturenames = {Homogeneity, Acceptance, Strangeness</col0>
  </Catalog>
 
"              "Symbols"};"
  <Catalog>
    <col0>              Symbols};</col0>
  </Catalog>
 
"            column = columns[world][6].substring(1,"
  <Catalog>
    <col0>            column = columns[world][6].substring(1,</col0>
  </Catalog>
 
"              columns[world][6].length() - 1);"
  <Catalog>
    <col0>              columns[world][6].length() - 1);</col0>
  </Catalog>
 
"            ints[part] = new int[culturenames.length];"
  <Catalog>
    <col0>            ints[part] = new int[culturenames.length];</col0>
  </Catalog>
 
"            for (int j = 0; j < culbits.length; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < culbits.length; j) {</col0>
  </Catalog>
 
"              ints[part][j] = culbits[j].length();"
  <Catalog>
    <col0>              ints[part][j] = culbits[j].length();</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            for (int j = 0; j < 4; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < 4; j) {</col0>
  </Catalog>
 
"              st = column.substring(j, j + 1);"
  <Catalog>
    <col0>              st = column.substring(j, j  1);</col0>
  </Catalog>
 
"              if (!culbits[j].contains(st)) {"
  <Catalog>
    <col0>              if (!culbits[j].contains(st)) {</col0>
  </Catalog>
 
"                culbits[j] += st;"
  <Catalog>
    <col0>                culbits[j] = st;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            counted = new int[ints[part][0]];"
  <Catalog>
    <col0>            counted = new int[ints[part][0]];</col0>
  </Catalog>
 
"            for (int j = 0; j < 4; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < 4; j) {</col0>
  </Catalog>
 
"              for (int n = 0; n < counted.length; n++) {"
  <Catalog>
    <col0>              for (int n = 0; n < counted.length; n) {</col0>
  </Catalog>
 
"                if (column.substring(j, j + 1).equals(sortString(culbits[0], 1)"
  <Catalog>
    <col0>                if (column.substring(j, j  1).equals(sortString(culbits[0], 1)</col0>
  </Catalog>
 
"                  .substring(n, n + 1))) {"
  <Catalog>
    <col0>                  .substring(n, n  1))) {</col0>
  </Catalog>
 
"                  counted6[j][n] += 1;"
  <Catalog>
    <col0>                  counted6[j][n] = 1;</col0>
  </Catalog>
 
"//                  System.out.println("" + " = " + counted6[0][n]);"
  <Catalog>
    <col0>//                  System.out.println(   =   counted6[0][n]);</col0>
  </Catalog>
 
"                }"
  <Catalog>
    <col0>                }</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //NOBLES"
  <Catalog>
    <col0>          //NOBLES</col0>
  </Catalog>
 
"          case 7: {//Nobles"
  <Catalog>
    <col0>          case 7: {//Nobles</col0>
  </Catalog>
 
"            for (int j = 0; j < noblenames.length; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < noblenames.length; j) {</col0>
  </Catalog>
 
"              if (column.contains(noblenames[j].substring(0, 1))) {"
  <Catalog>
    <col0>              if (column.contains(noblenames[j].substring(0, 1))) {</col0>
  </Catalog>
 
"                ints[part][j] += 1;"
  <Catalog>
    <col0>                ints[part][j] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //BASES"
  <Catalog>
    <col0>          //BASES</col0>
  </Catalog>
 
"          case 8: {//Bases"
  <Catalog>
    <col0>          case 8: {//Bases</col0>
  </Catalog>
 
"            column = columns[world][part];"
  <Catalog>
    <col0>            column = columns[world][part];</col0>
  </Catalog>
 
"            num = basenames.length;"
  <Catalog>
    <col0>            num = basenames.length;</col0>
  </Catalog>
 
"            for (int j = 0; j < num; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < num; j) {</col0>
  </Catalog>
 
"              if (column.contains(basenames[j].substring(0, 1))) {"
  <Catalog>
    <col0>              if (column.contains(basenames[j].substring(0, 1))) {</col0>
  </Catalog>
 
"                ints[8][j] += 1;"
  <Catalog>
    <col0>                ints[8][j] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //TAS ZONE"
  <Catalog>
    <col0>          //TAS ZONE</col0>
  </Catalog>
 
"          case 9: {//Zone"
  <Catalog>
    <col0>          case 9: {//Zone</col0>
  </Catalog>
 
"            column = columns[world][part];"
  <Catalog>
    <col0>            column = columns[world][part];</col0>
  </Catalog>
 
"            for (int j = 0; j < 3; j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < 3; j) {</col0>
  </Catalog>
 
"              if (column.contains(zonenames[j].substring(0, 1))) {"
  <Catalog>
    <col0>              if (column.contains(zonenames[j].substring(0, 1))) {</col0>
  </Catalog>
 
"                ints[part][j] += 1;"
  <Catalog>
    <col0>                ints[part][j] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (column.contains("-")) {"
  <Catalog>
    <col0>            if (column.contains(-)) {</col0>
  </Catalog>
 
"              ints[part][0] += 1;"
  <Catalog>
    <col0>              ints[part][0] = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //PBG"
  <Catalog>
    <col0>          //PBG</col0>
  </Catalog>
 
"          case 10: {//PBGs"
  <Catalog>
    <col0>          case 10: {//PBGs</col0>
  </Catalog>
 
"            //<editor-fold defaultstate="collapsed" desc="P">"
  <Catalog>
    <col0>            //<editor-fold defaultstate=collapsed desc=P></col0>
  </Catalog>
 
"            String p = column.substring(0, 1);"
  <Catalog>
    <col0>            String p = column.substring(0, 1);</col0>
  </Catalog>
 
"            if (!pvars.contains(p)) {"
  <Catalog>
    <col0>            if (!pvars.contains(p)) {</col0>
  </Catalog>
 
"              pvars += p;"
  <Catalog>
    <col0>              pvars = p;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (p.equals("0") | p.equals("1") | p.equals("2")) {"
  <Catalog>
    <col0>            if (p.equals(0) | p.equals(1) | p.equals(2)) {</col0>
  </Catalog>
 
"              ints[10][0] += 1;"
  <Catalog>
    <col0>              ints[10][0] = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (p.equals("3") | p.equals("4") | p.equals("5")) {"
  <Catalog>
    <col0>            if (p.equals(3) | p.equals(4) | p.equals(5)) {</col0>
  </Catalog>
 
"              ints[10][1] += 1;"
  <Catalog>
    <col0>              ints[10][1] = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (p.equals("6") | p.equals("7") | p.equals("8")) {"
  <Catalog>
    <col0>            if (p.equals(6) | p.equals(7) | p.equals(8)) {</col0>
  </Catalog>
 
"              ints[10][2] += 1;"
  <Catalog>
    <col0>              ints[10][2] = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (p.equals("9") | p.equals("A") | p.equals("B") | p.equals("C")"
  <Catalog>
    <col0>            if (p.equals(9) | p.equals(A) | p.equals(B) | p.equals(C)</col0>
  </Catalog>
 
"              | p.equals("D") | p.equals("E") | p.equals("F") | p.equals("G")"
  <Catalog>
    <col0>              | p.equals(D) | p.equals(E) | p.equals(F) | p.equals(G)</col0>
  </Catalog>
 
"              | p.equals("H")) {"
  <Catalog>
    <col0>              | p.equals(H)) {</col0>
  </Catalog>
 
"              ints[10][3] += 1;"
  <Catalog>
    <col0>              ints[10][3] = 1;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            //</editor-fold>"
  <Catalog>
    <col0>            //</editor-fold></col0>
  </Catalog>
 
"            //<editor-fold defaultstate="collapsed" desc="B">"
  <Catalog>
    <col0>            //<editor-fold defaultstate=collapsed desc=B></col0>
  </Catalog>
 
"            String b = column.substring(1, 2);"
  <Catalog>
    <col0>            String b = column.substring(1, 2);</col0>
  </Catalog>
 
"            if (!bvars.contains(b)) {"
  <Catalog>
    <col0>            if (!bvars.contains(b)) {</col0>
  </Catalog>
 
"              bvars += b;"
  <Catalog>
    <col0>              bvars = b;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            for (int j = 0; j < bvars.length(); j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < bvars.length(); j) {</col0>
  </Catalog>
 
"              num = Integer.parseInt(bvars.substring(j, j + 1));"
  <Catalog>
    <col0>              num = Integer.parseInt(bvars.substring(j, j  1));</col0>
  </Catalog>
 
"              if (b.equals("" + num)) {"
  <Catalog>
    <col0>              if (b.equals(  num)) {</col0>
  </Catalog>
 
"                ints[10][4 + num] += 1;"
  <Catalog>
    <col0>                ints[10][4  num] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            //</editor-fold>"
  <Catalog>
    <col0>            //</editor-fold></col0>
  </Catalog>
 
"            //<editor-fold defaultstate="collapsed" desc="G">"
  <Catalog>
    <col0>            //<editor-fold defaultstate=collapsed desc=G></col0>
  </Catalog>
 
"            String g = column.substring(2, 3);"
  <Catalog>
    <col0>            String g = column.substring(2, 3);</col0>
  </Catalog>
 
"            if (!gvars.contains(g)) {"
  <Catalog>
    <col0>            if (!gvars.contains(g)) {</col0>
  </Catalog>
 
"              gvars += g;"
  <Catalog>
    <col0>              gvars = g;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            for (int j = 0; j < gvars.length(); j++) {"
  <Catalog>
    <col0>            for (int j = 0; j < gvars.length(); j) {</col0>
  </Catalog>
 
"              num = Integer.parseInt(gvars.substring(j, j + 1));"
  <Catalog>
    <col0>              num = Integer.parseInt(gvars.substring(j, j  1));</col0>
  </Catalog>
 
"              if (g.equals("" + num)) {"
  <Catalog>
    <col0>              if (g.equals(  num)) {</col0>
  </Catalog>
 
"                ints[10][4 + 8 + num] += 1;"
  <Catalog>
    <col0>                ints[10][4  8  num] = 1;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            //            System.out.println(gvars);"
  <Catalog>
    <col0>            //            System.out.println(gvars);</col0>
  </Catalog>
 
"            //</editor-fold>"
  <Catalog>
    <col0>            //</editor-fold></col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------</col0>
  </Catalog>
 
"          //11-WORLDS"
  <Catalog>
    <col0>          //11-WORLDS</col0>
  </Catalog>
 
"          case 11: {//Worlds"
  <Catalog>
    <col0>          case 11: {//Worlds</col0>
  </Catalog>
 
"            if (!sworlds.contains(column)) {"
  <Catalog>
    <col0>            if (!sworlds.contains(column)) {</col0>
  </Catalog>
 
"              sworlds += column + ",";"
  <Catalog>
    <col0>              sworlds = column  </col0>
    <col1>;</col1>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            int num2 = Integer.parseInt(column.trim());"
  <Catalog>
    <col0>            int num2 = Integer.parseInt(column.trim());</col0>
  </Catalog>
 
"            ints[11][num2] += 1;"
  <Catalog>
    <col0>            ints[11][num2] = 1;</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //12-ALLIED POWER"
  <Catalog>
    <col0>          //12-ALLIED POWER</col0>
  </Catalog>
 
"          case 12: {//Allied"
  <Catalog>
    <col0>          case 12: {//Allied</col0>
  </Catalog>
 
"            ints[part] = new int[0];"
  <Catalog>
    <col0>            ints[part] = new int[0];</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //--------------------------------------------------------------------------"
  <Catalog>
    <col0>          //--------------------------------------------------------------------------</col0>
  </Catalog>
 
"          //13-STELLAR DETAILS"
  <Catalog>
    <col0>          //13-STELLAR DETAILS</col0>
  </Catalog>
 
"          case 13: {//Stellar"
  <Catalog>
    <col0>          case 13: {//Stellar</col0>
  </Catalog>
 
"            String[] stellars = {"1", "2", "3", "4", "O", "B", "A", "F", "G", "K","
  <Catalog>
    <col0>            String[] stellars = {1, 2, 3, 4, O, B, A, F, G, K</col0>
  </Catalog>
 
"              "M", "Ia", "Ib", "II", "III", "IV", "V", "VI", "VII", "D", "BD","
  <Catalog>
    <col0>              M, Ia, Ib, II, III, IV, V, VI, VII, D, BD</col0>
  </Catalog>
 
"              "Companion", "Strange"};"
  <Catalog>
    <col0>              Companion, Strange};</col0>
  </Catalog>
 
"            ra = stellars;"
  <Catalog>
    <col0>            ra = stellars;</col0>
  </Catalog>
 
"            ints[part] = new int[stellars.length];"
  <Catalog>
    <col0>            ints[part] = new int[stellars.length];</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //</editor-fold>"
  <Catalog>
    <col0>          //</editor-fold></col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="step 2 PRINTLN ARRAY VALUES">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=step 2 PRINTLN ARRAY VALUES></col0>
  </Catalog>
 
"//    DEBUG = false;"
  <Catalog>
    <col0>//    DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) {"
  <Catalog>
    <col0>    if (DEBUG) {</col0>
  </Catalog>
 
"      for (int part = 0; part < parts; part++) {"
  <Catalog>
    <col0>      for (int part = 0; part < parts; part) {</col0>
  </Catalog>
 
"        System.out.println("
  <Catalog>
    <col0>        System.out.println(</col0>
  </Catalog>
 
"          "ints[" + part + "] = new int[" + ints[part].length + "]");"
  <Catalog>
    <col0>          ints[  part  ] = new int[  ints[part].length  ]);</col0>
  </Catalog>
 
"        for (int j = 0; j < ints[part].length; j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < ints[part].length; j) {</col0>
  </Catalog>
 
"          System.out.println("
  <Catalog>
    <col0>          System.out.println(</col0>
  </Catalog>
 
"            "\tints[" + part + "] [" + j + "] = " + ints[part][j]);"
  <Catalog>
    <col0>            \tints[  part  ] [  j  ] =   ints[part][j]);</col0>
  </Catalog>
 
"          //<editor-fold defaultstate="collapsed" desc="PRINTLN array values">"
  <Catalog>
    <col0>          //<editor-fold defaultstate=collapsed desc=PRINTLN array values></col0>
  </Catalog>
 
"          if (part == 2) {"
  <Catalog>
    <col0>          if (part == 2) {</col0>
  </Catalog>
 
"            counted = new int[ints[part][j]];"
  <Catalog>
    <col0>            counted = new int[ints[part][j]];</col0>
  </Catalog>
 
"            for (int n = 0; n < counted.length; n++) {"
  <Catalog>
    <col0>            for (int n = 0; n < counted.length; n) {</col0>
  </Catalog>
 
"              System.out.println("
  <Catalog>
    <col0>              System.out.println(</col0>
  </Catalog>
 
"                "\t\tcounted2[" + j + "][" + n + "] = " + counted2[j][n]);"
  <Catalog>
    <col0>                \t\tcounted2[  j  ][  n  ] =   counted2[j][n]);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          if (part == 5) {"
  <Catalog>
    <col0>          if (part == 5) {</col0>
  </Catalog>
 
"            counted = new int[ints[part][j]];"
  <Catalog>
    <col0>            counted = new int[ints[part][j]];</col0>
  </Catalog>
 
"            for (i = 0; i < counted.length; i++) {"
  <Catalog>
    <col0>            for (i = 0; i < counted.length; i) {</col0>
  </Catalog>
 
"              ints[part][j] = counted[i];"
  <Catalog>
    <col0>              ints[part][j] = counted[i];</col0>
  </Catalog>
 
"              ints[5][3] = ecobits[3].split(",").length;"
  <Catalog>
    <col0>              ints[5][3] = ecobits[3].split(</col0>
    <col1>).length;</col1>
  </Catalog>
 
"              System.out.println("
  <Catalog>
    <col0>              System.out.println(</col0>
  </Catalog>
 
"                "\t\tcounted5[" + j + "][" + i + "] = " + counted5[j][i]);"
  <Catalog>
    <col0>                \t\tcounted5[  j  ][  i  ] =   counted5[j][i]);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          if (part == 6) {"
  <Catalog>
    <col0>          if (part == 6) {</col0>
  </Catalog>
 
"            counted = new int[ints[part][j]];"
  <Catalog>
    <col0>            counted = new int[ints[part][j]];</col0>
  </Catalog>
 
"            for (i = 0; i < counted.length; i++) {"
  <Catalog>
    <col0>            for (i = 0; i < counted.length; i) {</col0>
  </Catalog>
 
"              ints[part][j] = counted[i];"
  <Catalog>
    <col0>              ints[part][j] = counted[i];</col0>
  </Catalog>
 
"              System.out.println("
  <Catalog>
    <col0>              System.out.println(</col0>
  </Catalog>
 
"                "\t\tcounted6[" + j + "][" + i + "] = " + counted6[j][i]);"
  <Catalog>
    <col0>                \t\tcounted6[  j  ][  i  ] =   counted6[j][i]);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          //</editor-fold>"
  <Catalog>
    <col0>          //</editor-fold></col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="step 3 DISPLAY SYSTEM COUNTS">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=step 3 DISPLAY SYSTEM COUNTS></col0>
  </Catalog>
 
"    s = "";"
  <Catalog>
    <col0>    s = ;</col0>
  </Catalog>
 
"    for (int part = 0; part < parts; part++) {"
  <Catalog>
    <col0>    for (int part = 0; part < parts; part) {</col0>
  </Catalog>
 
"      String[] ra = {""};"
  <Catalog>
    <col0>      String[] ra = {};</col0>
  </Catalog>
 
"      s += "\t" + partnames[part] + CRLF;"
  <Catalog>
    <col0>      s = \t  partnames[part]  CRLF;</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DISPLAY ALL DATA">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DISPLAY ALL DATA></col0>
  </Catalog>
 
"      switch (part) {"
  <Catalog>
    <col0>      switch (part) {</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="comment">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=comment></col0>
  </Catalog>
 
"        case 0: {//Hex"
  <Catalog>
    <col0>        case 0: {//Hex</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 1: {//Name"
  <Catalog>
    <col0>        case 1: {//Name</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 2: {//UWP"
  <Catalog>
    <col0>        case 2: {//UWP</col0>
  </Catalog>
 
"          String[] uwp = {"Starports", "Sizes", "Atmospheres", "Hydrospheres","
  <Catalog>
    <col0>          String[] uwp = {Starports, Sizes, Atmospheres, Hydrospheres</col0>
  </Catalog>
 
"            "Populations", "Governments", "Law Levels", "dashs", "Tech Levels"};"
  <Catalog>
    <col0>            Populations, Governments, Law Levels, dashs, Tech Levels};</col0>
  </Catalog>
 
"          for (int j = 0; j < 9; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < 9; j) {</col0>
  </Catalog>
 
"            num = uwpbits[j].length();"
  <Catalog>
    <col0>            num = uwpbits[j].length();</col0>
  </Catalog>
 
"            s += "\t    " + uwp[j] + " = " + sortString(uwpbits[j], 1)"
  <Catalog>
    <col0>            s = \t      uwp[j]   =   sortString(uwpbits[j], 1)</col0>
  </Catalog>
 
"              + " = " + num + " variations" + CRLF;"
  <Catalog>
    <col0>                =   num   variations  CRLF;</col0>
  </Catalog>
 
"            for (int n = 0; n < num; n++) {"
  <Catalog>
    <col0>            for (int n = 0; n < num; n) {</col0>
  </Catalog>
 
"              if (counted2[j][n] > 0) {"
  <Catalog>
    <col0>              if (counted2[j][n] > 0) {</col0>
  </Catalog>
 
"                s += "\t            " + sortString(uwpbits[j], 1).substring(n,"
  <Catalog>
    <col0>                s = \t              sortString(uwpbits[j], 1).substring(n,</col0>
  </Catalog>
 
"                  n + 1)"
  <Catalog>
    <col0>                  n  1)</col0>
  </Catalog>
 
"                  + " = " + counted2[j][n] + " systems" + CRLF;"
  <Catalog>
    <col0>                    =   counted2[j][n]   systems  CRLF;</col0>
  </Catalog>
 
"              }"
  <Catalog>
    <col0>              }</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 3: {//Trade"
  <Catalog>
    <col0>        case 3: {//Trade</col0>
  </Catalog>
 
"          for (int i = 0; i < remnames.length; i++) {"
  <Catalog>
    <col0>          for (int i = 0; i < remnames.length; i) {</col0>
  </Catalog>
 
"            if (ints[part][i] > 0) {"
  <Catalog>
    <col0>            if (ints[part][i] > 0) {</col0>
  </Catalog>
 
"              s += "\t        " + remnames[i] + " = " + ints[part][i]"
  <Catalog>
    <col0>              s = \t          remnames[i]   =   ints[part][i]</col0>
  </Catalog>
 
"                + " systems" + CRLF;"
  <Catalog>
    <col0>                  systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 4: {//Importance"
  <Catalog>
    <col0>        case 4: {//Importance</col0>
  </Catalog>
 
"          int len = 9;//ints[part].length;"
  <Catalog>
    <col0>          int len = 9;//ints[part].length;</col0>
  </Catalog>
 
"          s += "\t    " + len + " variations" + CRLF;"
  <Catalog>
    <col0>          s = \t      len   variations  CRLF;</col0>
  </Catalog>
 
"          for (int j = 5; j > -4; j--) {"
  <Catalog>
    <col0>          for (int j = 5; j > -4; j--) {</col0>
  </Catalog>
 
"            if (ints[part][j + 5] > 0) {"
  <Catalog>
    <col0>            if (ints[part][j  5] > 0) {</col0>
  </Catalog>
 
"              s += "\t        " + j + " = " + ints[part][j + 5] + " systems" + CRLF;"
  <Catalog>
    <col0>              s = \t          j   =   ints[part][j  5]   systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"        case 5: {//Economic"
  <Catalog>
    <col0>        case 5: {//Economic</col0>
  </Catalog>
 
"          String[] eco = {"Resource", "Labour", "Infrastructure", "Efficiency"};"
  <Catalog>
    <col0>          String[] eco = {Resource, Labour, Infrastructure, Efficiency};</col0>
  </Catalog>
 
"          num = ecobits[0].length();"
  <Catalog>
    <col0>          num = ecobits[0].length();</col0>
  </Catalog>
 
"          s += "\t    " + eco[0] + " = " + sortString(ecobits[0], 1)"
  <Catalog>
    <col0>          s = \t      eco[0]   =   sortString(ecobits[0], 1)</col0>
  </Catalog>
 
"            .toUpperCase()"
  <Catalog>
    <col0>            .toUpperCase()</col0>
  </Catalog>
 
"            + " = " + num + " variations" + CRLF;"
  <Catalog>
    <col0>              =   num   variations  CRLF;</col0>
  </Catalog>
 
"          for (int k = 0; k < num; k++) {"
  <Catalog>
    <col0>          for (int k = 0; k < num; k) {</col0>
  </Catalog>
 
"            s += "\t            " + sortString(ecobits[0], 1).toUpperCase()"
  <Catalog>
    <col0>            s = \t              sortString(ecobits[0], 1).toUpperCase()</col0>
  </Catalog>
 
"              .substring(k, k + 1) + " = " + counted5[0][k] + " systems" + CRLF;"
  <Catalog>
    <col0>              .substring(k, k  1)   =   counted5[0][k]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          num = ecobits[1].length();"
  <Catalog>
    <col0>          num = ecobits[1].length();</col0>
  </Catalog>
 
"          s += "\t    " + eco[1] + " = " + sortString(ecobits[1], 1)"
  <Catalog>
    <col0>          s = \t      eco[1]   =   sortString(ecobits[1], 1)</col0>
  </Catalog>
 
"            .toUpperCase()"
  <Catalog>
    <col0>            .toUpperCase()</col0>
  </Catalog>
 
"            + " = " + num + " variations" + CRLF;"
  <Catalog>
    <col0>              =   num   variations  CRLF;</col0>
  </Catalog>
 
"          for (int k = 0; k < num; k++) {"
  <Catalog>
    <col0>          for (int k = 0; k < num; k) {</col0>
  </Catalog>
 
"            s += "\t            " + sortString(ecobits[1], 1).toUpperCase()"
  <Catalog>
    <col0>            s = \t              sortString(ecobits[1], 1).toUpperCase()</col0>
  </Catalog>
 
"              .substring(k, k + 1) + " = " + counted5[1][k] + " systems" + CRLF;"
  <Catalog>
    <col0>              .substring(k, k  1)   =   counted5[1][k]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          num = ecobits[2].length();"
  <Catalog>
    <col0>          num = ecobits[2].length();</col0>
  </Catalog>
 
"          s += "\t    " + eco[2] + " = " + sortString(ecobits[2], 1)"
  <Catalog>
    <col0>          s = \t      eco[2]   =   sortString(ecobits[2], 1)</col0>
  </Catalog>
 
"            .toUpperCase()"
  <Catalog>
    <col0>            .toUpperCase()</col0>
  </Catalog>
 
"            + " = " + num + " variations" + CRLF;"
  <Catalog>
    <col0>              =   num   variations  CRLF;</col0>
  </Catalog>
 
"          for (int k = 0; k < num; k++) {"
  <Catalog>
    <col0>          for (int k = 0; k < num; k) {</col0>
  </Catalog>
 
"            s += "\t            " + sortString(ecobits[2], 1).toUpperCase()"
  <Catalog>
    <col0>            s = \t              sortString(ecobits[2], 1).toUpperCase()</col0>
  </Catalog>
 
"              .substring(k, k + 1) + " = " + counted5[2][k] + " systems" + CRLF;"
  <Catalog>
    <col0>              .substring(k, k  1)   =   counted5[2][k]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          num = ecobits[3].split(",").length;"
  <Catalog>
    <col0>          num = ecobits[3].split(</col0>
    <col1>).length;</col1>
  </Catalog>
 
"          s += "\t    " + eco[3] + " = " + ecobits[3]"
  <Catalog>
    <col0>          s = \t      eco[3]   =   ecobits[3]</col0>
  </Catalog>
 
"            + " = " + num + " variations" + CRLF;"
  <Catalog>
    <col0>              =   num   variations  CRLF;</col0>
  </Catalog>
 
"          int[] strs = sortInts(ecobits[3]);"
  <Catalog>
    <col0>          int[] strs = sortInts(ecobits[3]);</col0>
  </Catalog>
 
"          for (int j = strs.length - 1; j >= 0; j--) {"
  <Catalog>
    <col0>          for (int j = strs.length - 1; j >= 0; j--) {</col0>
  </Catalog>
 
"            s += "\t            " + strs[j] + " = " + counted5[3][j] + " systems" + CRLF;"
  <Catalog>
    <col0>            s = \t              strs[j]   =   counted5[3][j]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 6: {//Cultural"
  <Catalog>
    <col0>        case 6: {//Cultural</col0>
  </Catalog>
 
"          String[] culturenames = {"Homogeneity", "Acceptance", "Strangeness","
  <Catalog>
    <col0>          String[] culturenames = {Homogeneity, Acceptance, Strangeness</col0>
  </Catalog>
 
"            "Symbols"};"
  <Catalog>
    <col0>            Symbols};</col0>
  </Catalog>
 
"          for (int j = 0; j < 4; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < 4; j) {</col0>
  </Catalog>
 
"            num = culbits[j].length();"
  <Catalog>
    <col0>            num = culbits[j].length();</col0>
  </Catalog>
 
"            s += "\t    " + culturenames[j] + " = ""
  <Catalog>
    <col0>            s = \t      culturenames[j]   = </col0>
  </Catalog>
 
"              + sortString(culbits[j], 1).toUpperCase()"
  <Catalog>
    <col0>               sortString(culbits[j], 1).toUpperCase()</col0>
  </Catalog>
 
"              + " = " + num + " variations" + CRLF;"
  <Catalog>
    <col0>                =   num   variations  CRLF;</col0>
  </Catalog>
 
"            for (int k = 0; k < num; k++) {"
  <Catalog>
    <col0>            for (int k = 0; k < num; k) {</col0>
  </Catalog>
 
"              s += "\t            " + sortString(culbits[j], 1).toUpperCase()"
  <Catalog>
    <col0>              s = \t              sortString(culbits[j], 1).toUpperCase()</col0>
  </Catalog>
 
"                .substring(k, k + 1) + " = " + counted6[j][k] + " systems" + CRLF;"
  <Catalog>
    <col0>                .substring(k, k  1)   =   counted6[j][k]   systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //<editor-fold defaultstate="collapsed" desc="comment">"
  <Catalog>
    <col0>        //<editor-fold defaultstate=collapsed desc=comment></col0>
  </Catalog>
 
"        case 7: {//Nobles"
  <Catalog>
    <col0>        case 7: {//Nobles</col0>
  </Catalog>
 
"          for (int j = 0; j < 10; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < 10; j) {</col0>
  </Catalog>
 
"            if (ints[7][j] > 0) {"
  <Catalog>
    <col0>            if (ints[7][j] > 0) {</col0>
  </Catalog>
 
"              s += "\t        " + noblenames[j] + " = " + ints[7][j] + " systems" + CRLF;"
  <Catalog>
    <col0>              s = \t          noblenames[j]   =   ints[7][j]   systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 8: {//Bases"
  <Catalog>
    <col0>        case 8: {//Bases</col0>
  </Catalog>
 
"          for (int j = 0; j < basenames.length; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < basenames.length; j) {</col0>
  </Catalog>
 
"            if (ints[8][j] > 0) {"
  <Catalog>
    <col0>            if (ints[8][j] > 0) {</col0>
  </Catalog>
 
"              s += "\t        " + basenames[j] + " = " + ints[8][j] + " systems" + CRLF;"
  <Catalog>
    <col0>              s = \t          basenames[j]   =   ints[8][j]   systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 9: {//Zone"
  <Catalog>
    <col0>        case 9: {//Zone</col0>
  </Catalog>
 
"          for (int j = 0; j < zonenames.length; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < zonenames.length; j) {</col0>
  </Catalog>
 
"            if (ints[9][j] > 0) {"
  <Catalog>
    <col0>            if (ints[9][j] > 0) {</col0>
  </Catalog>
 
"              s += "\t        " + zonenames[j] + " = " + ints[9][j] + " systems" + CRLF;"
  <Catalog>
    <col0>              s = \t          zonenames[j]   =   ints[9][j]   systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 10: {//PBGs"
  <Catalog>
    <col0>        case 10: {//PBGs</col0>
  </Catalog>
 
"          pvars = sortString(pvars, 1);"
  <Catalog>
    <col0>          pvars = sortString(pvars, 1);</col0>
  </Catalog>
 
"          bvars = sortString(bvars, 1);"
  <Catalog>
    <col0>          bvars = sortString(bvars, 1);</col0>
  </Catalog>
 
"          gvars = sortString(gvars, 1);"
  <Catalog>
    <col0>          gvars = sortString(gvars, 1);</col0>
  </Catalog>
 
"          for (int j = 0; j < 4; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < 4; j) {</col0>
  </Catalog>
 
"            s += "\t    " + pop[j] + " Population (" + vals[j] + ")-" + xtra[j] + " = " + ints[10][j] + " systems" + CRLF;"
  <Catalog>
    <col0>            s = \t      pop[j]   Population (  vals[j]  )-  xtra[j]   =   ints[10][j]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          for (int j = 0; j < bvars.length(); j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < bvars.length(); j) {</col0>
  </Catalog>
 
"            s += "\t    " + sortString(bvars.substring(j, j + 1), 1) + " Planetoid Belts = " + ints[10][4 + j] + " systems" + CRLF;"
  <Catalog>
    <col0>            s = \t      sortString(bvars.substring(j, j  1), 1)   Planetoid Belts =   ints[10][4  j]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          for (int j = 0; j < gvars.length(); j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < gvars.length(); j) {</col0>
  </Catalog>
 
"            s += "\t    " + sortString(gvars.substring(j, j + 1), 1) + " Gas Giants = " + ints[10][4 + 8 + j] + " systems" + CRLF;"
  <Catalog>
    <col0>            s = \t      sortString(gvars.substring(j, j  1), 1)   Gas Giants =   ints[10][4  8  j]   systems  CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 11: {//Worlds"
  <Catalog>
    <col0>        case 11: {//Worlds</col0>
  </Catalog>
 
"          for (int j = 0; j < nworlds; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < nworlds; j) {</col0>
  </Catalog>
 
"            if (ints[11][j] > 0) {"
  <Catalog>
    <col0>            if (ints[11][j] > 0) {</col0>
  </Catalog>
 
"              s += "\t    " + j + " = " + ints[11][j] + " systems" + CRLF;"
  <Catalog>
    <col0>              s = \t      j   =   ints[11][j]   systems  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 12: {//Allied"
  <Catalog>
    <col0>        case 12: {//Allied</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case 13: {//Stellar"
  <Catalog>
    <col0>        case 13: {//Stellar</col0>
  </Catalog>
 
"          String[] stellars = {"1", "2", "3", "4", "O", "B", "A", "F", "G", "K","
  <Catalog>
    <col0>          String[] stellars = {1, 2, 3, 4, O, B, A, F, G, K</col0>
  </Catalog>
 
"            "M", "Ia", "Ib", "II", "III", "IV", "V", "VI", "VII", "D", "BD","
  <Catalog>
    <col0>            M, Ia, Ib, II, III, IV, V, VI, VII, D, BD</col0>
  </Catalog>
 
"            "Companion"};"
  <Catalog>
    <col0>            Companion};</col0>
  </Catalog>
 
"          for (int j = 0; j < stellars.length; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < stellars.length; j) {</col0>
  </Catalog>
 
"            t = "";"
  <Catalog>
    <col0>            t = ;</col0>
  </Catalog>
 
"            if (j > 3 & j < 11) {"
  <Catalog>
    <col0>            if (j > 3 & j < 11) {</col0>
  </Catalog>
 
"              t = " Color";"
  <Catalog>
    <col0>              t =  Color;</col0>
  </Catalog>
 
"            } else if (j > 10 & j < stellars.length - 4) {"
  <Catalog>
    <col0>            } else if (j > 10 & j < stellars.length - 4) {</col0>
  </Catalog>
 
"              t = " Size";"
  <Catalog>
    <col0>              t =  Size;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            s += "\t       " + stellars[j] + " Stars = " + CRLF;"
  <Catalog>
    <col0>            s = \t         stellars[j]   Stars =   CRLF;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (ra[0] != "") {"
  <Catalog>
    <col0>      if (ra[0] != ) {</col0>
  </Catalog>
 
"        for (String ra1 : ra) {"
  <Catalog>
    <col0>        for (String ra1 : ra) {</col0>
  </Catalog>
 
"          s += "\t        " + ra1 + " = " + CRLF;"
  <Catalog>
    <col0>          s = \t          ra1   =   CRLF;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        //</editor-fold>"
  <Catalog>
    <col0>        //</editor-fold></col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    return s;"
  <Catalog>
    <col0>    return s;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String sortString(String portion, int len) {"
  <Catalog>
    <col0>  private String sortString(String portion, int len) {</col0>
  </Catalog>
 
"    String string = "";"
  <Catalog>
    <col0>    String string = ;</col0>
  </Catalog>
 
"    String[] t = new String[portion.length() / len];"
  <Catalog>
    <col0>    String[] t = new String[portion.length() / len];</col0>
  </Catalog>
 
"    for (int j = 0; j < portion.length(); j += len) {"
  <Catalog>
    <col0>    for (int j = 0; j < portion.length(); j = len) {</col0>
  </Catalog>
 
"      t[j] = portion.substring(j * len, (j + 1) * len);"
  <Catalog>
    <col0>      t[j] = portion.substring(j * len, (j  1) * len);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    Arrays.sort(t);"
  <Catalog>
    <col0>    Arrays.sort(t);</col0>
  </Catalog>
 
"    portion = "";"
  <Catalog>
    <col0>    portion = ;</col0>
  </Catalog>
 
"    for (int j = 0; j < t.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < t.length; j) {</col0>
  </Catalog>
 
"      portion += t[j];"
  <Catalog>
    <col0>      portion = t[j];</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return portion;"
  <Catalog>
    <col0>    return portion;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private int[] sortInts(String portion) {"
  <Catalog>
    <col0>  private int[] sortInts(String portion) {</col0>
  </Catalog>
 
"    num = portion.split((",")).length;"
  <Catalog>
    <col0>    num = portion.split((</col0>
    <col1>)).length;</col1>
  </Catalog>
 
"    int[] ra = new int[portion.split(",").length];"
  <Catalog>
    <col0>    int[] ra = new int[portion.split(</col0>
    <col1>).length];</col1>
  </Catalog>
 
"    for (int j = 0; j < ra.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < ra.length; j) {</col0>
  </Catalog>
 
"      ra[j] = Integer.parseInt(portion.split(",")[j]);"
  <Catalog>
    <col0>      ra[j] = Integer.parseInt(portion.split(</col0>
    <col1>)[j]);</col1>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    Arrays.sort(ra);"
  <Catalog>
    <col0>    Arrays.sort(ra);</col0>
  </Catalog>
 
"    num = ra.length;"
  <Catalog>
    <col0>    num = ra.length;</col0>
  </Catalog>
 
"    for (int j = num - 1; j >= 0; j--) {"
  <Catalog>
    <col0>    for (int j = num - 1; j >= 0; j--) {</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    return ra;"
  <Catalog>
    <col0>    return ra;</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public static void createSubPic() {"
  <Catalog>
    <col0>  public static void createSubPic() {</col0>
  </Catalog>
 
"    int xo = 0;"
  <Catalog>
    <col0>    int xo = 0;</col0>
  </Catalog>
 
"    int yo = 0;"
  <Catalog>
    <col0>    int yo = 0;</col0>
  </Catalog>
 
"    int h;"
  <Catalog>
    <col0>    int h;</col0>
  </Catalog>
 
"    int w;"
  <Catalog>
    <col0>    int w;</col0>
  </Catalog>
 
"    int l;"
  <Catalog>
    <col0>    int l;</col0>
  </Catalog>
 
"    int l3;"
  <Catalog>
    <col0>    int l3;</col0>
  </Catalog>
 
"    int l4;"
  <Catalog>
    <col0>    int l4;</col0>
  </Catalog>
 
"    int l5;"
  <Catalog>
    <col0>    int l5;</col0>
  </Catalog>
 
"    int t;"
  <Catalog>
    <col0>    int t;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      subw = (int) (panel4Sys.getWidth() / 8);"
  <Catalog>
    <col0>      subw = (int) (panel4Sys.getWidth() / 8);</col0>
  </Catalog>
 
"      subh = (int) (panel4Sys.getHeight() / 10.5);"
  <Catalog>
    <col0>      subh = (int) (panel4Sys.getHeight() / 10.5);</col0>
  </Catalog>
 
"      Graphics g = panel4Sys.getGraphics();"
  <Catalog>
    <col0>      Graphics g = panel4Sys.getGraphics();</col0>
  </Catalog>
 
"      Graphics2D g2 = (Graphics2D) g;"
  <Catalog>
    <col0>      Graphics2D g2 = (Graphics2D) g;</col0>
  </Catalog>
 
"      g2.setBackground(Color.white);"
  <Catalog>
    <col0>      g2.setBackground(Color.white);</col0>
  </Catalog>
 
"      g2.clearRect(0, 0, panel4Sys.getWidth(), panel4Sys.getHeight());"
  <Catalog>
    <col0>      g2.clearRect(0, 0, panel4Sys.getWidth(), panel4Sys.getHeight());</col0>
  </Catalog>
 
"      g2.setColor(Color.white);"
  <Catalog>
    <col0>      g2.setColor(Color.white);</col0>
  </Catalog>
 
"      Color col;"
  <Catalog>
    <col0>      Color col;</col0>
  </Catalog>
 
"      for (int j = 0; j < jcb4Sys.getItemCount(); j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < jcb4Sys.getItemCount(); j) {</col0>
  </Catalog>
 
"        String xy = jcb4Sys.getItemAt(j).toString().substring(0, 4);"
  <Catalog>
    <col0>        String xy = jcb4Sys.getItemAt(j).toString().substring(0, 4);</col0>
  </Catalog>
 
"        left = Integer.parseInt(xy.substring(0, 2));"
  <Catalog>
    <col0>        left = Integer.parseInt(xy.substring(0, 2));</col0>
  </Catalog>
 
"        top = Integer.parseInt(xy.substring(2, 4));"
  <Catalog>
    <col0>        top = Integer.parseInt(xy.substring(2, 4));</col0>
  </Catalog>
 
"        while (left > 8) {"
  <Catalog>
    <col0>        while (left > 8) {</col0>
  </Catalog>
 
"          left -= 8;"
  <Catalog>
    <col0>          left -= 8;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        left -= 1;"
  <Catalog>
    <col0>        left -= 1;</col0>
  </Catalog>
 
"        while (top > 10) {"
  <Catalog>
    <col0>        while (top > 10) {</col0>
  </Catalog>
 
"          top -= 10;"
  <Catalog>
    <col0>          top -= 10;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        top -= 1;"
  <Catalog>
    <col0>        top -= 1;</col0>
  </Catalog>
 
"        int mod = 0;"
  <Catalog>
    <col0>        int mod = 0;</col0>
  </Catalog>
 
"        if (left % 2 == 1) {"
  <Catalog>
    <col0>        if (left % 2 == 1) {</col0>
  </Catalog>
 
"          mod += subh / 2;"
  <Catalog>
    <col0>          mod = subh / 2;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        col = Color.white;"
  <Catalog>
    <col0>        col = Color.white;</col0>
  </Catalog>
 
"        switch (shape) {"
  <Catalog>
    <col0>        switch (shape) {</col0>
  </Catalog>
 
"          case "Square":"
  <Catalog>
    <col0>          case Square:</col0>
  </Catalog>
 
"            //"
  <Catalog>
    <col0>            //</col0>
  </Catalog>
 
"            if (j == jcb4Sys.getSelectedIndex()) {"
  <Catalog>
    <col0>            if (j == jcb4Sys.getSelectedIndex()) {</col0>
  </Catalog>
 
"              g.setColor(getTASColor());"
  <Catalog>
    <col0>              g.setColor(getTASColor());</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (j < jcb4Sys.getSelectedIndex() | j > jcb4Sys.getSelectedIndex()) {"
  <Catalog>
    <col0>            if (j < jcb4Sys.getSelectedIndex() | j > jcb4Sys.getSelectedIndex()) {</col0>
  </Catalog>
 
"              g.setColor(col);"
  <Catalog>
    <col0>              g.setColor(col);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            g2.fillRect((left * subw), mod + (top * subh), (int) (subw * 0.8),"
  <Catalog>
    <col0>            g2.fillRect((left * subw), mod  (top * subh), (int) (subw * 0.8),</col0>
  </Catalog>
 
"              (int) (subw * 0.8));"
  <Catalog>
    <col0>              (int) (subw * 0.8));</col0>
  </Catalog>
 
"            g2.setPaint(Color.black);"
  <Catalog>
    <col0>            g2.setPaint(Color.black);</col0>
  </Catalog>
 
"            g2.drawRect((left * subw), mod + (top * subh), (int) (subw * 0.8),"
  <Catalog>
    <col0>            g2.drawRect((left * subw), mod  (top * subh), (int) (subw * 0.8),</col0>
  </Catalog>
 
"              (int) (subw * 0.8));"
  <Catalog>
    <col0>              (int) (subw * 0.8));</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          case "Round":"
  <Catalog>
    <col0>          case Round:</col0>
  </Catalog>
 
"            //Allegiance"
  <Catalog>
    <col0>            //Allegiance</col0>
  </Catalog>
 
"            System.out.println("" + j + " = " + jcb4Sys.getItemAt(j).toString());"
  <Catalog>
    <col0>            System.out.println(  j   =   jcb4Sys.getItemAt(j).toString());</col0>
  </Catalog>
 
"            if (j == jcb4Sys.getSelectedIndex()) {"
  <Catalog>
    <col0>            if (j == jcb4Sys.getSelectedIndex()) {</col0>
  </Catalog>
 
"              g.setColor(getTASColor());"
  <Catalog>
    <col0>              g.setColor(getTASColor());</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            if (j < jcb4Sys.getSelectedIndex() | j > jcb4Sys.getSelectedIndex()) {"
  <Catalog>
    <col0>            if (j < jcb4Sys.getSelectedIndex() | j > jcb4Sys.getSelectedIndex()) {</col0>
  </Catalog>
 
"              g.setColor(col);"
  <Catalog>
    <col0>              g.setColor(col);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            g2.fillOval((left * subw), mod + (top * subh), (int) (subw * 0.8),"
  <Catalog>
    <col0>            g2.fillOval((left * subw), mod  (top * subh), (int) (subw * 0.8),</col0>
  </Catalog>
 
"              (int) (subw * 0.8));"
  <Catalog>
    <col0>              (int) (subw * 0.8));</col0>
  </Catalog>
 
"            g2.setPaint(Color.black);"
  <Catalog>
    <col0>            g2.setPaint(Color.black);</col0>
  </Catalog>
 
"            g2.drawOval((left * subw), mod + (top * subh), (int) (subw * 0.8),"
  <Catalog>
    <col0>            g2.drawOval((left * subw), mod  (top * subh), (int) (subw * 0.8),</col0>
  </Catalog>
 
"              (int) (subw * 0.8));"
  <Catalog>
    <col0>              (int) (subw * 0.8));</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"          case "Hex":"
  <Catalog>
    <col0>          case Hex:</col0>
  </Catalog>
 
"            // Trade"
  <Catalog>
    <col0>            // Trade</col0>
  </Catalog>
 
"            h = subh;"
  <Catalog>
    <col0>            h = subh;</col0>
  </Catalog>
 
"            w = h * 11 / 8;"
  <Catalog>
    <col0>            w = h * 11 / 8;</col0>
  </Catalog>
 
"            l3 = w * 3 / 11;"
  <Catalog>
    <col0>            l3 = w * 3 / 11;</col0>
  </Catalog>
 
"            l4 = w * 4 / 11;"
  <Catalog>
    <col0>            l4 = w * 4 / 11;</col0>
  </Catalog>
 
"            l5 = w * 5 / 11;"
  <Catalog>
    <col0>            l5 = w * 5 / 11;</col0>
  </Catalog>
 
"            xo = (left * (w * 8 / 11));"
  <Catalog>
    <col0>            xo = (left * (w * 8 / 11));</col0>
  </Catalog>
 
"            yo = mod + (top * subh);"
  <Catalog>
    <col0>            yo = mod  (top * subh);</col0>
  </Catalog>
 
"            Point a = new Point(l3, 0);"
  <Catalog>
    <col0>            Point a = new Point(l3, 0);</col0>
  </Catalog>
 
"            Point b = new Point(l3 + l5, 0);"
  <Catalog>
    <col0>            Point b = new Point(l3  l5, 0);</col0>
  </Catalog>
 
"            Point c = new Point(l5 + (l3 * 2), l4);"
  <Catalog>
    <col0>            Point c = new Point(l5  (l3 * 2), l4);</col0>
  </Catalog>
 
"            Point d = new Point(l3 + l5, (l4 * 2));"
  <Catalog>
    <col0>            Point d = new Point(l3  l5, (l4 * 2));</col0>
  </Catalog>
 
"            Point e = new Point(l3, (l4 * 2));"
  <Catalog>
    <col0>            Point e = new Point(l3, (l4 * 2));</col0>
  </Catalog>
 
"            Point f = new Point(0, l4);"
  <Catalog>
    <col0>            Point f = new Point(0, l4);</col0>
  </Catalog>
 
"            Point[] points = new Point[]{a, b, c, d, e, f};"
  <Catalog>
    <col0>            Point[] points = new Point[]{a, b, c, d, e, f};</col0>
  </Catalog>
 
"            Polygon p = new Polygon();"
  <Catalog>
    <col0>            Polygon p = new Polygon();</col0>
  </Catalog>
 
"            g.setColor(Color.white);"
  <Catalog>
    <col0>            g.setColor(Color.white);</col0>
  </Catalog>
 
"            if (j == jcb4Sys.getSelectedIndex()) {"
  <Catalog>
    <col0>            if (j == jcb4Sys.getSelectedIndex()) {</col0>
  </Catalog>
 
"              g.setColor(getTASColor());"
  <Catalog>
    <col0>              g.setColor(getTASColor());</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            for (Point point : points) {"
  <Catalog>
    <col0>            for (Point point : points) {</col0>
  </Catalog>
 
"              x = (int) (point.getX()) + xo;"
  <Catalog>
    <col0>              x = (int) (point.getX())  xo;</col0>
  </Catalog>
 
"              y = (int) (point.getY()) + yo;"
  <Catalog>
    <col0>              y = (int) (point.getY())  yo;</col0>
  </Catalog>
 
"              p.addPoint(x, y);"
  <Catalog>
    <col0>              p.addPoint(x, y);</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"            g.fillPolygon(p);"
  <Catalog>
    <col0>            g.fillPolygon(p);</col0>
  </Catalog>
 
"            g.setColor(Color.black);"
  <Catalog>
    <col0>            g.setColor(Color.black);</col0>
  </Catalog>
 
"            g.drawPolygon(p);"
  <Catalog>
    <col0>            g.drawPolygon(p);</col0>
  </Catalog>
 
"            break;"
  <Catalog>
    <col0>            break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (NumberFormatException e) {"
  <Catalog>
    <col0>    } catch (NumberFormatException e) {</col0>
  </Catalog>
 
"      System.out.println("9339" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(9339   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void createWorldPic() {"
  <Catalog>
    <col0>  private void createWorldPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.counter = "World";"
  <Catalog>
    <col0>    Panel4T5CounterMaker.counter = World;</col0>
  </Catalog>
 
"//    Panel4T5CounterMaker.createWorldPic();"
  <Catalog>
    <col0>//    Panel4T5CounterMaker.createWorldPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createSDBPic() {"
  <Catalog>
    <col0>  private static void createSDBPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createSDBPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createSDBPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createSquadronPic() {"
  <Catalog>
    <col0>  private static void createSquadronPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createSquadronPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createSquadronPic();</col0>
  </Catalog>
 
"//    createCounters("Squadrons");"
  <Catalog>
    <col0>//    createCounters(Squadrons);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createDefBatPic() {"
  <Catalog>
    <col0>  private static void createDefBatPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createDefBatPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createDefBatPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createTroopPic() {"
  <Catalog>
    <col0>  private static void createTroopPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createTroopPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createTroopPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createPopPic() {"
  <Catalog>
    <col0>  private static void createPopPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createPopPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createPopPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createBeltPic() {"
  <Catalog>
    <col0>  private static void createBeltPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createBeltPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createBeltPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createGasPic() {"
  <Catalog>
    <col0>  private static void createGasPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createGasPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createGasPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private static void createWorldsPic() {"
  <Catalog>
    <col0>  private static void createWorldsPic() {</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.createWorldsPic();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.createWorldsPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void writeXMLNeighbours() {"
  <Catalog>
    <col0>  private void writeXMLNeighbours() {</col0>
  </Catalog>
 
"    String s = "";"
  <Catalog>
    <col0>    String s = ;</col0>
  </Catalog>
 
"    ListModel<String> dlm = jl4Jump.getModel();"
  <Catalog>
    <col0>    ListModel<String> dlm = jl4Jump.getModel();</col0>
  </Catalog>
 
"//    for (int i = 0; i < 10; i++) {"
  <Catalog>
    <col0>//    for (int i = 0; i < 10; i) {</col0>
  </Catalog>
 
"//      js4Dist.setValue(i);"
  <Catalog>
    <col0>//      js4Dist.setValue(i);</col0>
  </Catalog>
 
"    dlm = jl4Jump.getModel();"
  <Catalog>
    <col0>    dlm = jl4Jump.getModel();</col0>
  </Catalog>
 
"    for (int j = 0; j < dlm.getSize(); j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < dlm.getSize(); j) {</col0>
  </Catalog>
 
"      String ss = dlm.getElementAt(j);"
  <Catalog>
    <col0>      String ss = dlm.getElementAt(j);</col0>
  </Catalog>
 
"      int len = ss.length();"
  <Catalog>
    <col0>      int len = ss.length();</col0>
  </Catalog>
 
"      if (len > 4) {"
  <Catalog>
    <col0>      if (len > 4) {</col0>
  </Catalog>
 
"        try {"
  <Catalog>
    <col0>        try {</col0>
  </Catalog>
 
"          s += "\"" + ss.substring(0, 4) + "\"" + CRLF;"
  <Catalog>
    <col0>          s = \  ss.substring(0, 4)  \  CRLF;</col0>
  </Catalog>
 
"        } catch (Exception e) {"
  <Catalog>
    <col0>        } catch (Exception e) {</col0>
  </Catalog>
 
"          System.out.println("" + " = " + e.toString() + " - " + s);"
  <Catalog>
    <col0>          System.out.println(   =   e.toString()   -   s);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    System.out.println(s);"
  <Catalog>
    <col0>    System.out.println(s);</col0>
  </Catalog>
 
"    String loc = Panel4T5Locator.jcb4Sys.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    String loc = Panel4T5Locator.jcb4Sys.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    String name = loc + " - Jump " + js4Dist.getValue();"
  <Catalog>
    <col0>    String name = loc   - Jump   js4Dist.getValue();</col0>
  </Catalog>
 
"    Panel4T5Scripting.Folder.setSelectedItem("Routes");"
  <Catalog>
    <col0>    Panel4T5Scripting.Folder.setSelectedItem(Routes);</col0>
  </Catalog>
 
"    Panel4T5Scripting.Name.setText(name);"
  <Catalog>
    <col0>    Panel4T5Scripting.Name.setText(name);</col0>
  </Catalog>
 
"    GlobalMethods.saveTextFile(_JS + FS + "Routes", name, ".txt", s);"
  <Catalog>
    <col0>    GlobalMethods.saveTextFile(_JS  FS  Routes, name, .txt, s);</col0>
  </Catalog>
 
"    writeXML();"
  <Catalog>
    <col0>    writeXML();</col0>
  </Catalog>
 
"    showFullNames();"
  <Catalog>
    <col0>    showFullNames();</col0>
  </Catalog>
 
"//    }"
  <Catalog>
    <col0>//    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb2cb(JComboBox<String> jcb) {"
  <Catalog>
    <col0>  private void jcb2cb(JComboBox<String> jcb) {</col0>
  </Catalog>
 
"    if (running) {"
  <Catalog>
    <col0>    if (running) {</col0>
  </Catalog>
 
"      if (jcb != null) {"
  <Catalog>
    <col0>      if (jcb != null) {</col0>
  </Catalog>
 
"        if (jcb.getSelectedIndex() > -1) {"
  <Catalog>
    <col0>        if (jcb.getSelectedIndex() > -1) {</col0>
  </Catalog>
 
"          if (!jcb.getSelectedItem().toString().equals("")) {"
  <Catalog>
    <col0>          if (!jcb.getSelectedItem().toString().equals()) {</col0>
  </Catalog>
 
"            String txt = jcb.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>            String txt = jcb.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"            StringSelection sel = new StringSelection(txt);"
  <Catalog>
    <col0>            StringSelection sel = new StringSelection(txt);</col0>
  </Catalog>
 
"            cb.setContents(sel, null);"
  <Catalog>
    <col0>            cb.setContents(sel, null);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf2cb(JTextField jtf) {"
  <Catalog>
    <col0>  private void jtf2cb(JTextField jtf) {</col0>
  </Catalog>
 
"    String txt = jtf.getText().trim();"
  <Catalog>
    <col0>    String txt = jtf.getText().trim();</col0>
  </Catalog>
 
"    StringSelection sel = new StringSelection(txt + CRLF);"
  <Catalog>
    <col0>    StringSelection sel = new StringSelection(txt  CRLF);</col0>
  </Catalog>
 
"    cb.setContents(sel, null);"
  <Catalog>
    <col0>    cb.setContents(sel, null);</col0>
  </Catalog>
 
"    System.out.println(sel);"
  <Catalog>
    <col0>    System.out.println(sel);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl2cb(JLabel jl) {"
  <Catalog>
    <col0>  private void jl2cb(JLabel jl) {</col0>
  </Catalog>
 
"    String txt = jl.getText().trim();"
  <Catalog>
    <col0>    String txt = jl.getText().trim();</col0>
  </Catalog>
 
"    StringSelection sel = new StringSelection(txt);"
  <Catalog>
    <col0>    StringSelection sel = new StringSelection(txt);</col0>
  </Catalog>
 
"    cb.setContents(sel, null);"
  <Catalog>
    <col0>    cb.setContents(sel, null);</col0>
  </Catalog>
 
"    System.out.println(sel);"
  <Catalog>
    <col0>    System.out.println(sel);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private String updateNPC() {"
  <Catalog>
    <col0>  private String updateNPC() {</col0>
  </Catalog>
 
"    return GlobalMethods.showNPC();"
  <Catalog>
    <col0>    return GlobalMethods.showNPC();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //////////////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>  //////////////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"  private void jcb4SecAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4SecAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      addSubsectors();"
  <Catalog>
    <col0>      addSubsectors();</col0>
  </Catalog>
 
"      setXY();"
  <Catalog>
    <col0>      setXY();</col0>
  </Catalog>
 
"      showXY();"
  <Catalog>
    <col0>      showXY();</col0>
  </Catalog>
 
"      jta4Sys.setText("");"
  <Catalog>
    <col0>      jta4Sys.setText();</col0>
  </Catalog>
 
"      dcbm = new DefaultComboBoxModel<String>();"
  <Catalog>
    <col0>      dcbm = new DefaultComboBoxModel<String>();</col0>
  </Catalog>
 
"      jcb4Sys.setModel(dcbm);"
  <Catalog>
    <col0>      jcb4Sys.setModel(dcbm);</col0>
  </Catalog>
 
"      jcb4All.setModel(cbm);"
  <Catalog>
    <col0>      jcb4All.setModel(cbm);</col0>
  </Catalog>
 
"      boolean ok = true;"
  <Catalog>
    <col0>      boolean ok = true;</col0>
  </Catalog>
 
"      String s = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>      String s = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"      for (int j = 0; j < cbm.getSize(); j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < cbm.getSize(); j) {</col0>
  </Catalog>
 
"        if (cbm.getElementAt(j).equals(s)) {"
  <Catalog>
    <col0>        if (cbm.getElementAt(j).equals(s)) {</col0>
  </Catalog>
 
"          ok = false;"
  <Catalog>
    <col0>          ok = false;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (ok) {"
  <Catalog>
    <col0>      if (ok) {</col0>
  </Catalog>
 
"        jcb4All.addItem(s);"
  <Catalog>
    <col0>        jcb4All.addItem(s);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      jcb4All.setSelectedItem(s);"
  <Catalog>
    <col0>      jcb4All.setSelectedItem(s);</col0>
  </Catalog>
 
"//      jcb2cb(jcb4Sec);"
  <Catalog>
    <col0>//      jcb2cb(jcb4Sec);</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("2114" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(2114   =   e.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public void jcb4SubAction(ActionEvent evt) {"
  <Catalog>
    <col0>  public void jcb4SubAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    addSystems();"
  <Catalog>
    <col0>    addSystems();</col0>
  </Catalog>
 
"    if (jcb4Sys.getItemCount() > 0) {"
  <Catalog>
    <col0>    if (jcb4Sys.getItemCount() > 0) {</col0>
  </Catalog>
 
"      jcb4Sys.setSelectedIndex(selected);"
  <Catalog>
    <col0>      jcb4Sys.setSelectedIndex(selected);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    panel4Sub.unColor();"
  <Catalog>
    <col0>    panel4Sub.unColor();</col0>
  </Catalog>
 
"    whiten();"
  <Catalog>
    <col0>    whiten();</col0>
  </Catalog>
 
"    setUWP();"
  <Catalog>
    <col0>    setUWP();</col0>
  </Catalog>
 
"    writeSectorInfo();"
  <Catalog>
    <col0>    writeSectorInfo();</col0>
  </Catalog>
 
"    writeSubsectorInfo();"
  <Catalog>
    <col0>    writeSubsectorInfo();</col0>
  </Catalog>
 
"    loadSaved();"
  <Catalog>
    <col0>    loadSaved();</col0>
  </Catalog>
 
"//    jcb2cb(jcb4Sub);"
  <Catalog>
    <col0>//    jcb2cb(jcb4Sub);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SysAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4SysAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    setSubMinMaxXY(jcb4Sys.getSelectedItem().toString().substring(0, 4));"
  <Catalog>
    <col0>    setSubMinMaxXY(jcb4Sys.getSelectedItem().toString().substring(0, 4));</col0>
  </Catalog>
 
"    jcb4Star.removeAllItems();"
  <Catalog>
    <col0>    jcb4Star.removeAllItems();</col0>
  </Catalog>
 
"    showDetails();"
  <Catalog>
    <col0>    showDetails();</col0>
  </Catalog>
 
"    setUWP();"
  <Catalog>
    <col0>    setUWP();</col0>
  </Catalog>
 
"    js4DistStateChanged(ce);"
  <Catalog>
    <col0>    js4DistStateChanged(ce);</col0>
  </Catalog>
 
"    jta4OrbMouseClicked(me);"
  <Catalog>
    <col0>    jta4OrbMouseClicked(me);</col0>
  </Catalog>
 
"    showStrength();"
  <Catalog>
    <col0>    showStrength();</col0>
  </Catalog>
 
"    doJumps();"
  <Catalog>
    <col0>    doJumps();</col0>
  </Catalog>
 
"    jLabel4.setText(jcb4Sys.getSelectedItem().toString().trim() + " - " + UWP);"
  <Catalog>
    <col0>    jLabel4.setText(jcb4Sys.getSelectedItem().toString().trim()   -   UWP);</col0>
  </Catalog>
 
"    setLang();"
  <Catalog>
    <col0>    setLang();</col0>
  </Catalog>
 
"    updateChart();"
  <Catalog>
    <col0>    updateChart();</col0>
  </Catalog>
 
"    loadSaved();"
  <Catalog>
    <col0>    loadSaved();</col0>
  </Catalog>
 
"    setLang();"
  <Catalog>
    <col0>    setLang();</col0>
  </Catalog>
 
"    updateChart();"
  <Catalog>
    <col0>    updateChart();</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.bc[0] = "Mainworld";"
  <Catalog>
    <col0>    Panel4T5CounterMaker.bc[0] = Mainworld;</col0>
  </Catalog>
 
"    String Sec = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sec = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String Sub = jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sub = jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String Sys = jcb4Sys.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sys = jcb4Sys.getSelectedItem().toString();</col0>
  </Catalog>
 
"    txt2cb(Sec + "/" + Sub + "/" + Sys);"
  <Catalog>
    <col0>    txt2cb(Sec  /  Sub  /  Sys);</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.Folder.setSelectedItem("World");"
  <Catalog>
    <col0>    Panel4T5CounterMaker.Folder.setSelectedItem(World);</col0>
  </Catalog>
 
"    Panel4T5Troop.systemChange();"
  <Catalog>
    <col0>    Panel4T5Troop.systemChange();</col0>
  </Catalog>
 
"    Panel4T5Squadron.systemChange();"
  <Catalog>
    <col0>    Panel4T5Squadron.systemChange();</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.newWay();"
  <Catalog>
    <col0>    Panel4T5CounterMaker.newWay();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4SysClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void panel4SysClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    findSystem(panel4Sys.getToolTipText());"
  <Catalog>
    <col0>    findSystem(panel4Sys.getToolTipText());</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      if (shape == "Square") {"
  <Catalog>
    <col0>      if (shape == Square) {</col0>
  </Catalog>
 
"        //Trade in hexes"
  <Catalog>
    <col0>        //Trade in hexes</col0>
  </Catalog>
 
"        shape = "Hex";"
  <Catalog>
    <col0>        shape = Hex;</col0>
  </Catalog>
 
"      } else if (shape == "Hex") {"
  <Catalog>
    <col0>      } else if (shape == Hex) {</col0>
  </Catalog>
 
"        //Allegiance in Rounds"
  <Catalog>
    <col0>        //Allegiance in Rounds</col0>
  </Catalog>
 
"        shape = "Round";"
  <Catalog>
    <col0>        shape = Round;</col0>
  </Catalog>
 
"      } else if (shape == "Round") {"
  <Catalog>
    <col0>      } else if (shape == Round) {</col0>
  </Catalog>
 
"        //War in Squares"
  <Catalog>
    <col0>        //War in Squares</col0>
  </Catalog>
 
"        shape = "Square";"
  <Catalog>
    <col0>        shape = Square;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    loadSaved();"
  <Catalog>
    <col0>    loadSaved();</col0>
  </Catalog>
 
"    String Sec = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sec = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String Sub = jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sub = jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String Sys = jcb4Sys.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sys = jcb4Sys.getSelectedItem().toString();</col0>
  </Catalog>
 
"    txt2cb(Sec + "/" + Sub + "/" + Sys);"
  <Catalog>
    <col0>    txt2cb(Sec  /  Sub  /  Sys);</col0>
  </Catalog>
 
"////    createWorldPic();"
  <Catalog>
    <col0>////    createWorldPic();</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.Folder.setSelectedItem("World");"
  <Catalog>
    <col0>    Panel4T5CounterMaker.Folder.setSelectedItem(World);</col0>
  </Catalog>
 
"    Panel4T5Troop.systemChange();"
  <Catalog>
    <col0>    Panel4T5Troop.systemChange();</col0>
  </Catalog>
 
"    Panel4T5Squadron.systemChange();"
  <Catalog>
    <col0>    Panel4T5Squadron.systemChange();</col0>
  </Catalog>
 
"    ta4Read.grabFocus();"
  <Catalog>
    <col0>    ta4Read.grabFocus();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4SysMove(MouseEvent evt) {"
  <Catalog>
    <col0>  private void panel4SysMove(MouseEvent evt) {</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      x = (1 + (evt.getX() / subw));"
  <Catalog>
    <col0>      x = (1  (evt.getX() / subw));</col0>
  </Catalog>
 
"      y = (1 + (evt.getY() / subh));"
  <Catalog>
    <col0>      y = (1  (evt.getY() / subh));</col0>
  </Catalog>
 
"      if (x % 2 == 0) {"
  <Catalog>
    <col0>      if (x % 2 == 0) {</col0>
  </Catalog>
 
"        y = (1 + ((evt.getY() - (subh / 2)) / subh));"
  <Catalog>
    <col0>        y = (1  ((evt.getY() - (subh / 2)) / subh));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      switch (jcb4Sub.getSelectedItem().toString().substring(0, 1)) {"
  <Catalog>
    <col0>      switch (jcb4Sub.getSelectedItem().toString().substring(0, 1)) {</col0>
  </Catalog>
 
"        case "A": {"
  <Catalog>
    <col0>        case A: {</col0>
  </Catalog>
 
"          x += 0;"
  <Catalog>
    <col0>          x = 0;</col0>
  </Catalog>
 
"          y += 0;"
  <Catalog>
    <col0>          y = 0;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "B": {"
  <Catalog>
    <col0>        case B: {</col0>
  </Catalog>
 
"          x += 8;"
  <Catalog>
    <col0>          x = 8;</col0>
  </Catalog>
 
"          y += 0;"
  <Catalog>
    <col0>          y = 0;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "C": {"
  <Catalog>
    <col0>        case C: {</col0>
  </Catalog>
 
"          x += 16;"
  <Catalog>
    <col0>          x = 16;</col0>
  </Catalog>
 
"          y += 0;"
  <Catalog>
    <col0>          y = 0;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "D": {"
  <Catalog>
    <col0>        case D: {</col0>
  </Catalog>
 
"          x += 24;"
  <Catalog>
    <col0>          x = 24;</col0>
  </Catalog>
 
"          y += 0;"
  <Catalog>
    <col0>          y = 0;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "E": {"
  <Catalog>
    <col0>        case E: {</col0>
  </Catalog>
 
"          x += 0;"
  <Catalog>
    <col0>          x = 0;</col0>
  </Catalog>
 
"          y += 10;"
  <Catalog>
    <col0>          y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "F": {"
  <Catalog>
    <col0>        case F: {</col0>
  </Catalog>
 
"          x += 8;"
  <Catalog>
    <col0>          x = 8;</col0>
  </Catalog>
 
"          y += 10;"
  <Catalog>
    <col0>          y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "G": {"
  <Catalog>
    <col0>        case G: {</col0>
  </Catalog>
 
"          x += 16;"
  <Catalog>
    <col0>          x = 16;</col0>
  </Catalog>
 
"          y += 10;"
  <Catalog>
    <col0>          y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "H": {"
  <Catalog>
    <col0>        case H: {</col0>
  </Catalog>
 
"          x += 24;"
  <Catalog>
    <col0>          x = 24;</col0>
  </Catalog>
 
"          y += 10;"
  <Catalog>
    <col0>          y = 10;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "I": {"
  <Catalog>
    <col0>        case I: {</col0>
  </Catalog>
 
"          x += 0;"
  <Catalog>
    <col0>          x = 0;</col0>
  </Catalog>
 
"          y += 20;"
  <Catalog>
    <col0>          y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "J": {"
  <Catalog>
    <col0>        case J: {</col0>
  </Catalog>
 
"          x += 8;"
  <Catalog>
    <col0>          x = 8;</col0>
  </Catalog>
 
"          y += 20;"
  <Catalog>
    <col0>          y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "K": {"
  <Catalog>
    <col0>        case K: {</col0>
  </Catalog>
 
"          x += 16;"
  <Catalog>
    <col0>          x = 16;</col0>
  </Catalog>
 
"          y += 20;"
  <Catalog>
    <col0>          y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "L": {"
  <Catalog>
    <col0>        case L: {</col0>
  </Catalog>
 
"          x += 24;"
  <Catalog>
    <col0>          x = 24;</col0>
  </Catalog>
 
"          y += 20;"
  <Catalog>
    <col0>          y = 20;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "M": {"
  <Catalog>
    <col0>        case M: {</col0>
  </Catalog>
 
"          x += 0;"
  <Catalog>
    <col0>          x = 0;</col0>
  </Catalog>
 
"          y += 30;"
  <Catalog>
    <col0>          y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "N": {"
  <Catalog>
    <col0>        case N: {</col0>
  </Catalog>
 
"          x += 8;"
  <Catalog>
    <col0>          x = 8;</col0>
  </Catalog>
 
"          y += 30;"
  <Catalog>
    <col0>          y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "O": {"
  <Catalog>
    <col0>        case O: {</col0>
  </Catalog>
 
"          x += 16;"
  <Catalog>
    <col0>          x = 16;</col0>
  </Catalog>
 
"          y += 30;"
  <Catalog>
    <col0>          y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "P": {"
  <Catalog>
    <col0>        case P: {</col0>
  </Catalog>
 
"          x += 24;"
  <Catalog>
    <col0>          x = 24;</col0>
  </Catalog>
 
"          y += 30;"
  <Catalog>
    <col0>          y = 30;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (x < 10) {"
  <Catalog>
    <col0>      if (x < 10) {</col0>
  </Catalog>
 
"        X = "0" + x;"
  <Catalog>
    <col0>        X = 0  x;</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        X = "" + x;"
  <Catalog>
    <col0>        X =   x;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (y < 10) {"
  <Catalog>
    <col0>      if (y < 10) {</col0>
  </Catalog>
 
"        Y = "0" + y;"
  <Catalog>
    <col0>        Y = 0  y;</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        Y = "" + y;"
  <Catalog>
    <col0>        Y =   y;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      panel4Sys.setToolTipText("" + X + Y);"
  <Catalog>
    <col0>      panel4Sys.setToolTipText(  X  Y);</col0>
  </Catalog>
 
"      for (int j = 0; j < jcb4Sys.getItemCount(); j++) {"
  <Catalog>
    <col0>      for (int j = 0; j < jcb4Sys.getItemCount(); j) {</col0>
  </Catalog>
 
"        if (jcb4Sys.getItemAt(j).toString().startsWith("" + X + Y)) {"
  <Catalog>
    <col0>        if (jcb4Sys.getItemAt(j).toString().startsWith(  X  Y)) {</col0>
  </Catalog>
 
"          panel4Sys.setToolTipText(jcb4Sys.getItemAt(j).toString().trim());"
  <Catalog>
    <col0>          panel4Sys.setToolTipText(jcb4Sys.getItemAt(j).toString().trim());</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          System.out.println("9023 = " + j);"
  <Catalog>
    <col0>          System.out.println(9023 =   j);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      createSubPic();"
  <Catalog>
    <col0>      createSubPic();</col0>
  </Catalog>
 
"      if (jcb4Sys.getSelectedItem().toString().trim().equals(panel4Sys"
  <Catalog>
    <col0>      if (jcb4Sys.getSelectedItem().toString().trim().equals(panel4Sys</col0>
  </Catalog>
 
"        .getToolTipText())) {"
  <Catalog>
    <col0>        .getToolTipText())) {</col0>
  </Catalog>
 
"        Panel4T5CounterMaker.Folder.setSelectedItem("World");"
  <Catalog>
    <col0>        Panel4T5CounterMaker.Folder.setSelectedItem(World);</col0>
  </Catalog>
 
"        createWorldPic();"
  <Catalog>
    <col0>        createWorldPic();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    } catch (Exception e) {"
  <Catalog>
    <col0>    } catch (Exception e) {</col0>
  </Catalog>
 
"      System.out.println("1062" + " = " + e.toString());"
  <Catalog>
    <col0>      System.out.println(1062   =   e.toString());</col0>
  </Catalog>
 
"      System.out.println("x = " + x);"
  <Catalog>
    <col0>      System.out.println(x =   x);</col0>
  </Catalog>
 
"      System.out.println("X = " + X);"
  <Catalog>
    <col0>      System.out.println(X =   X);</col0>
  </Catalog>
 
"      System.out.println("y = " + y);"
  <Catalog>
    <col0>      System.out.println(y =   y);</col0>
  </Catalog>
 
"      System.out.println("Y = " + Y);"
  <Catalog>
    <col0>      System.out.println(Y =   Y);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void js4DistChange(ChangeEvent evt) {"
  <Catalog>
    <col0>  private void js4DistChange(ChangeEvent evt) {</col0>
  </Catalog>
 
"    if (!js4Dist.getValueIsAdjusting()) {"
  <Catalog>
    <col0>    if (!js4Dist.getValueIsAdjusting()) {</col0>
  </Catalog>
 
"      calcCost();"
  <Catalog>
    <col0>      calcCost();</col0>
  </Catalog>
 
"      doJumps();"
  <Catalog>
    <col0>      doJumps();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4MapClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void panel4MapClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    loadSaved();"
  <Catalog>
    <col0>    loadSaved();</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"//      saveSystemMap();"
  <Catalog>
    <col0>//      saveSystemMap();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4StarAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4StarAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    jcb4All.setSelectedItem("jta4Orb");"
  <Catalog>
    <col0>    jcb4All.setSelectedItem(jta4Orb);</col0>
  </Catalog>
 
"//    jcb2cb(jcb4Star);"
  <Catalog>
    <col0>//    jcb2cb(jcb4Star);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel3Click(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jLabel3Click(MouseEvent evt) {</col0>
  </Catalog>
 
"    String it = jCheckBox2.getText();"
  <Catalog>
    <col0>    String it = jCheckBox2.getText();</col0>
  </Catalog>
 
"    switch (it) {"
  <Catalog>
    <col0>    switch (it) {</col0>
  </Catalog>
 
"      case "Unrefined":"
  <Catalog>
    <col0>      case Unrefined:</col0>
  </Catalog>
 
"        cost = unrefined;"
  <Catalog>
    <col0>        cost = unrefined;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      case "Refined":"
  <Catalog>
    <col0>      case Refined:</col0>
  </Catalog>
 
"        cost = refined;"
  <Catalog>
    <col0>        cost = refined;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String var = "1";"
  <Catalog>
    <col0>    String var = 1;</col0>
  </Catalog>
 
"    var = JOptionPane.showInputDialog(it + " Cost per Ton (KCr)", cost);"
  <Catalog>
    <col0>    var = JOptionPane.showInputDialog(it   Cost per Ton (KCr), cost);</col0>
  </Catalog>
 
"    switch (jCheckBox2.getText()) {"
  <Catalog>
    <col0>    switch (jCheckBox2.getText()) {</col0>
  </Catalog>
 
"      case "Unrefined":"
  <Catalog>
    <col0>      case Unrefined:</col0>
  </Catalog>
 
"        unrefined = Integer.parseInt(var);"
  <Catalog>
    <col0>        unrefined = Integer.parseInt(var);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      case "Refined":"
  <Catalog>
    <col0>      case Refined:</col0>
  </Catalog>
 
"        refined = Integer.parseInt(var);"
  <Catalog>
    <col0>        refined = Integer.parseInt(var);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    calcCost();"
  <Catalog>
    <col0>    calcCost();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb2Action(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb2Action(ActionEvent evt) {</col0>
  </Catalog>
 
"    if (jCheckBox2.isSelected()) {"
  <Catalog>
    <col0>    if (jCheckBox2.isSelected()) {</col0>
  </Catalog>
 
"      jCheckBox2.setText("Refined");"
  <Catalog>
    <col0>      jCheckBox2.setText(Refined);</col0>
  </Catalog>
 
"      jCheckBox2.setToolTipText("" + refined + "KCr per ton");"
  <Catalog>
    <col0>      jCheckBox2.setToolTipText(  refined  KCr per ton);</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      jCheckBox2.setText("Unrefined");"
  <Catalog>
    <col0>      jCheckBox2.setText(Unrefined);</col0>
  </Catalog>
 
"      jCheckBox2.setToolTipText("" + unrefined + "KCr per ton");"
  <Catalog>
    <col0>      jCheckBox2.setToolTipText(  unrefined  KCr per ton);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    calcCost();"
  <Catalog>
    <col0>    calcCost();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb1Action(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb1Action(ActionEvent evt) {</col0>
  </Catalog>
 
"    if (jCheckBox1.isSelected()) {"
  <Catalog>
    <col0>    if (jCheckBox1.isSelected()) {</col0>
  </Catalog>
 
"      jCheckBox1.setText("KdT");"
  <Catalog>
    <col0>      jCheckBox1.setText(KdT);</col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      jCheckBox1.setText("dT");"
  <Catalog>
    <col0>      jCheckBox1.setText(dT);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    calcCost();"
  <Catalog>
    <col0>    calcCost();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jta4OrbClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jta4OrbClick(MouseEvent evt) {</col0>
  </Catalog>
 
"//    jta4Orb.setText("");"
  <Catalog>
    <col0>//    jta4Orb.setText();</col0>
  </Catalog>
 
"    createOrbitDetail();"
  <Catalog>
    <col0>    createOrbitDetail();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SysClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4SysClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      findCapital();"
  <Catalog>
    <col0>      findCapital();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    String Sec = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sec = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String Sub = jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sub = jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String Sys = jcb4Sys.getSelectedItem().toString();"
  <Catalog>
    <col0>    String Sys = jcb4Sys.getSelectedItem().toString();</col0>
  </Catalog>
 
"    txt2cb(Sec + "/" + Sub + "/" + Sys);"
  <Catalog>
    <col0>    txt2cb(Sec  /  Sub  /  Sys);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SecClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4SecClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      downloadOptions();"
  <Catalog>
    <col0>      downloadOptions();</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jcb2cb(jcb4Sec);"
  <Catalog>
    <col0>    jcb2cb(jcb4Sec);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4StarClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4StarClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    jcb4All.setSelectedItem("jta4Sec");"
  <Catalog>
    <col0>    jcb4All.setSelectedItem(jta4Sec);</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        loadTexts();"
  <Catalog>
    <col0>        loadTexts();</col0>
  </Catalog>
 
"//        loadOrbitPics();"
  <Catalog>
    <col0>//        loadOrbitPics();</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        System.out.println("1179" + " = " + e);"
  <Catalog>
    <col0>        System.out.println(1179   =   e);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//    jcb2cb(jcb4Star);"
  <Catalog>
    <col0>//    jcb2cb(jcb4Star);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void SDBsClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void SDBsClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    sdbs1.setText("" + worldupdate("SDBs"));"
  <Catalog>
    <col0>    sdbs1.setText(  worldupdate(SDBs));</col0>
  </Catalog>
 
"    txt2cb("SDB squadrons = " + sdbs1.getText());"
  <Catalog>
    <col0>    txt2cb(SDB squadrons =   sdbs1.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void TroopsClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void TroopsClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    troopunits.setText("" + worldupdate("TROOPUNITS"));"
  <Catalog>
    <col0>    troopunits.setText(  worldupdate(TROOPUNITS));</col0>
  </Catalog>
 
"    txt2cb("Troops = " + troopunits.getText());"
  <Catalog>
    <col0>    txt2cb(Troops =   troopunits.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void RonsClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void RonsClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    squadrons.setText("" + worldupdate("SQUADRONS"));"
  <Catalog>
    <col0>    squadrons.setText(  worldupdate(SQUADRONS));</col0>
  </Catalog>
 
"    txt2cb("Starship squadron pts = " + squadrons.getText());"
  <Catalog>
    <col0>    txt2cb(Starship squadron pts =   squadrons.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void CFClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void CFClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    defbats.setText("" + worldupdate("DEFENCEBATTS"));"
  <Catalog>
    <col0>    defbats.setText(  worldupdate(DEFENCEBATTS));</col0>
  </Catalog>
 
"    txt2cb("World Defence CFs = " + defbats.getText());"
  <Catalog>
    <col0>    txt2cb(World Defence CFs =   defbats.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void SDBs1Click(MouseEvent evt) {"
  <Catalog>
    <col0>  private void SDBs1Click(MouseEvent evt) {</col0>
  </Catalog>
 
"    args[0] = worldupdate("SDBs");"
  <Catalog>
    <col0>    args[0] = worldupdate(SDBs);</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    Panel4T5TableView.main(new String[]{"SDBSquadrons", getpop(), gettl()});"
  <Catalog>
    <col0>    Panel4T5TableView.main(new String[]{SDBSquadrons, getpop(), gettl()});</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void squadronsClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void squadronsClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    args[0] = worldupdate("SQUADRONS");"
  <Catalog>
    <col0>    args[0] = worldupdate(SQUADRONS);</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    Panel4T5TableView.main(new String[]{"MaxStarshipSquadrons", gettl(), sdbs1"
  <Catalog>
    <col0>    Panel4T5TableView.main(new String[]{MaxStarshipSquadrons, gettl(), sdbs1</col0>
  </Catalog>
 
"      .getText(), squadrons.getText()});"
  <Catalog>
    <col0>      .getText(), squadrons.getText()});</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void defbatsClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void defbatsClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    args[0] = worldupdate("DEFENCEBATTS");"
  <Catalog>
    <col0>    args[0] = worldupdate(DEFENCEBATTS);</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    Panel4T5TableView.main("
  <Catalog>
    <col0>    Panel4T5TableView.main(</col0>
  </Catalog>
 
"      new String[]{"DefenceBattalionsCombatFactor", getpop(), gettl(), defbats"
  <Catalog>
    <col0>      new String[]{DefenceBattalionsCombatFactor, getpop(), gettl(), defbats</col0>
  </Catalog>
 
"        .getText()});"
  <Catalog>
    <col0>        .getText()});</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void troopsunitClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void troopsunitClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    args[0] = worldupdate("TROOPUNITS");"
  <Catalog>
    <col0>    args[0] = worldupdate(TROOPUNITS);</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    Panel4T5TableView.main("
  <Catalog>
    <col0>    Panel4T5TableView.main(</col0>
  </Catalog>
 
"      new String[]{"InitialProduction", getpop(), gettl(), troopunits"
  <Catalog>
    <col0>      new String[]{InitialProduction, getpop(), gettl(), troopunits</col0>
  </Catalog>
 
"        .getText()});"
  <Catalog>
    <col0>        .getText()});</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jl4JumpClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;;"
  <Catalog>
    <col0>    boolean DEBUG = false;;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String oldsec = jcb4Sec.getSelectedItem().toString();"
  <Catalog>
    <col0>    String oldsec = jcb4Sec.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String oldsub = jcb4Sub.getSelectedItem().toString();"
  <Catalog>
    <col0>    String oldsub = jcb4Sub.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String oldsys = jcb4Sys.getSelectedItem().toString();"
  <Catalog>
    <col0>    String oldsys = jcb4Sys.getSelectedItem().toString();</col0>
  </Catalog>
 
"    String newsec = sC.getText();"
  <Catalog>
    <col0>    String newsec = sC.getText();</col0>
  </Catalog>
 
"    String newsub = sB.getText();"
  <Catalog>
    <col0>    String newsub = sB.getText();</col0>
  </Catalog>
 
"    String newsys = sS.getText();"
  <Catalog>
    <col0>    String newsys = sS.getText();</col0>
  </Catalog>
 
"    boolean insec = false;"
  <Catalog>
    <col0>    boolean insec = false;</col0>
  </Catalog>
 
"    boolean insub = false;"
  <Catalog>
    <col0>    boolean insub = false;</col0>
  </Catalog>
 
"    boolean insys = false;"
  <Catalog>
    <col0>    boolean insys = false;</col0>
  </Catalog>
 
"    if (oldsec.startsWith(newsec)) {"
  <Catalog>
    <col0>    if (oldsec.startsWith(newsec)) {</col0>
  </Catalog>
 
"      insec = true;"
  <Catalog>
    <col0>      insec = true;</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>        System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"        System.out.println("insec");"
  <Catalog>
    <col0>        System.out.println(insec);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (oldsub.startsWith(newsub)) {"
  <Catalog>
    <col0>    if (oldsub.startsWith(newsub)) {</col0>
  </Catalog>
 
"      insub = true;"
  <Catalog>
    <col0>      insub = true;</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>        System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"        System.out.println("insub");"
  <Catalog>
    <col0>        System.out.println(insub);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (newsys.startsWith(oldsys)) {"
  <Catalog>
    <col0>    if (newsys.startsWith(oldsys)) {</col0>
  </Catalog>
 
"      insys = true;"
  <Catalog>
    <col0>      insys = true;</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.print("" + " = " + "" + CRLF);"
  <Catalog>
    <col0>        System.out.print(   =     CRLF);</col0>
  </Catalog>
 
"        System.out.println("insys");"
  <Catalog>
    <col0>        System.out.println(insys);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      if (!insec) {"
  <Catalog>
    <col0>      if (!insec) {</col0>
  </Catalog>
 
"        jcb4Sec.setSelectedItem(newsec);"
  <Catalog>
    <col0>        jcb4Sec.setSelectedItem(newsec);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (!insub) {"
  <Catalog>
    <col0>      if (!insub) {</col0>
  </Catalog>
 
"        for (int j = 0; j < jcb4Sub.getItemCount(); j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < jcb4Sub.getItemCount(); j) {</col0>
  </Catalog>
 
"          if (jcb4Sub.getItemAt(j).toString().startsWith(sB.getText())) {"
  <Catalog>
    <col0>          if (jcb4Sub.getItemAt(j).toString().startsWith(sB.getText())) {</col0>
  </Catalog>
 
"            jcb4Sub.setSelectedIndex(j);"
  <Catalog>
    <col0>            jcb4Sub.setSelectedIndex(j);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      boolean found = false;"
  <Catalog>
    <col0>      boolean found = false;</col0>
  </Catalog>
 
"      try {"
  <Catalog>
    <col0>      try {</col0>
  </Catalog>
 
"        for (int j = 0; j < jcb4Sys.getItemCount(); j++) {"
  <Catalog>
    <col0>        for (int j = 0; j < jcb4Sys.getItemCount(); j) {</col0>
  </Catalog>
 
"          if (jcb4Sys.getItemAt(j).toString().startsWith(sS.getText().substring("
  <Catalog>
    <col0>          if (jcb4Sys.getItemAt(j).toString().startsWith(sS.getText().substring(</col0>
  </Catalog>
 
"            0, 4))) {"
  <Catalog>
    <col0>            0, 4))) {</col0>
  </Catalog>
 
"            jcb4Sys.setSelectedIndex(j);"
  <Catalog>
    <col0>            jcb4Sys.setSelectedIndex(j);</col0>
  </Catalog>
 
"            found = true;"
  <Catalog>
    <col0>            found = true;</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (!found) {"
  <Catalog>
    <col0>        if (!found) {</col0>
  </Catalog>
 
"          System.out.println("2275 MT" + " = " + X + Y);"
  <Catalog>
    <col0>          System.out.println(2275 MT   =   X  Y);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } catch (Exception e) {"
  <Catalog>
    <col0>      } catch (Exception e) {</col0>
  </Catalog>
 
"        System.out.println("2278 = Empty hex");"
  <Catalog>
    <col0>        System.out.println(2278 = Empty hex);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    sCMouseClicked(me);"
  <Catalog>
    <col0>    sCMouseClicked(me);</col0>
  </Catalog>
 
"    sBMouseClicked(me);"
  <Catalog>
    <col0>    sBMouseClicked(me);</col0>
  </Catalog>
 
"    sSMouseClicked(me);"
  <Catalog>
    <col0>    sSMouseClicked(me);</col0>
  </Catalog>
 
"    String outline = "";"
  <Catalog>
    <col0>    String outline = ;</col0>
  </Catalog>
 
"    f = new File(T5 + FS + sC.getText() + ".sec");"
  <Catalog>
    <col0>    f = new File(T5  FS  sC.getText()  .sec);</col0>
  </Catalog>
 
"    String[] newlines = GlobalMethods.getLinesFromFile(f);"
  <Catalog>
    <col0>    String[] newlines = GlobalMethods.getLinesFromFile(f);</col0>
  </Catalog>
 
"    for (int j = 0; j < newlines.length; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < newlines.length; j) {</col0>
  </Catalog>
 
"      if (newlines[j].startsWith("---- -")) {"
  <Catalog>
    <col0>      if (newlines[j].startsWith(---- -)) {</col0>
  </Catalog>
 
"        int start = newlines[j].indexOf(" ");"
  <Catalog>
    <col0>        int start = newlines[j].indexOf( );</col0>
  </Catalog>
 
"        int end = newlines[j].substring(start).indexOf(" ");"
  <Catalog>
    <col0>        int end = newlines[j].substring(start).indexOf( );</col0>
  </Catalog>
 
"        System.out.println("start" + " = " + start);"
  <Catalog>
    <col0>        System.out.println(start   =   start);</col0>
  </Catalog>
 
"        System.out.println("end" + " = " + end);"
  <Catalog>
    <col0>        System.out.println(end   =   end);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      break;"
  <Catalog>
    <col0>      break;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    saveDestTreeMap();"
  <Catalog>
    <col0>    saveDestTreeMap();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpChange(javax.swing.event.ListSelectionEvent evt) {"
  <Catalog>
    <col0>  private void jl4JumpChange(javax.swing.event.ListSelectionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("evt.getValueIsAdjusting()" + " = " + evt"
  <Catalog>
    <col0>      System.out.println(evt.getValueIsAdjusting()   =   evt</col0>
  </Catalog>
 
"        .getValueIsAdjusting());"
  <Catalog>
    <col0>        .getValueIsAdjusting());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (evt.getValueIsAdjusting() == false) {"
  <Catalog>
    <col0>    if (evt.getValueIsAdjusting() == false) {</col0>
  </Catalog>
 
"      destChange();"
  <Catalog>
    <col0>      destChange();</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.println("xdestChange()");"
  <Catalog>
    <col0>        System.out.println(xdestChange());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"      graphChange();"
  <Catalog>
    <col0>      graphChange();</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="DEBUG">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=DEBUG></col0>
  </Catalog>
 
"      if (DEBUG) {"
  <Catalog>
    <col0>      if (DEBUG) {</col0>
  </Catalog>
 
"        System.out.println("graphChange()");"
  <Catalog>
    <col0>        System.out.println(graphChange());</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//    showDest();"
  <Catalog>
    <col0>//    showDest();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4AllAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4AllAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    JTextArea jta = new JTextArea();"
  <Catalog>
    <col0>    JTextArea jta = new JTextArea();</col0>
  </Catalog>
 
"    boolean found = false;"
  <Catalog>
    <col0>    boolean found = false;</col0>
  </Catalog>
 
"    String sel = jcb4All.getSelectedItem().toString();"
  <Catalog>
    <col0>    String sel = jcb4All.getSelectedItem().toString();</col0>
  </Catalog>
 
"    if (sel.startsWith("jta4")) {"
  <Catalog>
    <col0>    if (sel.startsWith(jta4)) {</col0>
  </Catalog>
 
"      //<editor-fold defaultstate="collapsed" desc="switch (sel) {">"
  <Catalog>
    <col0>      //<editor-fold defaultstate=collapsed desc=switch (sel) {></col0>
  </Catalog>
 
"      switch (sel) {"
  <Catalog>
    <col0>      switch (sel) {</col0>
  </Catalog>
 
"        case "jta4All": {"
  <Catalog>
    <col0>        case jta4All: {</col0>
  </Catalog>
 
"          jta = jta4All;"
  <Catalog>
    <col0>          jta = jta4All;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Sec": {"
  <Catalog>
    <col0>        case jta4Sec: {</col0>
  </Catalog>
 
"          writeSectorInfo();"
  <Catalog>
    <col0>          writeSectorInfo();</col0>
  </Catalog>
 
"          jta = jta4Sec;"
  <Catalog>
    <col0>          jta = jta4Sec;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Sub": {"
  <Catalog>
    <col0>        case jta4Sub: {</col0>
  </Catalog>
 
"          writeSubsectorInfo();"
  <Catalog>
    <col0>          writeSubsectorInfo();</col0>
  </Catalog>
 
"          jta = jta4Sub;"
  <Catalog>
    <col0>          jta = jta4Sub;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Sys": {"
  <Catalog>
    <col0>        case jta4Sys: {</col0>
  </Catalog>
 
"          jta = jta4Sys;"
  <Catalog>
    <col0>          jta = jta4Sys;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Line": {"
  <Catalog>
    <col0>        case jta4Line: {</col0>
  </Catalog>
 
"          jta = jta4Line;"
  <Catalog>
    <col0>          jta = jta4Line;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Info": {"
  <Catalog>
    <col0>        case jta4Info: {</col0>
  </Catalog>
 
"          jta = jta4Info;"
  <Catalog>
    <col0>          jta = jta4Info;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Near": {"
  <Catalog>
    <col0>        case jta4Near: {</col0>
  </Catalog>
 
"          jta = jta4Near;"
  <Catalog>
    <col0>          jta = jta4Near;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Orb": {"
  <Catalog>
    <col0>        case jta4Orb: {</col0>
  </Catalog>
 
"          jta = jta4Orb;"
  <Catalog>
    <col0>          jta = jta4Orb;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Dest": {"
  <Catalog>
    <col0>        case jta4Dest: {</col0>
  </Catalog>
 
"          jump = js4Dist.getValue();"
  <Catalog>
    <col0>          jump = js4Dist.getValue();</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          String txt = "";"
  <Catalog>
    <col0>          String txt = ;</col0>
  </Catalog>
 
"          for (int j = 0; j < 10; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < 10; j) {</col0>
  </Catalog>
 
"            js4Dist.setValue(j);"
  <Catalog>
    <col0>            js4Dist.setValue(j);</col0>
  </Catalog>
 
"            js4DistStateChanged(ce);"
  <Catalog>
    <col0>            js4DistStateChanged(ce);</col0>
  </Catalog>
 
"            txt += GlobalMethods.comment("-", 80);"
  <Catalog>
    <col0>            txt = GlobalMethods.comment(-, 80);</col0>
  </Catalog>
 
"            for (int k = 0; k < jl4Jump.getModel().getSize(); k++) {"
  <Catalog>
    <col0>            for (int k = 0; k < jl4Jump.getModel().getSize(); k) {</col0>
  </Catalog>
 
"              txt += "Jump " + j + " = " + jl4Jump.getModel().getElementAt(k) + CRLF;"
  <Catalog>
    <col0>              txt = Jump   j   =   jl4Jump.getModel().getElementAt(k)  CRLF;</col0>
  </Catalog>
 
"            }"
  <Catalog>
    <col0>            }</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"          jta4Dest.setText(txt);"
  <Catalog>
    <col0>          jta4Dest.setText(txt);</col0>
  </Catalog>
 
"          js4Dist.setValue(jump);"
  <Catalog>
    <col0>          js4Dist.setValue(jump);</col0>
  </Catalog>
 
"          js4DistStateChanged(ce);"
  <Catalog>
    <col0>          js4DistStateChanged(ce);</col0>
  </Catalog>
 
"          jta = jta4Dest;"
  <Catalog>
    <col0>          jta = jta4Dest;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Str": {"
  <Catalog>
    <col0>        case jta4Str: {</col0>
  </Catalog>
 
"          jta = jta4Str;"
  <Catalog>
    <col0>          jta = jta4Str;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4HTML": {"
  <Catalog>
    <col0>        case jta4HTML: {</col0>
  </Catalog>
 
"          jta = jta4HTML;"
  <Catalog>
    <col0>          jta = jta4HTML;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4UWP": {"
  <Catalog>
    <col0>        case jta4UWP: {</col0>
  </Catalog>
 
"          jta = jta4UWP;"
  <Catalog>
    <col0>          jta = jta4UWP;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        case "jta4Bases": {"
  <Catalog>
    <col0>        case jta4Bases: {</col0>
  </Catalog>
 
"          jta = jta4Bases;"
  <Catalog>
    <col0>          jta = jta4Bases;</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          break;"
  <Catalog>
    <col0>          break;</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //</editor-fold>"
  <Catalog>
    <col0>      //</editor-fold></col0>
  </Catalog>
 
"    } else {"
  <Catalog>
    <col0>    } else {</col0>
  </Catalog>
 
"      //  Sector file from disk"
  <Catalog>
    <col0>      //  Sector file from disk</col0>
  </Catalog>
 
"      jta.setText("");"
  <Catalog>
    <col0>      jta.setText();</col0>
  </Catalog>
 
"      for (i = 0; i < jcb4Sec.getItemCount(); i++) {"
  <Catalog>
    <col0>      for (i = 0; i < jcb4Sec.getItemCount(); i) {</col0>
  </Catalog>
 
"        if (jcb4Sec.getItemAt(i).equals(jcb4All.getSelectedItem().toString())) {"
  <Catalog>
    <col0>        if (jcb4Sec.getItemAt(i).equals(jcb4All.getSelectedItem().toString())) {</col0>
  </Catalog>
 
"          found = true;"
  <Catalog>
    <col0>          found = true;</col0>
  </Catalog>
 
"          String path = _SEC + FS + jcb4All.getSelectedItem().toString() + ".sec";"
  <Catalog>
    <col0>          String path = _SEC  FS  jcb4All.getSelectedItem().toString()  .sec;</col0>
  </Catalog>
 
"          String[] lin = GlobalMethods.getLinesFromFile(new File(path));"
  <Catalog>
    <col0>          String[] lin = GlobalMethods.getLinesFromFile(new File(path));</col0>
  </Catalog>
 
"          for (int j = 0; j < lin.length; j++) {"
  <Catalog>
    <col0>          for (int j = 0; j < lin.length; j) {</col0>
  </Catalog>
 
"            jta.append(lin[j] + CRLF);"
  <Catalog>
    <col0>            jta.append(lin[j]  CRLF);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      if (!found) {"
  <Catalog>
    <col0>      if (!found) {</col0>
  </Catalog>
 
"        JOptionPane.showMessageDialog(jf, "" + found);"
  <Catalog>
    <col0>        JOptionPane.showMessageDialog(jf,   found);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jta4All.setText(jta.getText());"
  <Catalog>
    <col0>    jta4All.setText(jta.getText());</col0>
  </Catalog>
 
"    if (jcb4Options.getSelectedIndex() >= 0) {"
  <Catalog>
    <col0>    if (jcb4Options.getSelectedIndex() >= 0) {</col0>
  </Catalog>
 
"      jcb2cb(jcb4All);"
  <Catalog>
    <col0>      jcb2cb(jcb4All);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4WorldPicClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void panel4WorldPicClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    //    boolean DEBUG = false;"
  <Catalog>
    <col0>    //    boolean DEBUG = false;</col0>
  </Catalog>
 
"    //    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    //    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"    //      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>    //      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"    //      System.out.println("\t" + getClass().getName() + " = " + Thread.currentThread().getStackTrace()[1].getMethodName());"
  <Catalog>
    <col0>    //      System.out.println(\t  getClass().getName()   =   Thread.currentThread().getStackTrace()[1].getMethodName());</col0>
  </Catalog>
 
"    //      System.out.println("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());"
  <Catalog>
    <col0>    //      System.out.println(\t  Thread.currentThread().getStackTrace()[1].getMethodName());</col0>
  </Catalog>
 
"    //    }"
  <Catalog>
    <col0>    //    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"//    createWorldPic();"
  <Catalog>
    <col0>//    createWorldPic();</col0>
  </Catalog>
 
"//    updateChart();"
  <Catalog>
    <col0>//    updateChart();</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel4Click(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jLabel4Click(MouseEvent evt) {</col0>
  </Catalog>
 
"    createWorldPic();"
  <Catalog>
    <col0>    createWorldPic();</col0>
  </Catalog>
 
"    saveHomeTreeMap();"
  <Catalog>
    <col0>    saveHomeTreeMap();</col0>
  </Catalog>
 
"    txt2cb(jLabel4.getText());"
  <Catalog>
    <col0>    txt2cb(jLabel4.getText());</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.Folder.setSelectedItem("World");"
  <Catalog>
    <col0>    Panel4T5CounterMaker.Folder.setSelectedItem(World);</col0>
  </Catalog>
 
"//    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>//    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"//      writeXMLNeighbours();"
  <Catalog>
    <col0>//      writeXMLNeighbours();</col0>
  </Catalog>
 
"//    }"
  <Catalog>
    <col0>//    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4WordClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jtf4WordClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    getWord(evt);"
  <Catalog>
    <col0>    getWord(evt);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4LangAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4LangAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    getWord(me);"
  <Catalog>
    <col0>    getWord(me);</col0>
  </Catalog>
 
"//    jtf4WordMouseClicked(me);"
  <Catalog>
    <col0>//    jtf4WordMouseClicked(me);</col0>
  </Catalog>
 
"//    jcb2cb(jcb4Lang);"
  <Catalog>
    <col0>//    jcb2cb(jcb4Lang);</col0>
  </Catalog>
 
"    updateNPC();"
  <Catalog>
    <col0>    updateNPC();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UWPAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jtf4UWPAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + getClass().getName() + " = " + Thread"
  <Catalog>
    <col0>      System.out.println(\t  getClass().getName()   =   Thread</col0>
  </Catalog>
 
"        .currentThread().getStackTrace()[1].getMethodName());"
  <Catalog>
    <col0>        .currentThread().getStackTrace()[1].getMethodName());</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    jtf4UWPMouseClicked(me);"
  <Catalog>
    <col0>    jtf4UWPMouseClicked(me);</col0>
  </Catalog>
 
"    if (jtf4UWP.getText() != "") {"
  <Catalog>
    <col0>    if (jtf4UWP.getText() != ) {</col0>
  </Catalog>
 
"      jtf2cb(jtf4UWP);"
  <Catalog>
    <col0>      jtf2cb(jtf4UWP);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public void jtf4UWPClick(MouseEvent evt) {"
  <Catalog>
    <col0>  public void jtf4UWPClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    //DEBUG = false;"
  <Catalog>
    <col0>    //DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    String txt = jtf4UWP.getText().replace(" ", "").replace(CRLF, "").replace("
  <Catalog>
    <col0>    String txt = jtf4UWP.getText().replace( , ).replace(CRLF, ).replace(</col0>
  </Catalog>
 
"      "\t", "");"
  <Catalog>
    <col0>      \t, );</col0>
  </Catalog>
 
"    jtf4UWP.setText(txt);"
  <Catalog>
    <col0>    jtf4UWP.setText(txt);</col0>
  </Catalog>
 
"    if (jtf4UWP.getText().length() != 0 & jtf4UWP.getText().length() != 9"
  <Catalog>
    <col0>    if (jtf4UWP.getText().length() != 0 & jtf4UWP.getText().length() != 9</col0>
  </Catalog>
 
"      & jtf4UWP.getText().length() != 6) {"
  <Catalog>
    <col0>      & jtf4UWP.getText().length() != 6) {</col0>
  </Catalog>
 
"      JOptionPane.showMessageDialog(jp,"
  <Catalog>
    <col0>      JOptionPane.showMessageDialog(jp,</col0>
  </Catalog>
 
"        "enter UWP (i.e. A788999-C)" + CRLF + "OR UPP (999AAA)");"
  <Catalog>
    <col0>        enter UWP (i.e. A788999-C)  CRLF  OR UPP (999AAA));</col0>
  </Catalog>
 
"      jtf4UWP.setText("");"
  <Catalog>
    <col0>      jtf4UWP.setText();</col0>
  </Catalog>
 
"      jta4UWP.setText("");"
  <Catalog>
    <col0>      jta4UWP.setText();</col0>
  </Catalog>
 
"      jcb4All.setSelectedItem("jta4Orb");"
  <Catalog>
    <col0>      jcb4All.setSelectedItem(jta4Orb);</col0>
  </Catalog>
 
"//    } else if (jtf4UWP.getText().length() == 6) {"
  <Catalog>
    <col0>//    } else if (jtf4UWP.getText().length() == 6) {</col0>
  </Catalog>
 
"//      String upp = jtf4UWP.getText().trim().toUpperCase();"
  <Catalog>
    <col0>//      String upp = jtf4UWP.getText().trim().toUpperCase();</col0>
  </Catalog>
 
"//      String old = UWP;"
  <Catalog>
    <col0>//      String old = UWP;</col0>
  </Catalog>
 
"//      String UPP = upp;"
  <Catalog>
    <col0>//      String UPP = upp;</col0>
  </Catalog>
 
"//      UWP = old;"
  <Catalog>
    <col0>//      UWP = old;</col0>
  </Catalog>
 
"//      upp2Chart();"
  <Catalog>
    <col0>//      upp2Chart();</col0>
  </Catalog>
 
"    } else if (jtf4UWP.getText().length() == 9) {"
  <Catalog>
    <col0>    } else if (jtf4UWP.getText().length() == 9) {</col0>
  </Catalog>
 
"      jta4UWP.setText("" + jtf4UWP.getText().trim().toUpperCase() + CRLF);"
  <Catalog>
    <col0>      jta4UWP.setText(  jtf4UWP.getText().trim().toUpperCase()  CRLF);</col0>
  </Catalog>
 
"      String uwp = jtf4UWP.getText().trim().toUpperCase();"
  <Catalog>
    <col0>      String uwp = jtf4UWP.getText().trim().toUpperCase();</col0>
  </Catalog>
 
"      String old = UWP;"
  <Catalog>
    <col0>      String old = UWP;</col0>
  </Catalog>
 
"      UWP = uwp;"
  <Catalog>
    <col0>      UWP = uwp;</col0>
  </Catalog>
 
"      String str = "";"
  <Catalog>
    <col0>      String str = ;</col0>
  </Catalog>
 
"      str += getSP() + CRLF;"
  <Catalog>
    <col0>      str = getSP()  CRLF;</col0>
  </Catalog>
 
"      str += getSiz() + CRLF;"
  <Catalog>
    <col0>      str = getSiz()  CRLF;</col0>
  </Catalog>
 
"      str += getAtmo() + CRLF;"
  <Catalog>
    <col0>      str = getAtmo()  CRLF;</col0>
  </Catalog>
 
"      str += getHydro() + CRLF;"
  <Catalog>
    <col0>      str = getHydro()  CRLF;</col0>
  </Catalog>
 
"      str += getPop() + CRLF;"
  <Catalog>
    <col0>      str = getPop()  CRLF;</col0>
  </Catalog>
 
"      str += getGov() + CRLF;"
  <Catalog>
    <col0>      str = getGov()  CRLF;</col0>
  </Catalog>
 
"      str += getLaw() + CRLF;"
  <Catalog>
    <col0>      str = getLaw()  CRLF;</col0>
  </Catalog>
 
"      str += getTech() + CRLF;"
  <Catalog>
    <col0>      str = getTech()  CRLF;</col0>
  </Catalog>
 
"      jta4UWP.append(str);"
  <Catalog>
    <col0>      jta4UWP.append(str);</col0>
  </Catalog>
 
"      jcb4All.setSelectedItem("jta4UWP");"
  <Catalog>
    <col0>      jcb4All.setSelectedItem(jta4UWP);</col0>
  </Catalog>
 
"      UWP = old;"
  <Catalog>
    <col0>      UWP = old;</col0>
  </Catalog>
 
"      setUWP();"
  <Catalog>
    <col0>      setUWP();</col0>
  </Catalog>
 
"      uwp2Chart();"
  <Catalog>
    <col0>      uwp2Chart();</col0>
  </Catalog>
 
"    } else if (jtf4UWP.getText().length() == 0) {"
  <Catalog>
    <col0>    } else if (jtf4UWP.getText().length() == 0) {</col0>
  </Catalog>
 
"      jcb4All.setSelectedItem("jta4Orb");"
  <Catalog>
    <col0>      jcb4All.setSelectedItem(jta4Orb);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    txt2cb(jtf4UWP.getText());"
  <Catalog>
    <col0>    txt2cb(jtf4UWP.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4OptionsAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4OptionsAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    String str = jcb4Options.getSelectedItem().toString();"
  <Catalog>
    <col0>    String str = jcb4Options.getSelectedItem().toString();</col0>
  </Catalog>
 
"    System.out.println("str" + " = " + str);"
  <Catalog>
    <col0>    System.out.println(str   =   str);</col0>
  </Catalog>
 
"    switch (str) {"
  <Catalog>
    <col0>    switch (str) {</col0>
  </Catalog>
 
"      case "Launch": {"
  <Catalog>
    <col0>      case Launch: {</col0>
  </Catalog>
 
"        launch();"
  <Catalog>
    <col0>        launch();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Squadrons": {"
  <Catalog>
    <col0>      case Squadrons: {</col0>
  </Catalog>
 
"        Panel4T5Squadron.main(args);"
  <Catalog>
    <col0>        Panel4T5Squadron.main(args);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Troops": {"
  <Catalog>
    <col0>      case Troops: {</col0>
  </Catalog>
 
"        Panel4T5Troop.main(args);"
  <Catalog>
    <col0>        Panel4T5Troop.main(args);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Counter": {"
  <Catalog>
    <col0>      case Counter: {</col0>
  </Catalog>
 
"        Panel4T5CounterMaker.main(args);"
  <Catalog>
    <col0>        Panel4T5CounterMaker.main(args);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Scripting": {"
  <Catalog>
    <col0>      case Scripting: {</col0>
  </Catalog>
 
"        new Panel4T5Scripting();"
  <Catalog>
    <col0>        new Panel4T5Scripting();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Box": {"
  <Catalog>
    <col0>      case Box: {</col0>
  </Catalog>
 
"        Panel4Boxer.main(args);"
  <Catalog>
    <col0>        Panel4Boxer.main(args);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Backup": {"
  <Catalog>
    <col0>      case Backup: {</col0>
  </Catalog>
 
"        Panel4T5Backup.main(args);"
  <Catalog>
    <col0>        Panel4T5Backup.main(args);</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "LPT": {"
  <Catalog>
    <col0>      case LPT: {</col0>
  </Catalog>
 
"        linkpictext.Panel4LPT.jf.setVisible(!linkpictext.Panel4LPT.jf"
  <Catalog>
    <col0>        linkpictext.Panel4LPT.jf.setVisible(!linkpictext.Panel4LPT.jf</col0>
  </Catalog>
 
"          .isVisible());"
  <Catalog>
    <col0>          .isVisible());</col0>
  </Catalog>
 
"        linkpictext.Panel4LPT.folderChange();"
  <Catalog>
    <col0>        linkpictext.Panel4LPT.folderChange();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "XML": {"
  <Catalog>
    <col0>      case XML: {</col0>
  </Catalog>
 
"        xml();"
  <Catalog>
    <col0>        xml();</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    if (jcb4Options.getSelectedIndex() >= 0) {"
  <Catalog>
    <col0>    if (jcb4Options.getSelectedIndex() >= 0) {</col0>
  </Catalog>
 
"      jcb2cb(jcb4Options);"
  <Catalog>
    <col0>      jcb2cb(jcb4Options);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton1Pressed(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jButton1Pressed(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    findCapital();"
  <Catalog>
    <col0>    findCapital();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton1Released(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jButton1Released(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"//    Panel4JFX.main(args);"
  <Catalog>
    <col0>//    Panel4JFX.main(args);</col0>
  </Catalog>
 
"    saveSubSecPic();"
  <Catalog>
    <col0>    saveSubSecPic();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sCMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void sCMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("" + " = " + sortOutSubName());"
  <Catalog>
    <col0>      System.out.println(   =   sortOutSubName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    sB.setText(sortOutSubName());"
  <Catalog>
    <col0>    sB.setText(sortOutSubName());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sBMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void sBMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      System.out.println("" + " = " + sortOutSysName());"
  <Catalog>
    <col0>      System.out.println(   =   sortOutSysName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    sS.setText(sortOutSysName());"
  <Catalog>
    <col0>    sS.setText(sortOutSysName());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void sSMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void sSMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    DefaultListModel dlm = (DefaultListModel) jl4Jump.getModel();"
  <Catalog>
    <col0>    DefaultListModel dlm = (DefaultListModel) jl4Jump.getModel();</col0>
  </Catalog>
 
"    int idx = jl4Jump.getSelectedIndex();"
  <Catalog>
    <col0>    int idx = jl4Jump.getSelectedIndex();</col0>
  </Catalog>
 
"    if (!jl4Jump.getModel().getElementAt(idx).equals(sS.getText())) {"
  <Catalog>
    <col0>    if (!jl4Jump.getModel().getElementAt(idx).equals(sS.getText())) {</col0>
  </Catalog>
 
"      if (sS.getText().equals("")) {"
  <Catalog>
    <col0>      if (sS.getText().equals()) {</col0>
  </Catalog>
 
"        sS.setText(jl4Jump.getModel().getElementAt(idx).toString().substring(0,"
  <Catalog>
    <col0>        sS.setText(jl4Jump.getModel().getElementAt(idx).toString().substring(0,</col0>
  </Catalog>
 
"          4));"
  <Catalog>
    <col0>          4));</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      dlm.setElementAt(sS.getText(), idx);"
  <Catalog>
    <col0>      dlm.setElementAt(sS.getText(), idx);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jl4Jump.setModel(dlm);"
  <Catalog>
    <col0>    jl4Jump.setModel(dlm);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpPressed(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jl4JumpPressed(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    dest = jl4Jump.getSelectedValue().toString();"
  <Catalog>
    <col0>    dest = jl4Jump.getSelectedValue().toString();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jl4JumpReleased(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jl4JumpReleased(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"      //System.out.println("" + " = " + );"
  <Catalog>
    <col0>      //System.out.println(   =   );</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    dest = jl4Jump.getSelectedValue().toString();"
  <Catalog>
    <col0>    dest = jl4Jump.getSelectedValue().toString();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel4Property(java.beans.PropertyChangeEvent evt) {"
  <Catalog>
    <col0>  private void jLabel4Property(java.beans.PropertyChangeEvent evt) {</col0>
  </Catalog>
 
"    saveHomeTreeMap();"
  <Catalog>
    <col0>    saveHomeTreeMap();</col0>
  </Catalog>
 
"//    Panel4T5CounterMaker.Folder.setSelectedItem("World");"
  <Catalog>
    <col0>//    Panel4T5CounterMaker.Folder.setSelectedItem(World);</col0>
  </Catalog>
 
"//    Panel4T5Troop.systemChange();"
  <Catalog>
    <col0>//    Panel4T5Troop.systemChange();</col0>
  </Catalog>
 
"//    Panel4T5Squadron.systemChange();"
  <Catalog>
    <col0>//    Panel4T5Squadron.systemChange();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4ClickClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void panel4ClickClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    File file = new File(T5);"
  <Catalog>
    <col0>    File file = new File(T5);</col0>
  </Catalog>
 
"    saveCounter(file);"
  <Catalog>
    <col0>    saveCounter(file);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel5MouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jLabel5MouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    createPopPic();"
  <Catalog>
    <col0>    createPopPic();</col0>
  </Catalog>
 
"    txt2cb("Population " + Panel4T5CounterMaker.countPop());"
  <Catalog>
    <col0>    txt2cb(Population   Panel4T5CounterMaker.countPop());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel6MouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jLabel6MouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    createBeltPic();"
  <Catalog>
    <col0>    createBeltPic();</col0>
  </Catalog>
 
"    txt2cb("Planetoid Belts = " + jLabel9.getText());"
  <Catalog>
    <col0>    txt2cb(Planetoid Belts =   jLabel9.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel7MouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jLabel7MouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    createGasPic();"
  <Catalog>
    <col0>    createGasPic();</col0>
  </Catalog>
 
"    txt2cb("Gas Giants = " + jLabel10.getText());"
  <Catalog>
    <col0>    txt2cb(Gas Giants =   jLabel10.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jLabel11MouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jLabel11MouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    createWorldsPic();"
  <Catalog>
    <col0>    createWorldsPic();</col0>
  </Catalog>
 
"    txt2cb("Other worlds = " + jLabel12.getText());"
  <Catalog>
    <col0>    txt2cb(Other worlds =   jLabel12.getText());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox1Action(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jComboBox1Action(ActionEvent evt) {</col0>
  </Catalog>
 
"    String def = "";"
  <Catalog>
    <col0>    String def = ;</col0>
  </Catalog>
 
"    s = jComboBox1.getSelectedItem().toString().trim();"
  <Catalog>
    <col0>    s = jComboBox1.getSelectedItem().toString().trim();</col0>
  </Catalog>
 
"    switch (s) {"
  <Catalog>
    <col0>    switch (s) {</col0>
  </Catalog>
 
"      case "0-Hex": {"
  <Catalog>
    <col0>      case 0-Hex: {</col0>
  </Catalog>
 
"        def = "1910";"
  <Catalog>
    <col0>        def = 1910;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "1-Name": {"
  <Catalog>
    <col0>      case 1-Name: {</col0>
  </Catalog>
 
"        def = "Regina";"
  <Catalog>
    <col0>        def = Regina;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "2-UWP": {"
  <Catalog>
    <col0>      case 2-UWP: {</col0>
  </Catalog>
 
"        def = "A788999-C";"
  <Catalog>
    <col0>        def = A788999-C;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Starport": {"
  <Catalog>
    <col0>      case Starport: {</col0>
  </Catalog>
 
"        def = "A";"
  <Catalog>
    <col0>        def = A;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Size": {"
  <Catalog>
    <col0>      case Size: {</col0>
  </Catalog>
 
"        def = "7";"
  <Catalog>
    <col0>        def = 7;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Atmosphere": {"
  <Catalog>
    <col0>      case Atmosphere: {</col0>
  </Catalog>
 
"        def = "8";"
  <Catalog>
    <col0>        def = 8;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Hydrosphere": {"
  <Catalog>
    <col0>      case Hydrosphere: {</col0>
  </Catalog>
 
"        def = "8";"
  <Catalog>
    <col0>        def = 8;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Population": {"
  <Catalog>
    <col0>      case Population: {</col0>
  </Catalog>
 
"        def = "9";"
  <Catalog>
    <col0>        def = 9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Government": {"
  <Catalog>
    <col0>      case Government: {</col0>
  </Catalog>
 
"        def = "9";"
  <Catalog>
    <col0>        def = 9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Law Level": {"
  <Catalog>
    <col0>      case Law Level: {</col0>
  </Catalog>
 
"        def = "9";"
  <Catalog>
    <col0>        def = 9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Tech Level": {"
  <Catalog>
    <col0>      case Tech Level: {</col0>
  </Catalog>
 
"        def = "C";"
  <Catalog>
    <col0>        def = C;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "3-Remarks": {"
  <Catalog>
    <col0>      case 3-Remarks: {</col0>
  </Catalog>
 
"        def = "Ri Pa Ph An Cp (Amindii)2 Varg0 Asla0 Sa";"
  <Catalog>
    <col0>        def = Ri Pa Ph An Cp (Amindii)2 Varg0 Asla0 Sa;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "4-Importance": {"
  <Catalog>
    <col0>      case 4-Importance: {</col0>
  </Catalog>
 
"        def = "4";"
  <Catalog>
    <col0>        def = 4;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "5-Economic": {"
  <Catalog>
    <col0>      case 5-Economic: {</col0>
  </Catalog>
 
"        def = "D7E+5";"
  <Catalog>
    <col0>        def = D7E5;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Resources": {"
  <Catalog>
    <col0>      case Resources: {</col0>
  </Catalog>
 
"        def = "D";"
  <Catalog>
    <col0>        def = D;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Labour": {"
  <Catalog>
    <col0>      case Labour: {</col0>
  </Catalog>
 
"        def = "7";"
  <Catalog>
    <col0>        def = 7;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Infrastructure": {"
  <Catalog>
    <col0>      case Infrastructure: {</col0>
  </Catalog>
 
"        def = "E";"
  <Catalog>
    <col0>        def = E;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Efficiency": {"
  <Catalog>
    <col0>      case Efficiency: {</col0>
  </Catalog>
 
"        def = "5";"
  <Catalog>
    <col0>        def = 5;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "6-Cultural": {"
  <Catalog>
    <col0>      case 6-Cultural: {</col0>
  </Catalog>
 
"        def = "9C6D";"
  <Catalog>
    <col0>        def = 9C6D;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Homogeneity": {"
  <Catalog>
    <col0>      case Homogeneity: {</col0>
  </Catalog>
 
"        def = "9";"
  <Catalog>
    <col0>        def = 9;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Acceptance": {"
  <Catalog>
    <col0>      case Acceptance: {</col0>
  </Catalog>
 
"        def = "C";"
  <Catalog>
    <col0>        def = C;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Strangeness": {"
  <Catalog>
    <col0>      case Strangeness: {</col0>
  </Catalog>
 
"        def = "6";"
  <Catalog>
    <col0>        def = 6;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Symbols": {"
  <Catalog>
    <col0>      case Symbols: {</col0>
  </Catalog>
 
"        def = "D";"
  <Catalog>
    <col0>        def = D;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "7-Nobles": {"
  <Catalog>
    <col0>      case 7-Nobles: {</col0>
  </Catalog>
 
"        def = "BcCeF";"
  <Catalog>
    <col0>        def = BcCeF;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"//      case "B-Knight": {"
  <Catalog>
    <col0>//      case B-Knight: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "c-Baronet": {"
  <Catalog>
    <col0>//      case c-Baronet: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "C-Baron": {"
  <Catalog>
    <col0>//      case C-Baron: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "D-Marquis": {"
  <Catalog>
    <col0>//      case D-Marquis: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "e-Viscount": {"
  <Catalog>
    <col0>//      case e-Viscount: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "E-Count": {"
  <Catalog>
    <col0>//      case E-Count: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "f-Duke": {"
  <Catalog>
    <col0>//      case f-Duke: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "F-Duke": {"
  <Catalog>
    <col0>//      case F-Duke: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "G-Archduke": {"
  <Catalog>
    <col0>//      case G-Archduke: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "H-Emperor": {"
  <Catalog>
    <col0>//      case H-Emperor: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"      case "8-Bases": {"
  <Catalog>
    <col0>      case 8-Bases: {</col0>
  </Catalog>
 
"        def = "NS";"
  <Catalog>
    <col0>        def = NS;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "9-Zones": {"
  <Catalog>
    <col0>      case 9-Zones: {</col0>
  </Catalog>
 
"        def = "-";"
  <Catalog>
    <col0>        def = -;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"//      case "Green": {"
  <Catalog>
    <col0>//      case Green: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "Amber": {"
  <Catalog>
    <col0>//      case Amber: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "Red": {"
  <Catalog>
    <col0>//      case Red: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"      case "10-PBG": {"
  <Catalog>
    <col0>      case 10-PBG: {</col0>
  </Catalog>
 
"        def = "703";"
  <Catalog>
    <col0>        def = 703;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"//      case "No pop": {"
  <Catalog>
    <col0>//      case No pop: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "Low pop": {"
  <Catalog>
    <col0>//      case Low pop: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "Med pop": {"
  <Catalog>
    <col0>//      case Med pop: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"//"
  <Catalog>
    <col0>//</col0>
  </Catalog>
 
"//      case "HIGH POP": {"
  <Catalog>
    <col0>//      case HIGH POP: {</col0>
  </Catalog>
 
"//        def = "";"
  <Catalog>
    <col0>//        def = ;</col0>
  </Catalog>
 
"//        break;"
  <Catalog>
    <col0>//        break;</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"      case "11-Worlds": {"
  <Catalog>
    <col0>      case 11-Worlds: {</col0>
  </Catalog>
 
"        def = "8";"
  <Catalog>
    <col0>        def = 8;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "12-Allegiance": {"
  <Catalog>
    <col0>      case 12-Allegiance: {</col0>
  </Catalog>
 
"        def = "ImDd";"
  <Catalog>
    <col0>        def = ImDd;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "13-Stellar": {"
  <Catalog>
    <col0>      case 13-Stellar: {</col0>
  </Catalog>
 
"        def = "F7 V BD M3 V";"
  <Catalog>
    <col0>        def = F7 V BD M3 V;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Color": {"
  <Catalog>
    <col0>      case Color: {</col0>
  </Catalog>
 
"        def = "";"
  <Catalog>
    <col0>        def = ;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"      case "Decimal": {"
  <Catalog>
    <col0>      case Decimal: {</col0>
  </Catalog>
 
"        def = "";"
  <Catalog>
    <col0>        def = ;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Star Size": {"
  <Catalog>
    <col0>      case Star Size: {</col0>
  </Catalog>
 
"        def = "";"
  <Catalog>
    <col0>        def = ;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      case "Amount": {"
  <Catalog>
    <col0>      case Amount: {</col0>
  </Catalog>
 
"        def = "";"
  <Catalog>
    <col0>        def = ;</col0>
  </Catalog>
 
"        break;"
  <Catalog>
    <col0>        break;</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jtf4Find.setText(def);"
  <Catalog>
    <col0>    jtf4Find.setText(def);</col0>
  </Catalog>
 
"    if (jComboBox1.getSelectedIndex() >= 0) {"
  <Catalog>
    <col0>    if (jComboBox1.getSelectedIndex() >= 0) {</col0>
  </Catalog>
 
"      jcb2cb(jComboBox1);"
  <Catalog>
    <col0>      jcb2cb(jComboBox1);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4FindMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jtf4FindMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"//    jtf4Find.getText();"
  <Catalog>
    <col0>//    jtf4Find.getText();</col0>
  </Catalog>
 
"    jtf2cb(jtf4Find);"
  <Catalog>
    <col0>    jtf2cb(jtf4Find);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox19Click(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jComboBox19Click(MouseEvent evt) {</col0>
  </Catalog>
 
"    calcCost();"
  <Catalog>
    <col0>    calcCost();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SysItemChange() {"
  <Catalog>
    <col0>  private void jcb4SysItemChange() {</col0>
  </Catalog>
 
"    Panel4T5Troop.systemChange();"
  <Catalog>
    <col0>    Panel4T5Troop.systemChange();</col0>
  </Catalog>
 
"    Panel4T5Squadron.systemChange();"
  <Catalog>
    <col0>    Panel4T5Squadron.systemChange();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void panel4PicMouseMove(MouseEvent evt) {"
  <Catalog>
    <col0>  private void panel4PicMouseMove(MouseEvent evt) {</col0>
  </Catalog>
 
"//    createWorldPic();"
  <Catalog>
    <col0>//    createWorldPic();</col0>
  </Catalog>
 
"    Panel4T5CounterMaker.Folder.setSelectedItem("World");"
  <Catalog>
    <col0>    Panel4T5CounterMaker.Folder.setSelectedItem(World);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4OptionsMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4OptionsMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      jcb4Options.setSelectedIndex(jcb4Options.getSelectedIndex());"
  <Catalog>
    <col0>      jcb4Options.setSelectedIndex(jcb4Options.getSelectedIndex());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jComboBox1MouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jComboBox1MouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      DBPublic.LocateSystems(jComboBox1.getSelectedItem().toString().trim(),"
  <Catalog>
    <col0>      DBPublic.LocateSystems(jComboBox1.getSelectedItem().toString().trim(),</col0>
  </Catalog>
 
"        jtf4Find.getText().trim());"
  <Catalog>
    <col0>        jtf4Find.getText().trim());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UPPAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jtf4UPPAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    jtf4UPP.setText(rollUPP());"
  <Catalog>
    <col0>    jtf4UPP.setText(rollUPP());</col0>
  </Catalog>
 
"//    } else if (jtf4UWP.getText().length() == 6) {"
  <Catalog>
    <col0>//    } else if (jtf4UWP.getText().length() == 6) {</col0>
  </Catalog>
 
"    String upp = jtf4UPP.getText().trim().toUpperCase();"
  <Catalog>
    <col0>    String upp = jtf4UPP.getText().trim().toUpperCase();</col0>
  </Catalog>
 
"    String old = UWP;"
  <Catalog>
    <col0>    String old = UWP;</col0>
  </Catalog>
 
"    String UPP = upp;"
  <Catalog>
    <col0>    String UPP = upp;</col0>
  </Catalog>
 
"    UWP = old;"
  <Catalog>
    <col0>    UWP = old;</col0>
  </Catalog>
 
"    upp2Chart();"
  <Catalog>
    <col0>    upp2Chart();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4LangMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4LangMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    getWord(evt);"
  <Catalog>
    <col0>    getWord(evt);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UPPMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jtf4UPPMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    jtf4UPP.setText(rollUPP());"
  <Catalog>
    <col0>    jtf4UPP.setText(rollUPP());</col0>
  </Catalog>
 
"    String upp = jtf4UPP.getText().trim().toUpperCase();"
  <Catalog>
    <col0>    String upp = jtf4UPP.getText().trim().toUpperCase();</col0>
  </Catalog>
 
"    String old = UWP;"
  <Catalog>
    <col0>    String old = UWP;</col0>
  </Catalog>
 
"    String UPP = upp;"
  <Catalog>
    <col0>    String UPP = upp;</col0>
  </Catalog>
 
"    UWP = old;"
  <Catalog>
    <col0>    UWP = old;</col0>
  </Catalog>
 
"    upp2Chart();"
  <Catalog>
    <col0>    upp2Chart();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4CareerAction(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jcb4CareerAction(ActionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4CareerMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4CareerMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (jcb4Career.getSelectedItem().toString().equals("-Choose-")) {"
  <Catalog>
    <col0>    if (jcb4Career.getSelectedItem().toString().equals(-Choose-)) {</col0>
  </Catalog>
 
"      int num = GlobalMethods.roll1d();"
  <Catalog>
    <col0>      int num = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"      jcb4Career.setSelectedIndex(num);"
  <Catalog>
    <col0>      jcb4Career.setSelectedIndex(num);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    num = GlobalMethods.roll1d();"
  <Catalog>
    <col0>    num = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"    js4Terms.setValue(num);"
  <Catalog>
    <col0>    js4Terms.setValue(num);</col0>
  </Catalog>
 
"    jtf4WordClick(evt);"
  <Catalog>
    <col0>    jtf4WordClick(evt);</col0>
  </Catalog>
 
"    jtf4UPPAction(ae);"
  <Catalog>
    <col0>    jtf4UPPAction(ae);</col0>
  </Catalog>
 
"    jButton2.doClick();"
  <Catalog>
    <col0>    jButton2.doClick();</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void js4TermsStateChange(ChangeEvent evt) {"
  <Catalog>
    <col0>  private void js4TermsStateChange(ChangeEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void js4TermsMouseClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void js4TermsMouseClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      System.out.println("\t" + method);"
  <Catalog>
    <col0>      System.out.println(\t  method);</col0>
  </Catalog>
 
"      //JOptionPane.showMessageDialog(null, method);"
  <Catalog>
    <col0>      //JOptionPane.showMessageDialog(null, method);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      num = GlobalMethods.roll1d();"
  <Catalog>
    <col0>      num = GlobalMethods.roll1d();</col0>
  </Catalog>
 
"      js4Terms.setValue(num);"
  <Catalog>
    <col0>      js4Terms.setValue(num);</col0>
  </Catalog>
 
"      jtf4WordClick(evt);"
  <Catalog>
    <col0>      jtf4WordClick(evt);</col0>
  </Catalog>
 
"      jtf4UPPAction(ae);"
  <Catalog>
    <col0>      jtf4UPPAction(ae);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton2Action(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jButton2Action(ActionEvent evt) {</col0>
  </Catalog>
 
"    txt2cb(updateNPC());"
  <Catalog>
    <col0>    txt2cb(updateNPC());</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4WordKeyPress(java.awt.event.KeyEvent evt) {"
  <Catalog>
    <col0>  private void jtf4WordKeyPress(java.awt.event.KeyEvent evt) {</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jtf4UPPKeyPress(java.awt.event.KeyEvent evt) {"
  <Catalog>
    <col0>  private void jtf4UPPKeyPress(java.awt.event.KeyEvent evt) {</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jButton1Action(ActionEvent evt) {"
  <Catalog>
    <col0>  private void jButton1Action(ActionEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = false;"
  <Catalog>
    <col0>    boolean DEBUG = false;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>      System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"      System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>      System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"        .getMethodName());"
  <Catalog>
    <col0>        .getMethodName());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jcb4SubClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jcb4SubClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IF DEBUG">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IF DEBUG></col0>
  </Catalog>
 
"    boolean DEBUG = true;"
  <Catalog>
    <col0>    boolean DEBUG = true;</col0>
  </Catalog>
 
"    if (DEBUG) { // true or false"
  <Catalog>
    <col0>    if (DEBUG) { // true or false</col0>
  </Catalog>
 
"      String s = "";"
  <Catalog>
    <col0>      String s = ;</col0>
  </Catalog>
 
"      s += GlobalMethods.comment("=", 80) + CRLF;"
  <Catalog>
    <col0>      s = GlobalMethods.comment(=, 80)  CRLF;</col0>
  </Catalog>
 
"      String method = Thread.currentThread().getStackTrace()[1].getMethodName();"
  <Catalog>
    <col0>      String method = Thread.currentThread().getStackTrace()[1].getMethodName();</col0>
  </Catalog>
 
"      s += "\t" + method + CRLF;"
  <Catalog>
    <col0>      s = \t  method  CRLF;</col0>
  </Catalog>
 
"//      s += "" + " = " + "" + CRLF;"
  <Catalog>
    <col0>//      s =    =     CRLF;</col0>
  </Catalog>
 
"      System.out.print(s);"
  <Catalog>
    <col0>      System.out.print(s);</col0>
  </Catalog>
 
"//      JOptionPane.showMessageDialog(null, s);"
  <Catalog>
    <col0>//      JOptionPane.showMessageDialog(null, s);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    //</editor-fold>"
  <Catalog>
    <col0>    //</editor-fold></col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      File f = new File(getSysPath());"
  <Catalog>
    <col0>      File f = new File(getSysPath());</col0>
  </Catalog>
 
"      if (f.exists()) {"
  <Catalog>
    <col0>      if (f.exists()) {</col0>
  </Catalog>
 
"        int reply = JOptionPane.showConfirmDialog(jf.getContentPane()"
  <Catalog>
    <col0>        int reply = JOptionPane.showConfirmDialog(jf.getContentPane()</col0>
  </Catalog>
 
"          .findComponentAt(1, 351),"
  <Catalog>
    <col0>          .findComponentAt(1, 351),</col0>
  </Catalog>
 
"          "Are you sure you want to overwrite " + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>          Are you sure you want to overwrite   jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"          .toString().trim() + "?");"
  <Catalog>
    <col0>          .toString().trim()  ?);</col0>
  </Catalog>
 
"        if (reply == JOptionPane.YES_OPTION) {"
  <Catalog>
    <col0>        if (reply == JOptionPane.YES_OPTION) {</col0>
  </Catalog>
 
"          saveAll();"
  <Catalog>
    <col0>          saveAll();</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        f.mkdir();"
  <Catalog>
    <col0>        f.mkdir();</col0>
  </Catalog>
 
"        saveAll();"
  <Catalog>
    <col0>        saveAll();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    jcb2cb(jcb4Sub);"
  <Catalog>
    <col0>    jcb2cb(jcb4Sub);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void jta4AllClick(MouseEvent evt) {"
  <Catalog>
    <col0>  private void jta4AllClick(MouseEvent evt) {</col0>
  </Catalog>
 
"    //<editor-fold defaultstate="collapsed" desc="IFD">"
  <Catalog>
    <col0>    //<editor-fold defaultstate=collapsed desc=IFD></col0>
  </Catalog>
 
"    {"
  <Catalog>
    <col0>    {</col0>
  </Catalog>
 
"      boolean DEBUG = false;"
  <Catalog>
    <col0>      boolean DEBUG = false;</col0>
  </Catalog>
 
"      //DEBUG = false;"
  <Catalog>
    <col0>      //DEBUG = false;</col0>
  </Catalog>
 
"      if (DEBUG) { // true or false"
  <Catalog>
    <col0>      if (DEBUG) { // true or false</col0>
  </Catalog>
 
"        System.out.print(GlobalMethods.comment("=", 80));"
  <Catalog>
    <col0>        System.out.print(GlobalMethods.comment(=, 80));</col0>
  </Catalog>
 
"        System.out.println("\t" + Thread.currentThread().getStackTrace()[1]"
  <Catalog>
    <col0>        System.out.println(\t  Thread.currentThread().getStackTrace()[1]</col0>
  </Catalog>
 
"          .getMethodName());"
  <Catalog>
    <col0>          .getMethodName());</col0>
  </Catalog>
 
"        //System.out.println("" + " = " + );"
  <Catalog>
    <col0>        //System.out.println(   =   );</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//</editor-fold>"
  <Catalog>
    <col0>//</editor-fold></col0>
  </Catalog>
 
"    if (evt.getClickCount() > 1) {"
  <Catalog>
    <col0>    if (evt.getClickCount() > 1) {</col0>
  </Catalog>
 
"      if (jcb4All.getSelectedItem().toString().trim().equals("jta4Orb")) {"
  <Catalog>
    <col0>      if (jcb4All.getSelectedItem().toString().trim().equals(jta4Orb)) {</col0>
  </Catalog>
 
"        createOrbitDetail();"
  <Catalog>
    <col0>        createOrbitDetail();</col0>
  </Catalog>
 
"        createSystemPic(jcb4Star.getSelectedItem().toString());"
  <Catalog>
    <col0>        createSystemPic(jcb4Star.getSelectedItem().toString());</col0>
  </Catalog>
 
"        saveFullPic();"
  <Catalog>
    <col0>        saveFullPic();</col0>
  </Catalog>
 
"        loadOrbitPics();"
  <Catalog>
    <col0>        loadOrbitPics();</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"//      File f = new File(getSysPath());"
  <Catalog>
    <col0>//      File f = new File(getSysPath());</col0>
  </Catalog>
 
"//      if (f.exists() & "jta4Orb".equals(jcb4All.getSelectedItem().toString())) {"
  <Catalog>
    <col0>//      if (f.exists() & jta4Orb.equals(jcb4All.getSelectedItem().toString())) {</col0>
  </Catalog>
 
"//        int reply = JOptionPane.showConfirmDialog(jf,"
  <Catalog>
    <col0>//        int reply = JOptionPane.showConfirmDialog(jf,</col0>
  </Catalog>
 
"//          "Are you sure you want to overwrite " + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>//          Are you sure you want to overwrite   jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"//          .toString().trim() + "?");"
  <Catalog>
    <col0>//          .toString().trim()  ?);</col0>
  </Catalog>
 
"//        if (reply == JOptionPane.YES_OPTION) {"
  <Catalog>
    <col0>//        if (reply == JOptionPane.YES_OPTION) {</col0>
  </Catalog>
 
"//          saveAll();"
  <Catalog>
    <col0>//          saveAll();</col0>
  </Catalog>
 
"//        }"
  <Catalog>
    <col0>//        }</col0>
  </Catalog>
 
"//      } else {"
  <Catalog>
    <col0>//      } else {</col0>
  </Catalog>
 
"//        f.mkdir();"
  <Catalog>
    <col0>//        f.mkdir();</col0>
  </Catalog>
 
"//        saveAll();"
  <Catalog>
    <col0>//        saveAll();</col0>
  </Catalog>
 
"//      }"
  <Catalog>
    <col0>//      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void createSystemPic(String star) {"
  <Catalog>
    <col0>  private void createSystemPic(String star) {</col0>
  </Catalog>
 
"    getStar();"
  <Catalog>
    <col0>    getStar();</col0>
  </Catalog>
 
"    int s = 600;"
  <Catalog>
    <col0>    int s = 600;</col0>
  </Catalog>
 
"    int d = s / 20;"
  <Catalog>
    <col0>    int d = s / 20;</col0>
  </Catalog>
 
"    int n = 0;"
  <Catalog>
    <col0>    int n = 0;</col0>
  </Catalog>
 
"    BufferedImage bi = new BufferedImage(s, s, TYPE_INT_ARGB);"
  <Catalog>
    <col0>    BufferedImage bi = new BufferedImage(s, s, TYPE_INT_ARGB);</col0>
  </Catalog>
 
"    Graphics g = bi.createGraphics();//panel4Orbit.getGraphics();//"
  <Catalog>
    <col0>    Graphics g = bi.createGraphics();//panel4Orbit.getGraphics();//</col0>
  </Catalog>
 
"    Graphics2D g2 = (Graphics2D) g;"
  <Catalog>
    <col0>    Graphics2D g2 = (Graphics2D) g;</col0>
  </Catalog>
 
"    col = Color.white;"
  <Catalog>
    <col0>    col = Color.white;</col0>
  </Catalog>
 
"    g2.setColor(col);"
  <Catalog>
    <col0>    g2.setColor(col);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, s, s);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, s, s);</col0>
  </Catalog>
 
"    col = getStarCol();"
  <Catalog>
    <col0>    col = getStarCol();</col0>
  </Catalog>
 
"    g2.setColor(col);"
  <Catalog>
    <col0>    g2.setColor(col);</col0>
  </Catalog>
 
"    g2.fillOval(-20, -20, 40, 40);"
  <Catalog>
    <col0>    g2.fillOval(-20, -20, 40, 40);</col0>
  </Catalog>
 
"    col = Color.black;"
  <Catalog>
    <col0>    col = Color.black;</col0>
  </Catalog>
 
"    g2.setColor(col);"
  <Catalog>
    <col0>    g2.setColor(col);</col0>
  </Catalog>
 
"    g2.drawString(star, 15, 15);"
  <Catalog>
    <col0>    g2.drawString(star, 15, 15);</col0>
  </Catalog>
 
"    for (int j = 0; j < orbits; j++) {"
  <Catalog>
    <col0>    for (int j = 0; j < orbits; j) {</col0>
  </Catalog>
 
"      n = d * (1 + j);"
  <Catalog>
    <col0>      n = d * (1  j);</col0>
  </Catalog>
 
"      int hz = Integer.parseInt(GlobalMethods.getHZ(jcb4Star.getSelectedItem()"
  <Catalog>
    <col0>      int hz = Integer.parseInt(GlobalMethods.getHZ(jcb4Star.getSelectedItem()</col0>
  </Catalog>
 
"        .toString()));"
  <Catalog>
    <col0>        .toString()));</col0>
  </Catalog>
 
"      if (!"".equals(orbit[j])) {"
  <Catalog>
    <col0>      if (!.equals(orbit[j])) {</col0>
  </Catalog>
 
"        if (j < hz - 1) {"
  <Catalog>
    <col0>        if (j < hz - 1) {</col0>
  </Catalog>
 
"          g2.setColor(Color.red);"
  <Catalog>
    <col0>          g2.setColor(Color.red);</col0>
  </Catalog>
 
"        } else if (j > hz + 1) {"
  <Catalog>
    <col0>        } else if (j > hz  1) {</col0>
  </Catalog>
 
"          g2.setColor(Color.blue);"
  <Catalog>
    <col0>          g2.setColor(Color.blue);</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          g2.setColor(Color.green);"
  <Catalog>
    <col0>          g2.setColor(Color.green);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        g2.drawOval(-n, -n, 2 * n, 2 * n);"
  <Catalog>
    <col0>        g2.drawOval(-n, -n, 2 * n, 2 * n);</col0>
  </Catalog>
 
"        g2.setColor(Color.lightGray);"
  <Catalog>
    <col0>        g2.setColor(Color.lightGray);</col0>
  </Catalog>
 
"        if (orbit[j].contains(CRLF)) {"
  <Catalog>
    <col0>        if (orbit[j].contains(CRLF)) {</col0>
  </Catalog>
 
"          string = orbit[j].substring(0, orbit[j].indexOf("\n"));"
  <Catalog>
    <col0>          string = orbit[j].substring(0, orbit[j].indexOf(\n));</col0>
  </Catalog>
 
"        } else {"
  <Catalog>
    <col0>        } else {</col0>
  </Catalog>
 
"          string = orbit[j];"
  <Catalog>
    <col0>          string = orbit[j];</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        if (string.contains("Mainworld")) {"
  <Catalog>
    <col0>        if (string.contains(Mainworld)) {</col0>
  </Catalog>
 
"          g2.setColor(Color.black);"
  <Catalog>
    <col0>          g2.setColor(Color.black);</col0>
  </Catalog>
 
"        }"
  <Catalog>
    <col0>        }</col0>
  </Catalog>
 
"        g2.drawString("" + j + " = " + string, 10, n + 10);"
  <Catalog>
    <col0>        g2.drawString(  j   =   string, 10, n  10);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    int n1;"
  <Catalog>
    <col0>    int n1;</col0>
  </Catalog>
 
"    int n2;"
  <Catalog>
    <col0>    int n2;</col0>
  </Catalog>
 
"    int n3;"
  <Catalog>
    <col0>    int n3;</col0>
  </Catalog>
 
"    int d1;"
  <Catalog>
    <col0>    int d1;</col0>
  </Catalog>
 
"    int d2;"
  <Catalog>
    <col0>    int d2;</col0>
  </Catalog>
 
"    int d3;"
  <Catalog>
    <col0>    int d3;</col0>
  </Catalog>
 
"    n1 = getD1000Limit(Stars[jcb4Star.getSelectedIndex()]);"
  <Catalog>
    <col0>    n1 = getD1000Limit(Stars[jcb4Star.getSelectedIndex()]);</col0>
  </Catalog>
 
"    d1 = d * (n1 + 1);"
  <Catalog>
    <col0>    d1 = d * (n1  1);</col0>
  </Catalog>
 
"    g2.setColor(Color.gray);"
  <Catalog>
    <col0>    g2.setColor(Color.gray);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, d1, 5);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, d1, 5);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, 5, d1);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, 5, d1);</col0>
  </Catalog>
 
"    n2 = getD100Limit(Stars[jcb4Star.getSelectedIndex()]);"
  <Catalog>
    <col0>    n2 = getD100Limit(Stars[jcb4Star.getSelectedIndex()]);</col0>
  </Catalog>
 
"    d2 = d * (n2 + 1);"
  <Catalog>
    <col0>    d2 = d * (n2  1);</col0>
  </Catalog>
 
"    g2.setColor(Color.blue);"
  <Catalog>
    <col0>    g2.setColor(Color.blue);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, d2, 5);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, d2, 5);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, 5, d2);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, 5, d2);</col0>
  </Catalog>
 
"    n3 = getD10Limit(Stars[jcb4Star.getSelectedIndex()]);"
  <Catalog>
    <col0>    n3 = getD10Limit(Stars[jcb4Star.getSelectedIndex()]);</col0>
  </Catalog>
 
"    if (n3 < 0) {"
  <Catalog>
    <col0>    if (n3 < 0) {</col0>
  </Catalog>
 
"      n3 = 0;"
  <Catalog>
    <col0>      n3 = 0;</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    d3 = d * (1 + n3);"
  <Catalog>
    <col0>    d3 = d * (1  n3);</col0>
  </Catalog>
 
"    g2.setColor(Color.pink);"
  <Catalog>
    <col0>    g2.setColor(Color.pink);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, d3, 5);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, d3, 5);</col0>
  </Catalog>
 
"    g2.fillRect(0, 0, 5, d3);"
  <Catalog>
    <col0>    g2.fillRect(0, 0, 5, d3);</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      File f = new File(Panel4T5Locator.getSysPath() + FS + jcb4Sys"
  <Catalog>
    <col0>      File f = new File(Panel4T5Locator.getSysPath()  FS  jcb4Sys</col0>
  </Catalog>
 
"        .getSelectedItem().toString().trim() + FS + jcb4Sys.getSelectedItem()"
  <Catalog>
    <col0>        .getSelectedItem().toString().trim()  FS  jcb4Sys.getSelectedItem()</col0>
  </Catalog>
 
"        .toString().substring(0, 4) + "-Orbits.gif");"
  <Catalog>
    <col0>        .toString().substring(0, 4)  -Orbits.gif);</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex1) {"
  <Catalog>
    <col0>    } catch (IOException ex1) {</col0>
  </Catalog>
 
"      System.out.println("6375" + " = " + ex1);"
  <Catalog>
    <col0>      System.out.println(6375   =   ex1);</col0>
  </Catalog>
 
"    } finally {"
  <Catalog>
    <col0>    } finally {</col0>
  </Catalog>
 
"      System.out.println("6666");"
  <Catalog>
    <col0>      System.out.println(6666);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"//    loadOrbitPics();"
  <Catalog>
    <col0>//    loadOrbitPics();</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  public static void saveFullPic() {"
  <Catalog>
    <col0>  public static void saveFullPic() {</col0>
  </Catalog>
 
"    jf.setSize(1260, 1000);"
  <Catalog>
    <col0>    jf.setSize(1260, 1000);</col0>
  </Catalog>
 
"    File f = new File(Panel4T5Locator.getSysPath() + FS + jcb4Sys"
  <Catalog>
    <col0>    File f = new File(Panel4T5Locator.getSysPath()  FS  jcb4Sys</col0>
  </Catalog>
 
"      .getSelectedItem().toString().trim() + FS + jcb4Sys"
  <Catalog>
    <col0>      .getSelectedItem().toString().trim()  FS  jcb4Sys</col0>
  </Catalog>
 
"      .getSelectedItem().toString().substring(0, 4) + "-Maps.gif");"
  <Catalog>
    <col0>      .getSelectedItem().toString().substring(0, 4)  -Maps.gif);</col0>
  </Catalog>
 
"    Graphics g = panel4Sys.getGraphics();"
  <Catalog>
    <col0>    Graphics g = panel4Sys.getGraphics();</col0>
  </Catalog>
 
"    Robot r = null;"
  <Catalog>
    <col0>    Robot r = null;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      r = new Robot();"
  <Catalog>
    <col0>      r = new Robot();</col0>
  </Catalog>
 
"    } catch (AWTException ex) {"
  <Catalog>
    <col0>    } catch (AWTException ex) {</col0>
  </Catalog>
 
"      System.out.println("6345" + " = " + ex);"
  <Catalog>
    <col0>      System.out.println(6345   =   ex);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    bi = r.createScreenCapture(new Rectangle("
  <Catalog>
    <col0>    bi = r.createScreenCapture(new Rectangle(</col0>
  </Catalog>
 
"      panel4Maps.getLocationOnScreen().x, panel4Sys.getLocationOnScreen().y, 600,"
  <Catalog>
    <col0>      panel4Maps.getLocationOnScreen().x, panel4Sys.getLocationOnScreen().y, 600,</col0>
  </Catalog>
 
"      600));"
  <Catalog>
    <col0>      600));</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      ImageIO.write(bi, "gif", f);"
  <Catalog>
    <col0>      ImageIO.write(bi, gif, f);</col0>
  </Catalog>
 
"    } catch (IOException ex1) {"
  <Catalog>
    <col0>    } catch (IOException ex1) {</col0>
  </Catalog>
 
"      System.out.println("6352" + " = " + ex1);"
  <Catalog>
    <col0>      System.out.println(6352   =   ex1);</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  private void loadOrbitPics() {"
  <Catalog>
    <col0>  private void loadOrbitPics() {</col0>
  </Catalog>
 
"    BufferedImage bi = null;"
  <Catalog>
    <col0>    BufferedImage bi = null;</col0>
  </Catalog>
 
"    Graphics g = panel4Maps.getGraphics();"
  <Catalog>
    <col0>    Graphics g = panel4Maps.getGraphics();</col0>
  </Catalog>
 
"    File f;"
  <Catalog>
    <col0>    File f;</col0>
  </Catalog>
 
"    try {"
  <Catalog>
    <col0>    try {</col0>
  </Catalog>
 
"      //Main orbital map"
  <Catalog>
    <col0>      //Main orbital map</col0>
  </Catalog>
 
"      f = new File(getSysPath() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>      f = new File(getSysPath()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .trim() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>        .trim()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .substring(0, 4) + "-Orbits.gif");"
  <Catalog>
    <col0>        .substring(0, 4)  -Orbits.gif);</col0>
  </Catalog>
 
"      if (f.exists()) {"
  <Catalog>
    <col0>      if (f.exists()) {</col0>
  </Catalog>
 
"        bi = ImageIO.read(f);"
  <Catalog>
    <col0>        bi = ImageIO.read(f);</col0>
  </Catalog>
 
"        g.drawImage(bi, 0, 0, null);"
  <Catalog>
    <col0>        g.drawImage(bi, 0, 0, null);</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        System.out.println("6966 = NO");"
  <Catalog>
    <col0>        System.out.println(6966 = NO);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //SubSector map"
  <Catalog>
    <col0>      //SubSector map</col0>
  </Catalog>
 
"      f = new File(getSysPath() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>      f = new File(getSysPath()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .trim() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>        .trim()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .substring(0, 4) + "-Subsector.gif");"
  <Catalog>
    <col0>        .substring(0, 4)  -Subsector.gif);</col0>
  </Catalog>
 
"      if (f.exists()) {"
  <Catalog>
    <col0>      if (f.exists()) {</col0>
  </Catalog>
 
"        bi = ImageIO.read(f);"
  <Catalog>
    <col0>        bi = ImageIO.read(f);</col0>
  </Catalog>
 
"        g.setColor(Color.white);"
  <Catalog>
    <col0>        g.setColor(Color.white);</col0>
  </Catalog>
 
"        g.fillRect(600 - bi.getWidth() + 4, 0, bi.getWidth(), 245);"
  <Catalog>
    <col0>        g.fillRect(600 - bi.getWidth()  4, 0, bi.getWidth(), 245);</col0>
  </Catalog>
 
"        g.setColor(Color.black);"
  <Catalog>
    <col0>        g.setColor(Color.black);</col0>
  </Catalog>
 
"        g.drawImage(bi, 600 - bi.getWidth() + 4, -10, null);"
  <Catalog>
    <col0>        g.drawImage(bi, 600 - bi.getWidth()  4, -10, null);</col0>
  </Catalog>
 
"        g.fillRect(600, 0, 610, 245);"
  <Catalog>
    <col0>        g.fillRect(600, 0, 610, 245);</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        System.out.println("7113 = NO");"
  <Catalog>
    <col0>        System.out.println(7113 = NO);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      //System Box"
  <Catalog>
    <col0>      //System Box</col0>
  </Catalog>
 
"      g.drawLine(395, 0, 395, 245);"
  <Catalog>
    <col0>      g.drawLine(395, 0, 395, 245);</col0>
  </Catalog>
 
"      g.drawLine(395, 245, 600, 245);"
  <Catalog>
    <col0>      g.drawLine(395, 245, 600, 245);</col0>
  </Catalog>
 
"      f = new File(getSysPath() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>      f = new File(getSysPath()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .trim() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>        .trim()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .substring(0, 4) + "-System.gif");"
  <Catalog>
    <col0>        .substring(0, 4)  -System.gif);</col0>
  </Catalog>
 
"      if (f.exists()) {"
  <Catalog>
    <col0>      if (f.exists()) {</col0>
  </Catalog>
 
"        bi = ImageIO.read(f);"
  <Catalog>
    <col0>        bi = ImageIO.read(f);</col0>
  </Catalog>
 
"        g.drawImage(bi, 400, 280, null);"
  <Catalog>
    <col0>        g.drawImage(bi, 400, 280, null);</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        System.out.println("7120 = NO");"
  <Catalog>
    <col0>        System.out.println(7120 = NO);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      g.drawLine(399, 280, 399, 480);"
  <Catalog>
    <col0>      g.drawLine(399, 280, 399, 480);</col0>
  </Catalog>
 
"      g.drawLine(399, 280, 600, 280);"
  <Catalog>
    <col0>      g.drawLine(399, 280, 600, 280);</col0>
  </Catalog>
 
"      g.drawLine(399, 480, 600, 480);"
  <Catalog>
    <col0>      g.drawLine(399, 480, 600, 480);</col0>
  </Catalog>
 
"      //UWP Chart"
  <Catalog>
    <col0>      //UWP Chart</col0>
  </Catalog>
 
"      f = new File(getSysPath() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>      f = new File(getSysPath()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .trim() + FS + jcb4Sys.getSelectedItem().toString()"
  <Catalog>
    <col0>        .trim()  FS  jcb4Sys.getSelectedItem().toString()</col0>
  </Catalog>
 
"        .substring(0, 4) + "-UWP.gif");"
  <Catalog>
    <col0>        .substring(0, 4)  -UWP.gif);</col0>
  </Catalog>
 
"      if (f.exists()) {"
  <Catalog>
    <col0>      if (f.exists()) {</col0>
  </Catalog>
 
"        bi = ImageIO.read(f);"
  <Catalog>
    <col0>        bi = ImageIO.read(f);</col0>
  </Catalog>
 
"        g.drawImage(bi, 600 - bi.getWidth(), 600 - bi.getHeight(), null);"
  <Catalog>
    <col0>        g.drawImage(bi, 600 - bi.getWidth(), 600 - bi.getHeight(), null);</col0>
  </Catalog>
 
"      } else {"
  <Catalog>
    <col0>      } else {</col0>
  </Catalog>
 
"        System.out.println("7127 = NO");"
  <Catalog>
    <col0>        System.out.println(7127 = NO);</col0>
  </Catalog>
 
"      }"
  <Catalog>
    <col0>      }</col0>
  </Catalog>
 
"      g.drawLine(600 - bi.getWidth(), 600 - bi.getHeight(), 600, 600 - bi"
  <Catalog>
    <col0>      g.drawLine(600 - bi.getWidth(), 600 - bi.getHeight(), 600, 600 - bi</col0>
  </Catalog>
 
"        .getHeight());"
  <Catalog>
    <col0>        .getHeight());</col0>
  </Catalog>
 
"      g.drawLine(600 - bi.getWidth(), 600 - bi.getHeight(), 600 - bi.getWidth(),"
  <Catalog>
    <col0>      g.drawLine(600 - bi.getWidth(), 600 - bi.getHeight(), 600 - bi.getWidth(),</col0>
  </Catalog>
 
"        600);"
  <Catalog>
    <col0>        600);</col0>
  </Catalog>
 
"    } catch (IOException ex) {"
  <Catalog>
    <col0>    } catch (IOException ex) {</col0>
  </Catalog>
 
"      System.out.println("7130" + " = " + ex.toString());"
  <Catalog>
    <col0>      System.out.println(7130   =   ex.toString());</col0>
  </Catalog>
 
"    }"
  <Catalog>
    <col0>    }</col0>
  </Catalog>
 
"    g.drawLine(0, 0, 600, 0);"
  <Catalog>
    <col0>    g.drawLine(0, 0, 600, 0);</col0>
  </Catalog>
 
"    g.drawLine(600, 0, 600, 600);"
  <Catalog>
    <col0>    g.drawLine(600, 0, 600, 600);</col0>
  </Catalog>
 
"    g.drawLine(600, 600, 0, 600);"
  <Catalog>
    <col0>    g.drawLine(600, 600, 0, 600);</col0>
  </Catalog>
 
"    g.drawLine(0, 600, 0, 0);"
  <Catalog>
    <col0>    g.drawLine(0, 600, 0, 0);</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"  //////////////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>  //////////////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"  private void xml() {"
  <Catalog>
    <col0>  private void xml() {</col0>
  </Catalog>
 
"    SwingUtilities.invokeLater(() -> {"
  <Catalog>
    <col0>    SwingUtilities.invokeLater(() -> {</col0>
  </Catalog>
 
"      final JFXPanel jfx = new JFXPanel();"
  <Catalog>
    <col0>      final JFXPanel jfx = new JFXPanel();</col0>
  </Catalog>
 
"//          jfx.setScene(fx.xml.XML.getScene());"
  <Catalog>
    <col0>//          jfx.setScene(fx.xml.XML.getScene());</col0>
  </Catalog>
 
"      JFrame f4 = new Frame4();"
  <Catalog>
    <col0>      JFrame f4 = new Frame4();</col0>
  </Catalog>
 
"      f4.getContentPane().add(jfx);"
  <Catalog>
    <col0>      f4.getContentPane().add(jfx);</col0>
  </Catalog>
 
"      f4.setSize(400, 100);"
  <Catalog>
    <col0>      f4.setSize(400, 100);</col0>
  </Catalog>
 
"      f4.setVisible(true);"
  <Catalog>
    <col0>      f4.setVisible(true);</col0>
  </Catalog>
 
"      Platform.runLater(() -> {"
  <Catalog>
    <col0>      Platform.runLater(() -> {</col0>
  </Catalog>
 
"        ////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>        ////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"        Button but0 = new Button("XPathTester");"
  <Catalog>
    <col0>        Button but0 = new Button(XPathTester);</col0>
  </Catalog>
 
"        but0.setOnAction(e -> {"
  <Catalog>
    <col0>        but0.setOnAction(e -> {</col0>
  </Catalog>
 
"          System.out.println(but0.getText());"
  <Catalog>
    <col0>          System.out.println(but0.getText());</col0>
  </Catalog>
 
"          fx.xpath.XPathTester xpt = new fx.xpath.XPathTester();"
  <Catalog>
    <col0>          fx.xpath.XPathTester xpt = new fx.xpath.XPathTester();</col0>
  </Catalog>
 
"          Stage stage = new Stage();"
  <Catalog>
    <col0>          Stage stage = new Stage();</col0>
  </Catalog>
 
"          try {"
  <Catalog>
    <col0>          try {</col0>
  </Catalog>
 
"            xpt.main(args);"
  <Catalog>
    <col0>            xpt.main(args);</col0>
  </Catalog>
 
"          } catch (Exception ex) {"
  <Catalog>
    <col0>          } catch (Exception ex) {</col0>
  </Catalog>
 
"            Logger.getLogger(Panel4T5Locator.class.getName()).log(Level.SEVERE,"
  <Catalog>
    <col0>            Logger.getLogger(Panel4T5Locator.class.getName()).log(Level.SEVERE,</col0>
  </Catalog>
 
"              null, ex);"
  <Catalog>
    <col0>              null, ex);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        });"
  <Catalog>
    <col0>        });</col0>
  </Catalog>
 
"        ////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>        ////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"        Button but1 = new Button("XML");"
  <Catalog>
    <col0>        Button but1 = new Button(XML);</col0>
  </Catalog>
 
"        but1.setOnAction(e -> {"
  <Catalog>
    <col0>        but1.setOnAction(e -> {</col0>
  </Catalog>
 
"          System.out.println(but1.getText());"
  <Catalog>
    <col0>          System.out.println(but1.getText());</col0>
  </Catalog>
 
"          fx.xml.XML xml = new fx.xml.XML();"
  <Catalog>
    <col0>          fx.xml.XML xml = new fx.xml.XML();</col0>
  </Catalog>
 
"          Stage stage = new Stage();"
  <Catalog>
    <col0>          Stage stage = new Stage();</col0>
  </Catalog>
 
"          stage.setTitle("XML");"
  <Catalog>
    <col0>          stage.setTitle(XML);</col0>
  </Catalog>
 
"          try {"
  <Catalog>
    <col0>          try {</col0>
  </Catalog>
 
"            xml.start(stage);"
  <Catalog>
    <col0>            xml.start(stage);</col0>
  </Catalog>
 
"          } catch (Exception ex) {"
  <Catalog>
    <col0>          } catch (Exception ex) {</col0>
  </Catalog>
 
"            Logger.getLogger(Panel4T5Locator.class.getName()).log(Level.SEVERE,"
  <Catalog>
    <col0>            Logger.getLogger(Panel4T5Locator.class.getName()).log(Level.SEVERE,</col0>
  </Catalog>
 
"              null, ex);"
  <Catalog>
    <col0>              null, ex);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        });"
  <Catalog>
    <col0>        });</col0>
  </Catalog>
 
"        ////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>        ////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"        Button but2 = new Button("MultiText");"
  <Catalog>
    <col0>        Button but2 = new Button(MultiText);</col0>
  </Catalog>
 
"        but2.setOnAction(e -> {"
  <Catalog>
    <col0>        but2.setOnAction(e -> {</col0>
  </Catalog>
 
"          System.out.println(but2.getText());"
  <Catalog>
    <col0>          System.out.println(but2.getText());</col0>
  </Catalog>
 
"          MultiText mt = new fx.multitext.MultiText();"
  <Catalog>
    <col0>          MultiText mt = new fx.multitext.MultiText();</col0>
  </Catalog>
 
"          Stage stage = new Stage();"
  <Catalog>
    <col0>          Stage stage = new Stage();</col0>
  </Catalog>
 
"          stage.setTitle("MultiText");"
  <Catalog>
    <col0>          stage.setTitle(MultiText);</col0>
  </Catalog>
 
"          try {"
  <Catalog>
    <col0>          try {</col0>
  </Catalog>
 
"            mt.start(stage);"
  <Catalog>
    <col0>            mt.start(stage);</col0>
  </Catalog>
 
"          } catch (Exception ex) {"
  <Catalog>
    <col0>          } catch (Exception ex) {</col0>
  </Catalog>
 
"            Logger.getLogger(Panel4T5Locator.class.getName()).log(Level.SEVERE,"
  <Catalog>
    <col0>            Logger.getLogger(Panel4T5Locator.class.getName()).log(Level.SEVERE,</col0>
  </Catalog>
 
"              null, ex);"
  <Catalog>
    <col0>              null, ex);</col0>
  </Catalog>
 
"          }"
  <Catalog>
    <col0>          }</col0>
  </Catalog>
 
"        });"
  <Catalog>
    <col0>        });</col0>
  </Catalog>
 
"        ////////////////////////////////////////////////////////////////////"
  <Catalog>
    <col0>        ////////////////////////////////////////////////////////////////////</col0>
  </Catalog>
 
"//        FlowPane pane = new FlowPane(but0, but1);"
  <Catalog>
    <col0>//        FlowPane pane = new FlowPane(but0, but1);</col0>
  </Catalog>
 
"        FlowPane pane = new FlowPane(but0, but1, but2);"
  <Catalog>
    <col0>        FlowPane pane = new FlowPane(but0, but1, but2);</col0>
  </Catalog>
 
"        Scene scene = new Scene(pane);"
  <Catalog>
    <col0>        Scene scene = new Scene(pane);</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"        jfx.setScene(scene);"
  <Catalog>
    <col0>        jfx.setScene(scene);</col0>
  </Catalog>
 
"//        but0.fire();"
  <Catalog>
    <col0>//        but0.fire();</col0>
  </Catalog>
 
"        but1.fire();"
  <Catalog>
    <col0>        but1.fire();</col0>
  </Catalog>
 
"//        but2.fire();"
  <Catalog>
    <col0>//        but2.fire();</col0>
  </Catalog>
 
"      });"
  <Catalog>
    <col0>      });</col0>
  </Catalog>
 
"    });"
  <Catalog>
    <col0>    });</col0>
  </Catalog>
 
"  }"
  <Catalog>
    <col0>  }</col0>
  </Catalog>
 
""
  <Catalog>
    <col0></col0>
  </Catalog>
 
"}"
  <Catalog>
    <col0>}</col0>
  </Catalog>
 
</C:\\T5\_JS\Catalogs>